OpenSakuraMenu
{
	"\_q\b4%(ch)..."
	--
	MenuRun
}

MenuRun
 {	
 	wd = GetWeekDay
 	ap = GetAP
 	nowmin = Getnowmin
 	nowhour = Getnowhour
	--
	"\n\n" 
	--
	if lastTalk != ""; "\![*]\q[Can you repeat?,OnLastTalk]\n"
	--
 	"\![*]\q[Say something,altalk]\n\n[half]"
 	"\![*]\q[Talk to me,altalk]\n\n[half]"
	--
	"\![*]\q[Language,langstuff]\n/
	\![*]\q[Generators,generators]\n/
	\![*]\q[World Planning,worldplan]\n/
	\![*]\q[Images,imglib]\n/
	\![*]\q[Ask,askomega]\n\n[half]"
	--
	"\![*]\q[Config Menu,configmenu]\n/
	\![*]\q[Functions,dosomething]\n\n[half]/
 	\![*]\q[Nevermind,CANCEL]\n\n%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
}

Select.askomega
{
	"\b4\_q%(ch)What would you like to know?\n\n[half]\f[bold,1]Functions:\f[bold,0]\n\n[half]"
	--
	"\![*]\q[Uploading images,OnAskOmega,imgs]\n/
	\![*]\q[Portraits,OnAskOmega,port]\n/
	\![*]\q[Maps,OnAskOmega,map]\n/
	\![*]\q[Reference Sheets,OnAskOmega,ref]\n/
	\![*]\q[Deleting laws,OnAskOmega,law]\n"
	--
	"\n\n[half]\f[bold,1]Omega:\f[bold,0]\n\n[half]"
	--
	"\![*]\q[Who are you?,OnAskOmega,him]\n/
	//\![*]\q[How are you?,OnAskOmega,mood]\n/
	//\![*]\q[How was your day?,OnAskOmega,day]\n/
	\![*]\q[How old are you?,OnAskOmega,age]\n/
	\n\n[half]\![*]\q[Nevermind,Cancel] or \![*]\q[Go back,BACKTOMENU]\e"
}

OnAskOmega
{
	case reference0
	{
		when "port"
		{
			"%(ch)Make a portrait according to this\![open,file,template.png] templates size, when you upload it, it will be shown above all info."
		}
		when "mood"
		{
			if friendship > 50
			{
				case currmood
				{
					when 0 //thoughtfull
					{
						if mood[1] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I'm good, today was quite a calm day."
						}

						if mood[2] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I'm good, today I had little work so I could just relax."
						}

						if mood[3] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I feel sluggish from lack of sleep but it's nothing to worry about."
						}

						if mood[4] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 "
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}

						"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts"
					}
					when 1 //happy
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 2 //relaxed
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 3 //sleepy
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 4 //bored
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 5 //sad
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 6 //annoyed
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 7 //angry
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 8 //exited
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 9 //tired
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
				}
			}
			else
			{
				case currmood
				{
					when 0 //thoughtfull
					{
						if mood[1] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I'm good, today was quite a calm day"
						}

						if mood[2] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I'm good, today I had little work so I could just relax"
						}

						if mood[3] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 I feel sluggish from lack of sleep but it's nothing to worry about"
						}

						if mood[4] > 3
						{
							"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts\x\cHow am I?\w5 "
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}

						"%(ch).\w7 . \w7 .\w7 oh, did you ask me something? Sorry I got lost in thoughts"
					}
					when 1 //happy
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 2 //relaxed
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 3 //sleepy
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 4 //bored
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 5 //sad
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 6 //annoyed
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 7 //angry
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 8 //exited
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[9] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
					when 9 //tired
					{
						if mood[0] > 3
						{
							"%(ch)"
						}

						if mood[1] > 3
						{
							"%(ch)"
						}

						if mood[2] > 3
						{
							"%(ch)"
						}

						if mood[3] > 3
						{
							"%(ch)"
						}

						if mood[4] > 3
						{
							"%(ch)"
						}

						if mood[5] > 3
						{
							"%(ch)"
						}

						if mood[6] > 3
						{
							"%(ch)"
						}

						if mood[7] > 3
						{
							"%(ch)"
						}

						if mood[8] > 3
						{
							"%(ch)"
						}

						if mood[10] > 3
						{
							"%(ch)"
						}
					}
				}
			}
		}
		when "map"
		{
			"%(ch)To show maps click 'show map', on the bottom of the info."
		}
		when "ref"
		{
			"%(ch)You can have one main reference sheet that you will be able to access directly for the page, the rest is saved separatly."
		}
		when "imgs"
		{
			"\b4%(ch)If you want me to save an image you have to drop it on me.\n\n[half]If you want to upload a portrait name the image the same as the character/plant/animal/place/item.\n\n[half]If you want to save a map name the image like the country/place or add '_map' to the end.\n\n[half]If you want to save a reference sheet add '_ref' to the end of the images name.\n\n[half]Any other images I can save in one of my books if you want me to do it."
		}
		when "law"
		{
			"%(ch)To delete a law click on 'remove law' and then on the number of the law you want to delete."
		}
		when "him"
		{
			"%(ch)I'm a librarian."
			"%(ch)I'm a guardian."
			"%(ch)I'm gods servant."
		}
		when "age"
		{
			"%(ch)Age doesn't matter when you are already dead."
			"%(ch)Guardians live outside of time."
			"%(ch)I don't know but it doesn't really matter."
		}
	}
	--
	"\x\c"
	--
	Select.askomega
}

//======================================IMAGE LIBRARY==============================================
Select.imglib
{
	imglist = ""
	imglist +="\f[bold,1]\_q\b4%(ch)Your images\f[bold,0]:\n\n"
	--
	_imgs = FENUM('images','+')
	if _imgs == ""
	{
		imglist +="\f[bold,1]You don't have any images\f[bold,0]\n"
	}
	else
	{
		_trueimg = SPLIT(_imgs,'+')
		_imgs = REPLACE(_imgs,'.png','')
		_imgs = REPLACE(_imgs,'.jpg','')
		_imgs = REPLACE(_imgs,'.jpeg','')
		_imgs = REPLACE(_imgs,'.bmp','')
		_imgs = SPLIT(_imgs,'+')
		--
		for _i=0;_i<ARRAYSIZE(_imgs);_i++
		{
			imglist += "\q[" + _imgs[_i] + ",OnOpenIMG," + _imgs[_i] + "," + _trueimg[_i] +"]\n"
		}
		
	}
	--
	if delimg == "ON"; imglist += "\f[size,20]\n\f[color,230, 39, 25]\q[-,delim]\f[color,default] | \f[size,default]"
	else; imglist += "\f[size,20]\n\q[-,delim] | \f[size,default]"
	--
	if editimg == "ON"; imglist += "\f[color,230, 39, 25]\q[RENAME,edig]\f[color,default]"
	else; imglist += "\q[RENAME,edig]"
	--
	imglist += "\n[half]\n\![*]\q[Nevermind,CANCEL] or \![*]\q[Go Back,BACKTOMENU]\n"
	--
	imglist
}

Select.delim
{
	if delimg == "ON"
	{
		delimg = "OFF"
	}
	else
	{
		delimg = "ON"
		editimg = "OFF"
	}
	--
	Select.imglib
}

Select.edig
{
	if editimg == "ON"
	{
		editimg = "OFF"
	}
	else
	{
		editimg = "ON"
		delimg = "OFF"
	}
	--
	Select.imglib
}

OnOpenIMG
{
	appthing = reference0
	appthing2 = reference1
	--
	if delapp == "ON"
	{
		FDEL("images/%(reference1)")
		--
		"\c"
	}
	elseif editap == "ON"
	{
		"\![open,inputbox,OnReImg,-1]"
	}
	else
	{
		"\![open,file,images/%(reference1)]"
	}
	--
	Select.imglib
}

OnReImg
{
	editap = "OFF"
	appre = SPLIT(appthing2,".")
	FRENAME("images/%(appre[0]).%(appre[1])","images/" +reference0 + "." + appre[1])
	--
	"\c"
	--
	Select.imglib
}

//=======================================SUB MENUS=============================================
Select.langstuff
{
	"\_q\b2%(ch)" 
	--
	"\![*]\q[Generate Language,OnGenConfig,save]\n"
	--
	if langname != ""; "\![*]\q[Generate %(langname) again,OnLanguageGenerator_resave]\n"
	--
	"\![*]\q[Generator Config,OnGenConfig,config]\n/
	\![*]\q[Languages,OnLanguages]\n/
	\![*]\q[Update English Dictionary,updatelib]\n/
	\![*]\q[Translate,OnTranslateLang]\n\n[half]/
	\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,BACKTOMENU]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
}

Select.worldplan
{
	"\_q\b2%(ch)" 
	--
	"\![*]\q[Characters,OnCharacterList]\n/
	\![*]\q[Countries,OnCountries]\n/
	\![*]\q[Places,OnPlances]\n/
	\![*]\q[Animals,OnAnimals]\n/
	\![*]\q[Plants,OnPlants]\n/
	\![*]\q[Items,OnItems]\n/
	\![*]\q[Races,OnRaces]\n\n[half]/
	\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,BACKTOMENU]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"

}


Select.generators
{
	"\_q\b2%(ch)" 
	--
	"\![*]\q[Characters,OnCharacterGen,generator]\n/
	//\![*]\q[Countries,OnCountriesGen]\n/
	//\![*]\q[Races,OnRaceGen]\n/
	\![*]\q[Maps,OnMapGenVar]\n\n[half]/
	\![*]\q[Config,OnCharacterGen,config]\n\n[half]/
	\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,BACKTOMENU]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"

}
//==========================================AI TALK==========================================
Select.altalk
{
	AiTalk
}

OnLastTalk 
{
	"%(lastTalk)\e"
}
//=============================================LANGUAGE LIST=======================================
OnLanguages
{
	langcontent = ""
	--
	langcontent +="\f[bold,1]\_q\b4%(ch)Your Languages:\f[bold,0]:\n\n"
	--
	langfile = FENUM('languages','+')
	if langfile == ""
	{
		langcontent +="\f[bold,1]You havent made any languages\f[bold,0]\![open,file,app]"
	}
	else
	{
		langfile = REPLACE(langfile,'.txt',"")
		langfile = SPLIT(langfile,'+')
		--
		for _i=0;_i<ARRAYSIZE(langfile);_i++
		{
			langcontent += "\![*]\q[" + langfile[_i] + ",OnOpenAPPP," + langfile[_i] + "," + langfile[_i] +"]\n"
		}
	}
	--
	if delapp == "ON"; langcontent += "\f[size,20]\n\f[color,230, 39, 25]\q[-,delap]\f[color,default] | \f[size,default]"
	else; langcontent += "\f[size,20]\n\q[-,delap] | \f[size,default]"
	--
	if editap == "ON"; langcontent += "\f[color,230, 39, 25]\q[RENAME,edap]\f[color,default]"
	else; langcontent += "\q[RENAME,edap]"
	--
	langcontent += "\n[half]\n\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,langstuff]\n"
	--
	"%(langcontent)"
}

Select.delap
{
	if delapp == "ON"
	{
		delapp = "OFF"
	}
	else
	{
		delapp = "ON"
		editap = "OFF"
	}
	--
	OnLanguages
}

Select.edap
{
	if editap == "ON"
	{
		editap = "OFF"
	}
	else
	{
		editap = "ON"
		delapp = "OFF"
	}
	--
	OnLanguages
}

OnOpenAPPP
{
	file = reference0 + ".txt"
	appthing = reference0
	appthing2 = reference1
	--
	if delapp == "ON"
	{
		FDEL("languages/%(file)")
		--
		"\c"
		--
		OnLanguages
	}
	elseif editap == "ON"
	{
		"\![open,inputbox,OnReApp,-1]"
	}
	else
	{
		"\![open,file,languages/%(file)]\e"
	}
	--
	langcontent = ""
	OnLanguages
}

OnReApp
{
	editap = "OFF"
	--
	FRENAME("languages/%(file)","languages/" + reference0 + "." + "txt")
	--
	"\c"
	--
	OnLanguages
}
//====================================================================================
GetWeekDay
{
	if weekday == 0
	{"Sun"}
	elseif weekday == 1
	{"Mon"}
	elseif weekday == 2
	{"Tue"}
	elseif weekday == 3
	{"Wed"}
	elseif weekday == 4
	{"Thu"}
	elseif weekday == 5
	{"Fri"}
	else
	{"Sat"}
}

GetAP
{
 	if hour >= 0 && hour <= 11
	{
		"AM"
	}
 	else
	{
		"PM"
	}
}

Getnowmin
{
	if minute >= 0 && minute <=9
	{
		"0%(minute)"
	}
	else
	{
		"%(minute)"
	}
}

Getnowhour
{
	if hour12 >= 0 && hour12 <=9; "0%(hour12)"
	else; "%(hour12)"
}

Select.BACKTOMENU
{
	OpenSakuraMenu
}
Select.configmenu
{
	TalkConfig
}

TalkConfig
{
	"\b[2]\_q%(ch)" 
	--
	"\f[bold,1]Your name:\f[bold,0] %(username) \f[sup,1](\q[Change it?,TEACHNAME])\f[sup,0]\n"
	--
	"\f[bold,1]Your pronouns:\f[bold,0] %(heshe)/%(himher)/%(hisher) \f[sup,1](\q[Change them?,TEACHPRONOUN])\f[sup,0]\n"
	--
	"\f[bold,1]Your birthday:\f[bold,0] %(birthdayprint) \f[sup,1](\q[Change it?,TEACHBDAY])\f[sup,0]\n\n"
	--
	"\f[bold,1]Talk Rate:\f[bold,0] - every %(talktime) \f[sup,1](\q[Change it,talkinter])\f[sup,0]\n\n"
	--
	"\f[bold,1]Save all images: \f[bold,0]\q[%(igsave),imgs]\n\n"
	--		
	{
	"\![*]Enable Uninstall? (NOW : %(deleteshitai))\n\q[ON,deleteon] \q[OFF,deleteoff]\n\n[half]\n"
	}
	--
	"\![*]\q[Back to the menu,BACKTOMENU]\e"
}

Select.imgs
{
	if igsave == "ON"; igsave = "OFF"
	else; igsave = "ON"
	--
	TalkConfig
}

Select.TEACHPRONOUN
{
	"%(ch)What pronouns do you want?\w5\n\n[half]\_q/
		\![*]\q[He-His-Him,choicemasc]\n/
		\![*]\q[She-Her-Her,choicefem]\n/	
		\![*]\q[They-Their-Them,choiceneither]\e"
}

Select.choicemasc
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	--
	"The pronouns are now he him and his.\e"
}

Select.choicefem
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	--
	"The pronouns are now she her and her.\e"
}

Select.choiceneither
{
	presuffix = "undefine"
	himher = "them"
	heshe = "they"
	hisher = "their"
	--
	"The pronouns are now they them and their.\e"
}

Select.deleteon
{
	deleteshitai = "ON"
	TalkConfig
}

Select.deleteoff
{
	deleteshitai = "OFF"
	TalkConfig
}

Select.TEACHBDAY
{
	dayslot = GetDaySlot 
	--
	"%(ch)What month were you born? \w8Write the number.\![open,inputbox,OnUserBornMonth,-1]\e"
}

OnUserBornMonth
{
	_tempmonth = reference0 
	--
	if _tempmonth >= 1 && _tempmonth <= 12 
	{
	bornmonth = _tempmonth
	bornmonthprint = Printmonth
	"%(ch)So you were born in %(bornmonthprint).\n\w8What day was it?\![open,inputbox,OnUserBornDay,-1]\e"
	}
	else 
	{
	"%(ch)That's not a valid month. Try again.\![open,inputbox,OnUserBornMonth,-1]\e"
	}
}

Printmonth
{
	if bornmonth == 1
	{
		"January"
	}
	elseif bornmonth == 2
	{
		"February"
	}
	elseif bornmonth == 3
	{
		"March"
	}
	elseif bornmonth == 4
	{
		"April"
	}
	elseif bornmonth == 5
	{
		"May"
	}
	elseif bornmonth == 6
	{
		"June"
	}
	elseif bornmonth == 7
	{
		"July"
	}
	elseif bornmonth == 8
	{
		"August"
	}
	elseif bornmonth == 9
	{
		"September"
	}
	elseif bornmonth == 10
	{
		"October"
	}
	elseif bornmonth == 11
	{
		"November"
	}
	else
	{
		"December"
	}
}

Printday
{
	if bornday == 1 || bornday == 21 || bornday == 31; "%(bornday)st"
	elseif bornday == 2 || bornday == 22; "%(bornday)nd"
	elseif bornday == 3 || bornday == 23; "%(bornday)rd"
	else; "%(bornday)th"
}	

OnUserBornDay
{
	tempday = reference0 
	if bornmonth == 1 || bornmonth == 3 || bornmonth == 5 || bornmonth == 7 || bornmonth == 8 || bornmonth == 10 || bornmonth == 12 
	{
		if tempday >= 1 && tempday <= 31 
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else 
		{
			"%(ch)That's not a valid day. Try again.\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}
	elseif bornmonth == 2 
	{
		if tempday >= 1 && tempday <= 29 
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else
		{
			"That's not a valid day. Try again.\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}
	else 
	{
		if tempday >= 1 && tempday <= 30 
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else
		{
			"%(ch)That's not a valid day. Try again.\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}		
}

birthchecked
{
	if userbirthday == dayslot; "So your birthday is today, happy birthday then %(username).\e"
	else; "Your birthday is %(bornmonthprint) %(borndayprint). I will remember.\e"
}

Select.talkinter
{
	"\b2The interval is currently set to %(talktime)./
	\n\n[half]/
	\![*]\q[Every 30 seconds,TALKMAX]\n/
	\![*]\q[Every minute,TALKHIGH]\n/
	\![*]\q[Every 3 minutes,TALKNORMAL]\n/
	\![*]\q[Every 5 minutes,TALKPOOR]\n/
	\![*]\q[Custom,TALKCUSTOM]\n/
	\![*]\q[Don't speak,TALKNONE]\n\n[half]/
	\![*]\q[Don't change,TalksTill]\e"
}

Select.TALKCUSTOM
{
	"%(ch)Which time interval do you want to use?\n\n[half]"
	--
	"\![*]\q[Seconds,OnTalkCustom,seconds]\n/
	\![*]\q[Minutes,OnTalkCustom,minutes]\n/
	\![*]\q[Hours,OnTalkCustom,hours]"
}

OnTalkCustom
{
	talkinttima = reference0
	--
	case talkinttima
	{
		when "seconds"; "%(ch)I should speak every . . . seconds.\![open,sliderinput,OnTalkCustomize,-1,30,30,59]"
		when "minutes"; "%(ch)I should speak every . . . minutes.\![open,sliderinput,OnTalkCustomize,-1,1,1,59]"
		when "hours"; "%(ch)I should speak every . . . hours.\![open,sliderinput,OnTalkCustomize,-1,1,1,24]"
	}
}

OnTalkCustomize
{
	timecustom = reference0
	--
	case talkinttima
	{
		when "seconds"
		{
			talktime = "%(timecustom) seconds" 
			aitalkinterval = timecustom 
			"I will speak every %(timecustom) seconds.\e"
		}
		when "minutes"
		{
			if timecustom == 1
			{
				talktime = "minute" 
				aitalkinterval = timecustom * 60
				"I will speak every minute.\e"
			}
			else
			{
				talktime = "%(timecustom) minutes" 
				aitalkinterval = timecustom * 60
				"I will speak every %(talktime) minutes.\e"
			}
		}
		when "hours"
		{
			if timecustom == 1
			{
				talktime = "hour" 
				aitalkinterval = timecustom * 3600
				"I will speak every hour.\e"
			}
			else
			{
				talktime = "%(talktime) hours" 
				aitalkinterval = timecustom * 3600
				"I will speak every %(talktime) hours.\e"
			}
		}
	}
}

Select.TalksTill
{
	"Nothing changed.\e"
}

Select.TALKMAX
{
	talktime = "30 seconds" 
	aitalkinterval = 30 
	"I will speak every 30 seconds.\e"
}

Select.TALKHIGH
{
	talktime = "minute"
	aitalkinterval = 60
	"I will speak every minute.\e"
}

Select.TALKNORMAL
{
	talktime = "3 minutes"
	aitalkinterval = 180
	"I will speak every three minutes.\e"
}

Select.TALKPOOR
{
	talktime = "5 minutes"
	aitalkinterval = 300
	"\1\s[10]I will speak every five minutes.\e"
}

Select.TALKNONE
{
	talktime = "silence"
	aitalkinterval = 0
	"I will be silent\e"
}

Select.TEACHNAME
{
	OnTeachName	
}

Select.CANCEL
{
	"...\e"
}

Select.dosomething
{
	"\b2%(ch)...\n\n"
	--
	"\![*]\q[Open Calendar,CALENDAR]\n/
	\![*]\q[Check Email,MailCheck]\n/
	\![*]\q[Open SSP Preferences,sspconfig]\n/
	\![*]\q[Empty Recycle Bin,ChoiceGarbagecan]\n/
	\![*]\q[System Information,ChoiceSystemInformation]\n\n/
	\![*]\q[Back to main menu,BACKTOMENU]\e"
}

Select.CALENDAR
{
	"...\![open,calendar]\e"
}

Select.sspconfig
{
	"...\![open,configurationdialog]\e"
}

Select.ChoiceGarbagecan
{
	_gomicheck = FUNCTIONEX("gomi.dll", "-n")	
	if _gomicheck == 0 
	{
		"... It's empty.\e"
	}
	elseif _gomicheck >= 1 
	{
		"\![raise,OnGarbagecanEmpty]...Done.\e"
	}
}

OnGarbagecanEmpty
{
	_gomi = FUNCTIONEX("gomi.dll", "-f")
}

Select.ChoiceSystemInformation
{
	os_name = FUNCTIONEX("saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori_cpuid.dll","cpu.clockex")
	"/
	\b[2]/
	\_q\f[bold,1]OS:\f[bold,0] %(os_name) %(os_version)\n/
	\f[bold,1]Memory Load:\f[bold,0] %(memoryload)%\n/
	\f[bold,1]Physical Memory:\f[bold,0] %(memoryavailphys) KB\n/
	\f[bold,1]CPU:\f[bold,0] %(cpu_name) %(cpu_clockex)MHz\n/
	\f[bold,1]Ukagaka:\f[bold,0] %property[baseware.version]/
	\e"
}

Select.MailCheck
{
	"\![biff]\e"
}

Select.HEADLINECANCEL
{
	"Finished with headlines.\e"
}

OnChoiceTimeout
{
	"The menu has timed out.\e"
}

OpenKeroMenu
{

}

Select.keroCANCEL
{
	"...\e"
}

//=======================================LANGUAGE STUFF=============================================
OnLanguageGenerator_start
{
	//"Write your languages letters/letter combinations (th, cz, sz etc.) separated by space\![open,inputbox,OnLanguageGenerator_one,-1]"
	OnLanguageGenerator_one
}

OnLanguageGenerator_one
{
	//alphabettemp = SPLIT(reference0," ")
	//--
	alph = "s t th ba ca da fa ga ha ja ka la ma na pa ra sa ta va wa qa xa ya za be ce de fe ge he je ke le me ne pe re se te ve we qe xe ye ze bi ci di fi gi hi ji ki li mi ni pi ri si ti vi wi qi xi yi zi bo co do fo go ho jo ko lo mo no po ro so to vo wo qo xo yo zo bu cu du fu gu hu ju ku lu mu nu pu ru su tu vu wu qu xu yu zu a e I j o u ' -"
	alphabettemp = SPLIT(alph," ")
	--
	"Language name:\![open,inputbox,OnLanguageGenerator_save,-1]"
}

OnLanguageGenerator_save
{
	langname = reference0
	--
	FOPEN("languages/%(langname).txt","w")
	for _i=0;_i<=ARRAYSIZE(englib);_i++
	{
		letter = RAND(ARRAYSIZE(alphabettemp))
		--
		for _z=0;_z!=1;_a++
		{
			num = RAND(maxletter)
			--
			if num >= minletter; _z = 1
		}
		--
		if num < minletter; num = minletter
		--
		for _j=0;_j<=num;_j++
		{
			if rulethree == "ON"
			{
				for _x=0;_x<=numcom;_x++
				{
					newlet = RAND(ARRAYSIZE(alphabettemp))
					--
					if newlet == letter
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
					--
					if letterprev == alphabettemp[letter+_x]
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
					--
					if letterprev == alphabettemp[letter-_x]
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
				}
			}
			--
			if ruletwo == "ON" && alphabettemp[letter] == letterprev; letter += 1
			--
			if ruleone == "ON" && "'" _in_ word && "'" _in_ alphabettemp[letter]; word = REPLACE(word,"'","")
			--
			if letterprev == "'" && alphabettemp[letter] == "-"; letter = RAND(15)
			elseif letterprev == "-" && alphabettemp[letter] == "'"; letter = RAND(15)
			--
			word += alphabettemp[letter]
			letterprev = alphabettemp[letter]
		}
		FWRITE("languages/%(langname).txt",word)
		--
		word = ""
	}
	FCLOSE("languages/%(langname).txt")
	--
	OnLanguageGenerator_end
}

OnLanguageGenerator_resave
{
	FOPEN("languages/%(langname).txt","w")
	for _i=0;_i<=ARRAYSIZE(englib);_i++
	{
		letter = RAND(ARRAYSIZE(alphabettemp))
		--
		for _z=0;_z!=1;_a++
		{
			num = RAND(maxletter)
			--
			if num >= minletter; _z = 1
		}
		--
		if num < minletter; num = minletter
		--
		for _j=0;_j<=num;_j++
		{
			if rulethree == "ON"
			{
				for _x=0;_x<=numcom;_x++
				{
					newlet = RAND(ARRAYSIZE(alphabettemp))
					--
					if newlet == letter
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
					--
					if letterprev == alphabettemp[letter+_x]
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
					--
					if letterprev == alphabettemp[letter-_x]
					{
						if RAND(2) == 1
						{
							if alphabettemp[letter-newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x-newlet
						}
						else
						{
							if alphabettemp[letter+newlet] == ""; letter = ARRAYSIZE(alphabettemp)
							else; letter += _x+newlet
						}
					}
				}
			}
			--
			if ruletwo == "ON" && alphabettemp[letter] == letterprev; letter += 1
			--
			if ruleone == "ON" && "'" _in_ word && "'" _in_ alphabettemp[letter]; word = REPLACE(word,"'","")
			--
			if letterprev == "'" && alphabettemp[letter] == "-"; letter = RAND(15)
			elseif letterprev == "-" && alphabettemp[letter] == "'"; letter = RAND(15)
			--
			word += alphabettemp[letter]
			letterprev = alphabettemp[letter]
		}
		FWRITE("languages/%(langname).txt",word)
		--
		word = ""
	}
	FCLOSE("languages/%(langname).txt")
	--
	OnLanguageGenerator_end
}

OnLanguageGenerator_end
{
	"Done \![open,file,languages/%(langname).txt]"
}

Select.updatelib
{
	FOPEN("write.txt","r")
	_x = 0
	--
	for _i=0;_x != 1;_i++
	{
		englib[_i] = FREAD("write.txt")
		--
		if englib[_i] == "-1"; _x = 1
	}
	--
	"\cEnglish Library Updated\e"
}

OnGenConfig
{
	if reference0 != ""; type = reference0
	--
	"\b2\_q%(ch)\q[Max letters: %(maxletter),maxlet]\n/
	\q[Min letters: %(minletter),minlet]\n"
	--
	"\n[half]Rules:\n\n[half]"
	--
	"\q[Only one ': %(ruleone),OnRules,one]\n/
	\q[Don't repete letters: %(ruletwo),OnRules,two]\n/
	\q[Phonetic conditions %(rulethree),OnRules,three]\n"
	--
	if rulethree == "ON"; "\q[Condition number: %(numcom),connum]\n"
	--
	if type == "save"; "\n[half]\![*]\q[I'm Done,OnLanguageGenerator_start]"
	else; "\n[half]\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,langstuff]"

}

Select.maxlet
{
	"\![open,sliderinput,OnMaxNum,-1,%(maxletter),5,20]"
}

OnMaxNum
{
	maxletter = reference0
	--
	OnGenConfig
}

Select.minlet
{
	"\![open,sliderinput,OnMinNum,-1,%(minletter),2,%(maxletter)]"
}

OnMinNum
{
	minletter = reference0
	--
	OnGenConfig
}

Select.connum
{
	"\![open,sliderinput,OnConNum,-1,%(numcom),1,10]"
}

OnConNum
{
	numcom = reference0
	--
	OnGenConfig
}

OnRules
{
	case reference0
	{
		when "one"
		{
			if ruleone != "ON"; ruleone = "ON"
			else; ruleone = "OFF"
		}
		when "two"
		{
			if ruletwo != "ON"; ruletwo = "ON"
			else; ruletwo = "OFF"
		}
		when "three"
		{
			if rulethree != "ON"; rulethree = "ON"
			else; rulethree = "OFF"
		}
	}
	--
	OnGenConfig
}

OnTranslateLang
{
	langcontent = ""
	langcontent +="\f[bold,1]\_q\b[4]Your Languages:\f[bold,0]:\n\n"
	--
	langfile = FENUM('languages','+')
	if langfile == ""
	{
		langcontent +="\f[bold,1]You havent made any languages\f[bold,0]\![open,file,app]"
	}
	else
	{
		langfile = REPLACE(langfile,'.txt',"")
		langfile = SPLIT(langfile,'+')
		--
		for _i=0;_i<ARRAYSIZE(langfile);_i++
		{
			langcontent += "\![*]\q[" + langfile[_i] + ",OnTransl," + langfile[_i] + "," + langfile[_i] +"]\n"
		}
	}
	--
	langcontent += "\n[half]\n\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,langstuff]\n"
	--
	"%(langcontent)"
}

OnTransl
{
	x = 0
	file = reference0 + ".txt"
	numforsize = ARRAYSIZE(langlib)
	--
	for _i=0;_i<=numforsize;_i++
	{
		langlib[_i] = ""
	}
	--
	FOPEN("languages/%(file)","r")
	for _i=0;x != 1;_i++
	{
		langlib[_i] = FREAD("languages/%(file)")
		--
		if langlib[_i] == "-1"
		{
			x = 1
		}
	}
	FCLOSE("languages/%(file)")
	--
	"\cwhat should I translate?\![open,inputbox,OnTranslatetwo,-1]\e"
}

loadlang
{
	x = 0
	numforsize = ARRAYSIZE(langlib)
	--
	for _i=0;_i<=numforsize;_i++
	{
		langlib[_i] = ""
	}
	--
	FOPEN("languages/Axvaria'e.txt","r")
	for _i=0;x != 1;_i++
	{
		langlib[_i] = FREAD("languages/Axvaria'e.txt")
		--
		if langlib[_i] == "-1"
		{
			x = 1
		}
	}
	FCLOSE("languages/Axvaria'e.txt")
	--
	"\cLoaded, %(langlib[0]), %(langlib[1]), %(langlib[2]), %(langlib[3])\e"
}

OnTranslatetwo
{
	translated = ""
	englishstuff = TOLOWER(englishstuff)
	totransl = SPLIT(englishstuff," ")
	stuffnum = ARRAYSIZE(totransl)
	engsize = ARRAYSIZE(englib)
	--
	for _i=0;_i<=stuffnum;_i++
	{
		num = ASEARCH(totransl[_i],englib)
		--
		if num == "-1"
		{
			translated += "? "
			newwords += 1
			englib[engsize+newwords] = totransl[_i]
		}
		else
		{
			translated += langlib[num] + " "
		}
	}
	--
	page = "\c\b2English:\n" + reference0 + "\n\n[half]Translated:\n" + translated
	--
	if " ? " _in_ translated; page += "\n[half]I'm adding unknown words to my library, next time while making a language they will be included"
	--
	page += "\n\n[half]\![*]\q[translate again,OnTransl]\n\n[half]\![*]\q[Cancel,CANCEL] or \![*]\q[Go back,langstuff]"
	--
	"%(page)"
}

//i like that cat he's always nice you know
//===================================CHARACTER STUFF=================================================
OnCharacterList
{
	charlist = "\_q\b2%(ch)"
	--
	if charcount != 0
	{
		charlist += "\f[bold,1]Your Characters:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<charcount;_i++
		{
			charlist += "\![*]\q[" + charname[_i] + ",OnCharcterClick," + _i +"]\n"
		}
	}
	else
	{
		charlist += "You don't have any characters yet\n\n[half]"
	}
	--
	charlist += "\f[size,10]\n\![*]\q[Add Character,OnAddCharacter]\n"
	--
	if removechar == 1; charlist += "\f[color,230, 39, 25]\![*]\q[Remove Character,removechar]\f[color,default]\n"
	else; charlist += "\![*]\q[Remove Character,removechar]\n"
	--
	if editchar == 1; charlist += "\f[color,230, 39, 25]\![*]\q[Edit Character,edchar]\f[color,default]"
	elsevcharlist += "\![*]\q[Edit Character,edchar]"
	--
	charlist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	charlist
}

Select.edchar
{
	if editchar == 1
	{
		editchar = 0
	}
	else
	{
		removechar = 0
		editchar = 1
	}
	--
	OnCharacterList
}

Select.removechar
{
	if removechar == 1
	{
		removechar = 0
	}
	else
	{
		editchar = 0
		removechar = 1
	}
	--
	OnCharacterList
}

OnCharcterClick
{
	choosennum = reference0
	--
	if removechar == 1
	{
		for _i=choosennum;_i<charcount;_i++
		{
			charname[_i] = charname[_i+1]
			charage[_i] = charage[_i+1]
			chardead[_i] = chardead[_i+1]
			chargender[_i] = chargender[_i+1]
			charrace[_i] = charrace[_i+1]
			charprof[_i] = charprof[_i+1]
			charnat[_i] = charnat[_i+1]
			chardesc[_i] = chardesc[_i+1]
			charshortstory[_i] = charshortstory[_i+1]
			charlongstory[_i] = charlongstory[_i+1]
		}
		charcount -= 1
		OnCharacterList
	}
	elseif editchar == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEdit,name]\n/
		\![*]\q[Age,OnEdit,age]\n/
		\![*]\q[Dead?,OnEdit,dead]\n/
		\![*]\q[Gender,OnEdit,gender]\n/
		\![*]\q[Race,OnEdit,race]\n/
		\![*]\q[Profesion,OnEdit,prof]\n/
		\![*]\q[Nationality,OnEdit,nationality]\n/
		\![*]\q[Description,OnEdit,desc]\n/
		\![*]\q[Shortend Story,OnEdit,shortstory]\n/
		\![*]\q[Long Story,OnEdit,longstory]\n"
		--
		"\n[half]\![*]\q[Go Back,OnCharacterList]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnCharacterPage
		--
		charpage
	}
}

OnEdit
{
	case reference0
	{
		when "name"; "\![open,input,OnNameChange,-1]"
		when "age"; "\![open,input,OnAgeChange,-1]"
		when "dead"; "\![open,input,OnDeadChange,-1]"
		when "gender"v"\![open,input,OnGenderChange,-1]"
		when "race"; "\![open,input,OnRaceChange,-1]"
		when "prof"; "\![open,input,OnProfChange,-1]"
		when "nationality"; "\![open,input,OnNatChange,-1]"
		when "desc"; "\![open,input,OnDescChange,-1]"
		when "shortstory"; "\![open,input,OnSStoryChange,-1]"
		when "longstory"; "\![open,input,OnLStoryChange,-1]"
	}
}

OnProfChange
{
	charprof[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnNameChange
{
	charname[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnAgeChange
{
	charage[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnDeadChange
{
	chardead[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnGenderChange
{
	chargender[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnRaceChange
{
	charrace[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnNatChange
{
	charnat[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnDescChange
{
	chardesc[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnSStoryChange
{
	charshortstory[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

OnLStoryChange
{
	charlongstory[choosennum] = reference0
	--
	"Done\e"
	--
	OnCharacterPage
	--
	charpage
}

Select.fullstory
{
	page = "\_q\b4%(ch)" + REPLACE(characterstuff[8],"+",",") + REPLACE(charlongstory[choosennum],"+",",") + "\n" + "\n[half]\![*]\q[End,Cancel]"
	--
	page
}

OnAddCharacter
{
	"%(ch)Name: \![open,inputbox,OnAddCharacter_age,-1]"
}

OnAddCharacter_age
{
	charname[charcount] = reference0
	--
	"%(ch)Age: \![open,inputbox,OnAddCharacter_gender,-1]"
}

OnAddCharacter_gender
{
	charage[charcount] = reference0
	--
	"%(ch)Gender: \![open,inputbox,OnAddCharacter_dead,-1]"
}

OnAddCharacter_dead
{
	chargender[charcount] = reference0
	--
	"%(ch)Are they dead?: \![open,inputbox,OnAddCharacter_race,-1]"
}

OnAddCharacter_race
{
	chardead[charcount] = reference0
	--
	"%(ch)Race: \![open,inputbox,OnAddCharacter_prof,-1]"
}

OnAddCharacter_prof
{
	charrace[charcount] = reference0
	--
	"%(ch)Profesion: \![open,inputbox,OnAddCharacter_nationality,-1]"
}

OnAddCharacter_nationality
{
	charprof[charcount] = reference0
	--
	"%(ch)Nationality: \![open,inputbox,OnAddCharacter_descripton,-1]"
}

OnAddCharacter_descripton
{
	charnat[charcount] = reference0
	--
	"%(ch)Description: \![open,inputbox,OnAddCharacter_shortendstory,-1]"
}

OnAddCharacter_shortendstory
{
	chardesc[charcount] = REPLACE(reference0,",","+")
	--
	"%(ch)Shortened Story: \![open,inputbox,OnAddCharacter_longstory,-1]"
}

OnAddCharacter_longstory
{
	charshortstory[charcount] = REPLACE(reference0,",","+")
	--
	"%(ch)Full Story: \![open,inputbox,OnAddCharacter_End,-1]"
}

OnAddCharacter_End
{
	charlongstory[charcount] = REPLACE(reference0,",","+")
	charcount += 1
	choosennum = charcount - 1
	--
	"\b4Done, here is your character:\x\c\b4\_q"
	--
	OnCharacterPage
	--
	charpage
}
//=========================================COUNTRY STUFF===========================================
OnCountries
{
	countrylist = "\_q\b2%(ch)"
	--
	if countrycount != 0
	{
		countrylist += "\f[bold,1]Your Characters:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<countrycount;_i++
		{
			countrylist += "\![*]\q[" + counname[_i] + ",OnCountryClick," + _i +"]\n"
		}
	}
	else
	{
		countrylist += "You don't have any countries yet\n\n[half]"
	}
	--
	countrylist += "\f[size,10]\n\![*]\q[Add Country,OnAddCountry]\n"
	--
	if removecoun == 1; countrylist += "\f[color,230, 39, 25]\![*]\q[Remove Country,removecoun]\f[color,default]\n"
	else; countrylist += "\![*]\q[Remove Country,removecoun]\n"
	--
	if editcoun == 1; countrylist += "\f[color,230, 39, 25]\![*]\q[Edit Country,edcoun]\f[color,default]"
	else; countrylist += "\![*]\q[Edit Country,edcoun]"
	--
	countrylist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	countrylist
}

Select.edcoun
{
	if editcoun == 1
	{
		editcoun = 0
	}
	else
	{
		removecoun = 0
		editcoun = 1
	}
	--
	OnCountries
}

Select.removecoun
{
	if removecoun == 1
	{
		removecoun = 0
	}
	else
	{
		editcoun = 0
		removecoun = 1
	}
	--
	OnCountries
}

OnCountryClick
{
	choosennum = reference0
	--
	if removecoun == 1
	{
		for _i=choosennum;_i<countrycount;_i++
		{
			counname[_i] = counname[_i+1]
			countryhistory[_i] = countryhistory[_i+1]
			countrystate[_i] = countrystate[_i+1]
			counlaws[_i] = counlaws[_i+1]
		}
		countrycount -= 1
		OnCountries
	}
	elseif editcoun == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditCountry,name]\n/
		\![*]\q[History,OnEditCountry,history]\n/
		\![*]\q[Description,OnEditCountry,state]\n"
		--
		"\n[half]\![*]\q[Go Back,OnCountries]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnCountryPage
		--
		countrypage
	}
}

OnEditCountry
{
	case reference0
	{
		when "name"; "\![open,input,OnCNameChange,-1]"
		when "history"; "\![open,input,OnHistoryChange,-1]"
		when "state"; "\![open,input,OnStateChange,-1]"
	}
}

OnCNameChange
{
	counname[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnCountryPage
	--
	countrypage

}

OnHistoryChange
{
	countryhistory[choosennum] = REPLACE(reference0,",","+")
	--
	"Done\e"
	--
	OnCountryPage
	--
	countrypage
}

OnStateChange
{
	chardead[choosennum] = REPLACE(reference0,",","+")
	--
	"Done\e"
	--
	OnCountryPage
	--
	countrypage
}

OnAddCountry
{
	"%(ch)Name: \![open,inputbox,OnAddCountry_history,-1]"
}

OnAddCountry_history
{
	counname[countrycount] = reference0
	--
	"%(ch)History: \![open,inputbox,OnAddCountry_state,-1]"
}

OnAddCountry_state
{
	countryhistory[countrycount] = REPLACE(reference0,",","+")
	--
	"%(ch)Description: \![open,inputbox,OnAddCountry_end,-1]"
}

OnAddCountry_end
{
	countrystate[countrycount] = REPLACE(reference0,",","+")
	countrycount += 1
	choosennum = countrycount - 1
	--
	"\b4Done, here is your country:\x\c\b4\_q"
	--
	OnCountryPage
	--
	countrypage
}
//======================================CHARACTER PAGE==============================================
OnCharacterPage
{
	if reference0 == "translate"; choosennum = reference1
	--
	charpage = "\b4\_q%(ch)" 
	portraits = FENUM('portraits','+')
	--
	if TOLOWER(charname[choosennum]) _in_ TOLOWER(portraits)
	{
		if charname[choosennum] == "Omega"
		{
			if nowshell == "Omega 2.0" && "Omega 2" _in_ portraits; charpage += "\_b[portraits/Omega 2.png,inline,--option=use_self_alpha]\n\n"
			elseif nowshell == "Omega human ver." && "Omega 3" _in_ portraits; charpage += "\_b[portraits/Omega 3.png,inline,--option=use_self_alpha]\n\n"
			else; charpage += "\_b[portraits/" + charname[choosennum] + ".png,inline,--option=use_self_alpha]\n\n"
		}
		else
		{
			charpage += "\_b[portraits/" + charname[choosennum] + ".png,inline,--option=use_self_alpha]\n\n"
		}
	}
	--
	charpage += characterstuff[0] + charname[choosennum] + "\n\n[half]" + characterstuff[1] + charage[choosennum] + "\n\n[half]" + characterstuff[2] + chardead[choosennum] + "\n\n[half]" + characterstuff[3] + chargender[choosennum] + "\n\n[half]" + characterstuff[4] + charrace[choosennum] + "\n\n[half]" + characterstuff[5] + charprof[choosennum] + "\n\n[half]" + characterstuff[6] + charnat[choosennum] + "\n\n[half]" + characterstuff[7] + chardesc[choosennum] + "\n\n[half]" + characterstuff[8] + charshortstory[choosennum] + "\n" + "\n\n[half]\![*]\q[Show Full Story,fullstory]"
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(charname[choosennum]) _in_ TOLOWER(refsheets); placepage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + charname[choosennum] + "]\n\n"
	--
	cahrpage += "\n\n[half]\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnCharacterList]"
	charpage = REPLACE(charpage,"+",",")
}
//=========================================COUNTRY PAGE===========================================
OnCountryPage
{
	if reference0 == "translate"; choosennum = reference1
	--
	maps = FENUM('maps','+')
	countrypage = "\b4\_q%(ch)"
	--
	countrypage += countrytuff[0] + counname[choosennum] + "\n\n[half]" + countrytuff[1] + countryhistory[choosennum] + "\n\n[half]" + countrytuff[2] + countrystate[choosennum]
	--
	if TOLOWER(counname[choosennum]) _in_ TOLOWER(maps); countrypage += "\n\n\![*]\q[Show the map,omap]"
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(counname[choosennum]) _in_ TOLOWER(refsheets); placepage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + racenacounnameme[choosennum] + "]\n\n"
	--
	countrypage += "\n\n[half]\![*]\q[Laws,laws]\n" + "\n\n[half]\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnCountries]"
	--
	//\![*]\q[Stories,OnStoriesC]"
	countrypage = REPLACE(countrypage,"+",",")
}

OnOtherCountryPage
{
	OnCountryPage
	--
	countrypage
}

OnOtherCharacterPage
{
	OnCharacterPage
	--
	charpage
}
//===========================================STORIES=========================================
OnStoriesC
{
	countrynum = choosennum
	storylist = "\_q\b2%(ch)"
	storynames = SPLIT(counstorynames[choosennum],"+")
	stories = SPLIT(counstory[choosennum],"+")
	storynum = ARRAYSIZE(storynames[choosennum])
	--
	if storynum != 0
	{
		storylist += "\f[bold,1]%(counname[choosennum]) Stories:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<=storynum;_i++
		{
			storylist += "\![*]\q[" + storynames[_i] + ",OnCStoryClick," + _i +"]\n"
		}
	}
	else
	{
		storylist += "%(counname[choosennum]) doesn't have any stories\n\n[half]"
	}
	--
	storylist += "\f[size,10]\n\![*]\q[Add Story,OnAddStory]\n"
	--
	if removestory == 1; storylist += "\f[color,230, 39, 25]\![*]\q[Remove Story,OnRemoveEditS,rem]\f[color,default]\n"
	else; storylist += "\![*]\q[Remove Story,OnRemoveEditS,rem]\n"
	--
	if editstory == 1; storylist += "\f[color,230, 39, 25]\![*]\q[Edit Story,OnRemoveEditS,edi]\f[color,default]"
	else; storylist += "\![*]\q[Edit Story,OnRemoveEditS,edi]"
	--
	storylist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	storylist
}

OnRemoveEditS
{
	if reference0 == "edi"
	{
		if editstory == 1
		{
			editstory = 0
		}
		else
		{
			removestory = 0
			editstory = 1
		}
	}
	if reference0 == "edi"
	{
		if removestory == 1
		{
			removestory = 0
		}
		else
		{
			editstory = 0
			removestory = 1
		}
	}
	--
	OnStoriesC
}

OnCStoryClick
{
	choosennum = reference0
	--
	if removestory == 1
	{
		for _i=choosennum;_i<racecount;_i++
		{
			counstorynames[_i] = counstorynames[_i+1]
			counstory[_i] = counstory[_i+1]
		}
		--
		OnStoriesC
	}
	elseif editstory == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditStory,name]\n/
		\![*]\q[Story,OnEditStory,descr]\n"
		--
		"\n[half]\![*]\q[Go Back,OnRaces]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnStoriesC
	}
}

OnEditStory
{
	case reference0
	{
		when "name"; "\![open,input,OnSCNameChange,-1]"
		when "descr"; "\![open,input,OnSCStoryChange,-1]"
	}
}

OnSCNameChange
{
	storynames[choosennum] = REPLACE(reference0,",","#")
	counstorynames[countrynum] = REPLACE(storynames,",","+")
	--
	"\b4Done\x\c" 
	--
	OnStoryPage
}

OnSCStoryChange
{
	stories[choosennum] = REPLACE(reference0,",","#")
	counstory[countrynum] = REPLACE(stories,",","+")
	--
	"\b4Done\x\c" 
	--
	OnStoryPage
}

OnAddStory
{
	"%(ch)Name: \![open,inputbox,OnAddStory_desc,-1]"
}

OnAddStory_desc
{
	storynames[choosennum] += "," + REPLACE(reference0,",","#")
	storynum = ARRAYSIZE(storynames[choosennum])
	choosennum = storynum + 1
	--
	"%(ch)Story: \![open,inputbox,OnAddStory_end,-1]"
}

OnAddStory_end
{
	counstory[choosennum] += "," + REPLACE(reference0,",","#")
	--
	"\b4Done, here is your Story:\x\c\b4\_q"
	--
	OnStoryPage
}

OnStoryPage
{
	storypage = "\b4\_q%(ch)"
	--
	storypage += "\f[bold,1]" + REPLACE(storynames[choosennum],"#",",") + "\f[bold,0]:\n\n[half]" + REPLACE(stories[choosennum],"#",",")
	--
	storypage += "\n\n[half]\![*]\q[End,Cancel],\q[Go back to the list,OnStoriesC," + countrynum + "]\n"
	--
	storypage
}

//===========================================OPEN MAP=========================================
Select.omap
{
	maparray = SPLIT(maps,"+")
	for _i=0,_x=0;_x!=1;_i++
	{
		if TOLOWER(counname[choosennum]) _in_ TOLOWER(maparray[_i])
		{
			_x=1
			foundnum = _i
		}
	}
	--
	"\![open,file,maps/%(maparray[foundnum])]"
}

//=========================================LAWS===========================================
Select.laws
{
	lawpage = "\c"
	--
	lawpage += "\b4\_q%(ch)"
	lawpage += "\f[bold,1]%(counname[choosennum])'s laws:\f[bold,0]\n\n[half]"
	lawsforpage = SPLIT(counlaws[choosennum],"+")
	lawnum = ARRAYSIZE(lawsforpage)
	--
	if lawnum == ""
	{
		lawpage += "%(counname[choosennum]) doesn't have any laws yet\n"
	}
	elseif removelaw == 1 || editlaw == 1
	{
		for _i=0;_i<lawnum;_i++
		{
			lawpage += "\q[(" + (_i + 1) + ".) "+ ",OnLawClick," + _i + "]" +  REPLACE(lawsforpage[_i],"!",",")  +"\n"
		}
	}
	else
	{
		for _i=0;_i<lawnum;_i++
		{
			lawpage += (_i + 1) + ". " + REPLACE(lawsforpage[_i],"#",",") + "\n"
		}
	}
	--
	lawpage += "\n[half]\f[size,10]\n[half]\![*]\q[Add law,addlaw]\n"
	--
	if removelaw == 1; lawpage += "\f[color,230, 39, 25]\![*]\q[Remove law,removelaw]\f[color,default]\n"
	else; lawpage += "\![*]\q[Remove law,removelaw]\n"
	--
	if editlaw == 1; lawpage += "\f[color,230, 39, 25]\![*]\q[Edit law,edlaw]\f[color,default]\n"
	else; lawpage += "\![*]\q[Edit law,edlaw]\n"
	--
	lawpage += "\f[size,default]\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,OnCountryPageBack]"
	--
	lawpage
}

OnCountryPageBack
{
	OnCountryPage
	--
	countrypage
}

Select.addlaw
{
	"%(ch)Write a law. Don't write a number, I add them by myself\![open,inputbox,OnNewLaw,-1]"
}

OnNewLaw
{
	if counlaws[choosennum] != ""; counlaws[choosennum] += "+" + REPLACE(reference0,",","#")
	else; counlaws[choosennum] += REPLACE(reference0,",","#")
	--
	Select.laws
}

Select.edlaw
{
	if editlaw == 1
	{
		editlaw = 0
	}
	else
	{
		removelaw = 0
		editlaw = 1
	}
	--
	Select.laws
}

Select.removelaw
{
	if removelaw == 1
	{
		removelaw = 0
	}
	else
	{
		editlaw = 0
		removelaw = 1
	}
	--
	Select.laws
}

OnLawClick
{
	lawchosenum = reference0
	--
	if removelaw == 1
	{
		for _i=lawchosenum;_i<lawnum;_i++
		{
			lawsforpage[_i] = lawsforpage[_i+1]
			counlaws[choosennum] = REPLACE(lawsforpage,",","+")

		}
		lawcount -= 1
		Select.laws
	}
	elseif editlaw == 1
	{
		"%(ch)Don't write a number, I add them by myself\![open,inputbox,OnEditLaw,-1]"
	}
	--
	Select.laws
}

OnEditLaw
{
	lawsforpage[choosennum] = REPLACE(reference0,",","#")
	counlaws[choosennum] = REPLACE(lawsforpage,",","+")
	--
	Select.laws
}

//===================================CHARACTER GENERATOR=================================================
OnCharacterGen
{
	type = reference0
	OnRandGenConfig
}

OnGenerateChar
{
	randcharpage = "\b4\_q%(ch)"
	charname[charcount] = namerand + " " + surname
	--
	for _x=0;_x!=1;_i++
	{
		charage[charcount] = RAND(maxage)
		--
		if charage[charcount] >= minage; _x = 1
	}
	--
	if deadyn == "ON"; chardead[charcount] = isdead
	else; chardead[charcount] = "No"
	--
	chargender[charcount] = gender
	charnat[charcount] = nationality
	charrace[charcount] = race
	charprof[charcount] = profes
	chardesc[charcount] = REPLACE(looks,",","+")
	charshortstory[charcount] = REPLACE(firstpart_story,",","+")

	charcount += 1
	choosennum = charcount - 1
	--
	OnCharacterPage
	--
	charpage += "\n\n[half]\![*]\q[Generate Again,OnCharacterGen,generator]\n\n[half]\![*]\q[I'm Done,Cancel]"
	--
	charpage = REPLACE(charpage,"\![*]\q[Show Full Story,fullstory]\n","")
	charpage
}
//=================================RAND CONFIG=================================================== 
OnRandGenConfig
{
	"\_q%(ch)\b4\f[bold,1]Character Settings:\f[bold,]\n\n[half]"
	--
	"Max age: \f[bold,1]\q[%(maxage),maxagechange]\f[bold,0]\n"
	--
	"Minimum age: \f[bold,1]\q[%(minage),minagechange]\f[bold,0]\n"
	--
	"Generate dead characters?: \f[bold,1]\q[%(deadyn),deadchange]\f[bold,0]\n"
	--
	"\n[half]\f[bold,1]Gender Toggles:\n\n[half]\f[bold,0]"
	--
	if male == "ON"; "Male: \f[bold,1]\f[color,#047111]\q[%(male),OnChangeGender,male]\f[color,default]\f[bold,0]\n"
	else; "Male: \f[bold,1]\q[%(male),OnChangeGender,male]\f[bold,0]\n"
	--
	if female == "ON"; "Female: \f[bold,1]\f[color,#047111]\q[%(female),OnChangeGender,female]\f[color,default]\f[bold,0]\n"
	else; "Female: \f[bold,1]\q[%(female),OnChangeGender,female]\f[bold,0]\n"
	--
	if mtf == "ON"; "Male (FTM): \f[bold,1]\f[color,#047111]\q[%(mtf),OnChangeGender,mtf]\f[color,default]\f[bold,0]\n"
	else; "Male (FTM): \f[bold,1]\q[%(mtf),OnChangeGender,mtf]\f[bold,0]\n"
	--
	if ftm == "ON"; "Female (MTF): \f[bold,1]\f[color,#047111]\q[%(ftm),OnChangeGender,ftm]\f[color,default]\f[bold,0]\n"
	else; "Female (MTF): \f[bold,1]\q[%(ftm),OnChangeGender,ftm]\f[bold,0]\n"
	--
	if nonbinary == "ON"; "Non-binary: \f[bold,1]\f[color,#047111]\q[%(nonbinary),OnChangeGender,nonbinary]\f[color,default]\f[bold,0]\n"
	else; "Non-binary: \f[bold,1]\q[%(nonbinary),OnChangeGender,nonbinary]\f[bold,0]\n"
	--
	if genfluid == "ON"; "Gender Fluid: \f[bold,1]\f[color,#047111]\q[%(genfluid),OnChangeGender,genfluid]\f[color,default]\f[bold,0]\n"
	else; "Gender Fluid: \f[bold,1]\q[%(genfluid),OnChangeGender,genfluid]\f[bold,0]\n"
	--
	if type == "generator"; "\n[half]\![*]\q[I'm Done,OnGenerateChar]"
	else; "\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,generators]"
}

OnChangeGender
{
	case reference0
	{
		when "male"
		{
			if male == "ON"; male = "OFF"
			else; male = "ON"
		}
		when "female"
		{
			if female == "ON"; female = "OFF"
			else; female = "ON"
		}
		when "mtf"
		{
			if mtf == "ON"; mtf = "OFF"
			else; mtf = "ON"
		}
		when "ftm"
		{
			if ftm == "ON"; ftm = "OFF"
			else; ftm = "ON"
		}
		when "nonbinary"
		{
			if nonbinary == "ON"; nonbinary = "OFF"
			else; nonbinary = "ON"
		}
		when "genfluid"
		{
			if genfluid == "ON"; genfluid = "OFF"
			else; genfluid = "ON"
		}
	}
	--
	OnRandGenConfig
}

Select.deadchange
{
	if deadyn == "ON"; deadyn = "OFF"
	else; deadyn = "ON"
	--
	OnRandGenConfig
}

Select.minagechange
{
	"\![open,inputbox,OnChangedAgeMin,-1]"
}

OnChangedAgeMin
{
	if TOINT(reference0) > maxage
	{
		"%(ch)This number is bigger then your maximum age\![open,inputbox,OnChangedAgeMin,-1]"
	}
	else
	{
		minage = TOINT(reference0)
		--
		OnRandGenConfig
	}
}

Select.maxagechange
{
	"\![open,inputbox,OnChangedAge,-1]"
}

OnChangedAge
{
	if TOINT(reference0) > minage
	{
		"%(ch)This number is smaller then your minimum age\![open,inputbox,OnChangedAgeMin,-1]"
	}
	else
	{
		maxage = TOINT(reference0)
		--
		OnRandGenConfig
	}
}
//===================================RACES=================================================
OnRaces
{
	racelist = "\_q\b2%(ch)"
	--
	if racecount != 0
	{
		racelist += "\f[bold,1]Your Races:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<racecount;_i++
		{
			racelist += "\![*]\q[" + racename[_i] + ",OnRaceClick," + _i +"]\n"
		}
	}
	else
	{
		racelist += "You don't have any races yet\n\n[half]"
	}
	--
	racelist += "\f[size,10]\n\![*]\q[Add Race,OnAddRace]\n"
	--
	if removerace == 1; racelist += "\f[color,230, 39, 25]\![*]\q[Remove Race,removeraces]\f[color,default]\n"
	else; racelist += "\![*]\q[Remove Race,removeraces]\n"
	--
	if editrace == 1; racelist += "\f[color,230, 39, 25]\![*]\q[Edit Race,edrace]\f[color,default]"
	else; racelist += "\![*]\q[Edit Race,edrace]"
	--
	racelist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	racelist
}

Select.edrace
{
	if editrace == 1
	{
		editrace = 0
	}
	else
	{
		removerace = 0
		editrace = 1
	}
	--
	OnRaces
}

Select.removeraces
{
	if removerace == 1
	{
		removerace = 0
	}
	else
	{
		editrace = 0
		removerace = 1
	}
	--
	OnRaces
}

OnRaceClick
{
	choosennum = reference0
	--
	if removerace == 1
	{
		for _i=choosennum;_i<racecount;_i++
		{
			racename[_i] = racename[_i+1]
			racedesc[_i] = racedesc[_i+1]
			racehistory[_i] = racehistory[_i+1]
			raceculture[_i] = raceculture[_i+1]
			racebeliefs[_i] = racebeliefs[_i+1]
		}
		racecount -= 1
		OnRaces
	}
	elseif editrace == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditRace,name]\n/
		\![*]\q[Description,OnEditRace,descr]\n/
		\![*]\q[History,OnEditRace,history]\n/
		\![*]\q[Culture,OnEditRace,culture]\n/
		\![*]\q[Beliefes,OnEditRace,beliefes]\n"
		--
		"\n[half]\![*]\q[Go Back,OnRaces]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnRacePage
		--
		racepage
	}
}

OnEditRace
{
	case reference0
	{
		when "name"; "\![open,input,OnRNameChange,-1]"
		when "descr"; "\![open,input,OnRDescChange,-1]"
		when "history"; "\![open,input,OnRHistoryChange,-1]"
		when "culture"; "\![open,input,OnRCultureChange,-1]"
		when "beliefes"; "\![open,input,OnRBeliefesChange,-1]"
	}
}

OnRBeliefesChange
{
	racebeliefs[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnRacePage
	--
	racepage

}

OnRCultureChange
{
	raceculture[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnRacePage
	--
	racepage

}

OnRHistoryChange
{
	racehistory[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnRacePage
	--
	racepage

}

OnRDescChange
{
	racedesc[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnRacePage
	--
	racepage

}

OnRNameChange
{
	racename[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnRacePage
	--
	racepage

}

OnAddRace
{
	"%(ch)Name: \![open,inputbox,OnAddRace_desc,-1]"
}

OnAddRace_desc
{
	racename[racecount] = reference0
	--
	"%(ch)Description: \![open,inputbox,OnAddRace_history,-1]"
}

OnAddRace_history
{
	racedesc[racecount] = REPLACE(reference0,",","+")
	--
	"%(ch)History: \![open,inputbox,OnAddRace_culture,-1]"
}

OnAddRace_culture
{
	racehistory[racecount] = REPLACE(reference0,",","+")
	--
	"%(ch)Beliefs: \![open,inputbox,OnAddRace_beliefs,-1]"
}

OnAddRace_beliefs
{
	raceculture[racecount] = REPLACE(reference0,",","+")
	--
	"%(ch)Culture: \![open,inputbox,OnAddRace_end,-1]"
}

OnAddRace_end
{
	racebeliefs[countrycount] = REPLACE(reference0,",","+")
	racecount += 1
	choosennum = racecount - 1
	--
	"\b4Done, here is your race:\x\c\b4\_q"
	--
	OnRacePage
	--
	racepage
}

OnRacePage
{
	if reference0 == "translate"; choosennum = reference1
	--
	racepage = "\b4\_q%(ch)"
	--
	racepage += racestuff[0] + racename[choosennum] + "\n\n[half]" + racestuff[1] + racedesc[choosennum] + "\n\n[half]" + racestuff[2] + racehistory[choosennum] + "\n\n[half]" + racestuff[4] + raceculture[choosennum] + "\n\n[half]" + racestuff[4] + racebeliefs[choosennum] 
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(racename[choosennum]) _in_ TOLOWER(refsheets); placepage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + racename[choosennum] + "]\n\n"
	--
	racepage += "\n\n[half]\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnRaces]"
	--
	//"\n\n[half]\![*]\q[Stories,racestories]" +
	racepage = REPLACE(racepage,"+",",")
}
//===================================PLACES=================================================
OnPlances
{
	placelist = "\_q\b2%(ch)"
	--
	if placecount != 0
	{
		placelist += "\f[bold,1]Your Places:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<placecount;_i++
		{
			placelist += "\![*]\q[" + placename[_i] + ",OnPlaceClick," + _i +"]\n"
		}
	}
	else
	{
		placelist += "You don't have any places yet\n\n[half]"
	}
	--
	placelist += "\f[size,10]\n\![*]\q[Add Place,OnAddPlace]\n"
	--
	if removeplaces == 1; placelist += "\f[color,230, 39, 25]\![*]\q[Remove Place,removeplace]\f[color,default]\n"
	else; placelist += "\![*]\q[Remove Place,removeplace]\n"
	--
	if editplace == 1; placelist += "\f[color,230, 39, 25]\![*]\q[Edit Place,edplace]\f[color,default]"
	else; placelist += "\![*]\q[Edit Place,edplace]"
	--
	placelist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	placelist
}

Select.edplace
{
	if editplace == 1
	{
		editplace = 0
	}
	else
	{
		removeplaces = 0
		editplace = 1
	}
	--
	OnRaces
}

Select.removeplace
{
	if removeplaces == 1
	{
		removeplaces = 0
	}
	else
	{
		editplace = 0
		removeplaces = 1
	}
	--
	OnPlances
}

OnPlaceClick
{
	choosennum = reference0
	--
	if removeplaces == 1
	{
		for _i=choosennum;_i<placecount;_i++
		{
			placename[_i] = placename[_i+1]
			placedesc[_i] = placedesc[_i+1]
			placehistory[_i] = placehistory[_i+1]
		}
		placecount -= 1
		OnPlances
	}
	elseif editplace == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditPlace,name]\n/
		\![*]\q[Description,OnEditPlace,descr]\n/
		\![*]\q[History,OnEditPlace,history]\n"
		--
		"\n[half]\![*]\q[Go Back,OnPlances]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnPlacePage
		--
		placepage
	}
}

OnEditPlace
{
	case reference0
	{
		when "name"; "\![open,input,OnPNameChange,-1]"
		when "descr"; "\![open,input,OnPDescChange,-1]"
		when "history"; "\![open,input,OnPHistoryChange,-1]"
	}
}

OnPNameChange
{
	placename[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlacePage
	--
	placepage

}

OnPDescChange
{
	placedesc[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlacePage
	--
	placepage
}

OnPHistoryChange
{
	placehistory[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlacePage
	--
	placepage
}

OnAddPlace
{
	"%(ch)Name: \![open,inputbox,OnAddPlace_desc,-1]"
}

OnAddPlace_desc
{
	placename[placecount] = reference0
	--
	"%(ch)History: \![open,inputbox,OnAddPlace_history,-1]"
}

OnAddPlace_history
{
	placedesc[placecount] = REPLACE(reference0,",","+")
	--
	"%(ch)Description: \![open,inputbox,OnAddPlace_end,-1]"
}

OnAddPlace_end
{
	placehistory[placecount] = REPLACE(reference0,",","+")
	placecount += 1
	choosennum = placecount - 1
	--
	"\b4Done, here is your place:\x\c\b4\_q"
	--
	OnPlacePage
	--
	placepage
}

OnPlacePage
{
	if reference0 == "translate"; choosennum = reference1
	--
	placepage = "\b4\_q%(ch)"
	--
	placepage += placestuff[0] + placename[choosennum] + "\n\n[half]" + placestuff[1] + placedesc[choosennum] + "\n\n[half]" + placestuff[2] + placehistory[choosennum]
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(placename[choosennum]) _in_ TOLOWER(refsheets); placepage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + placename[choosennum] + "]\n\n"
	--
	placepage += "\n\n[half]\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnPlance]"
	--
	placepage = REPLACE(placepage,"+",",")
}
//===================================ANIMALS=================================================
OnAnimals
{
	animlist = "\_q\b2%(ch)"
	--
	if faunacount != 0
	{
		animlist += "\f[bold,1]Your Animals:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<faunacount;_i++
		{
			animlist += "\![*]\q[" + faunaname[_i] + ",OnAnimalClick," + _i +"]\n"
		}
	}
	else
	{
		animlist += "You don't have any animals yet\n\n[half]"
	}
	--
	animlist += "\f[size,10]\n\![*]\q[Add Animal,OnAddAnimal]\n"
	--
	if removeanima == 1; animlist += "\f[color,230, 39, 25]\![*]\q[Remove Animal,removeanim]\f[color,default]\n"
	else; animlist += "\![*]\q[Remove Animal,removeanim]\n"
	--
	if editanim == 1; animlist += "\f[color,230, 39, 25]\![*]\q[Edit Animal,edanim]\f[color,default]"
	else; animlist += "\![*]\q[Edit Animal,edanim]"
	--
	animlist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	animlist
}

Select.edanim
{
	if editanim == 1
	{
		editanim = 0
	}
	else
	{
		removeanima = 0
		editanim = 1
	}
	--
	OnAnimals
}

Select.removeanim
{
	if removeanima == 1
	{
		removeanima = 0
	}
	else
	{
		editanim = 0
		removeanima = 1
	}
	--
	OnAnimals
}

OnAnimalClick
{
	choosennum = reference0
	--
	if removeanima == 1
	{
		for _i=choosennum;_i<faunacount;_i++
		{
			placename[_i] = placename[_i+1]
			placedesc[_i] = placedesc[_i+1]
			placehistory[_i] = placehistory[_i+1]
		}
		faunacount -= 1
		OnAnimals
	}
	elseif editanim == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditAnimal,name]\n/
		\![*]\q[Description,OnEditAnimal,descr]\n/
		\![*]\q[Behavior,OnEditAnimal,behavior]\n"
		--
		"\n[half]\![*]\q[Go Back,OnAnimals]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnAnimalPage
		--
		animalpage
	}
}

OnEditAnimal
{
	case reference0
	{
		when "name"; "\![open,input,OnANameChange,-1]"
		when "descr"; "\![open,input,OnADescChange,-1]"
		when "behavior"; "\![open,input,OnABehavior,-1]"
	}
}

OnANameChange
{
	placename[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnAnimalPage
	--
	animalpage

}

OnADescChange
{
	faunadesc[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnAnimalPage
	--
	animalpage

}

OnABehavior
{
	faunabehavior[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnAnimalPage
	--
	animalpage
}

OnAddAnimal
{
	"%(ch)Name: \![open,inputbox,OnAddAnimal_desc,-1]"
}

OnAddAnimal_desc
{
	faunaname[faunacount] = reference0
	--
	"%(ch)Description: \![open,inputbox,OnAddAnimal_behavior,-1]"
}

OnAddAnimal_behavior
{
	faunadesc[faunacount] = REPLACE(reference0,",","+")
	--
	"%(ch)Behavior: \![open,inputbox,OnAddAnimal_end,-1]"
}

OnAddAnimal_end
{
	faunabehavior[faunacount] = REPLACE(reference0,",","+")
	faunacount += 1
	choosennum = faunacount - 1
	--
	"\b4Done, here is your animal:\x\c\b4\_q"
	--
	OnAnimalPage
	--
	animalpage
}

OnAnimalPage
{
	if reference0 == "translate"
	{
		choosennum = reference1
	}
	--
	animalpage = "\b4\_q%(ch)"
	--
	portraits = FENUM('portraits','+')
	--
	if TOLOWER(faunaname[choosennum]) _in_ TOLOWER(portraits); animalpage += "\_b[portraits/" + faunaname[choosennum] + ".png,inline,--option=use_self_alpha]\n\n"
	--
	animalpage += faunastuff[0] + faunaname[choosennum] + "\n\n[half]" + faunastuff[1] + faunadesc[choosennum] + "\n\n[half]" + faunastuff[2] + faunabehavior[choosennum]
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(faunaname[choosennum]) _in_ TOLOWER(refsheets); animalpage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + faunaname[choosennum] + "]\n\n"
	--
	animalpage += "\n\n[half]\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnAnimals]"
	--
	animalpage = REPLACE(animalpage,"+",",")
}
//===================================PLANTS=================================================
OnPlants
{
	plantlist = "\_q\b2%(ch)"
	--
	if floracount != 0
	{
		plantlist += "\f[bold,1]Your Plants:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<floracount;_i++
		{
			plantlist += "\![*]\q[" + floraaname[_i] + ",OnPlantClick," + _i +"]\n"
		}
	}
	else
	{
		plantlist += "You don't have any plants yet\n\n[half]"
	}
	--
	plantlist += "\f[size,10]\n\![*]\q[Add Plant,OnAddPlant]\n"
	--
	if removeplant == 1; plantlist += "\f[color,230, 39, 25]\![*]\q[Remove Plant,removeplan]\f[color,default]\n"
	else; plantlist += "\![*]\q[Remove Plant,removeplan]\n"
	--
	if editplant == 1; plantlist += "\f[color,230, 39, 25]\![*]\q[Edit Plant,edplan]\f[color,default]"
	else; plantlist += "\![*]\q[Edit Plant,edplan]"
	--
	plantlist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	plantlist
}

Select.edplan
{
	if editplant == 1
	{
		editplant = 0
	}
	else
	{
		removeplant = 0
		editplant = 1
	}
	--
	OnPlants
}

Select.removeplan
{
	if removeplant == 1
	{
		removeplant = 0
	}
	else
	{
		editplant = 0
		removeplant = 1
	}
	--
	OnPlants
}

OnPlantClick
{
	choosennum = reference0
	--
	if removeplant == 1
	{
		for _i=choosennum;_i<floracount;_i++
		{
			floraaname[_i] = floraaname[_i+1]
			floradesc[_i] = floradesc[_i+1]
			floralivingcon[_i] = floralivingcon[_i+1]
		}
		floracount -= 1
		OnPlants
	}
	elseif editplant == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditPlant,name]\n/
		\![*]\q[Description,OnEditPlant,descr]\n/
		\![*]\q[Conditions,OnEditPlant,conditions]\n"
		--
		"\n[half]\![*]\q[Go Back,OnAnimals]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnPlantPage
		--
		plantpage
	}
}

OnEditPlant
{
	case reference0
	{
		when "name"; "\![open,input,OnPlNameChange,-1]"
		when "descr"; "\![open,input,OnPlDescChange,-1]"
		when "conditions"; "\![open,input,OnPlConditions,-1]"
	}
}

OnPlNameChange
{
	floraaname[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlantPage
	--
	plantpage

}

OnPlDescChange
{
	floradesc[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlantPage
	--
	plantpage

}

OnPlConditions
{
	floralivingcon[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnPlantPage
	--
	plantpage
}

OnAddPlant
{
	"%(ch)Name: \![open,inputbox,OnAddPlant_desc,-1]"
}

OnAddPlant_desc
{
	floraaname[floracount] = reference0
	--
	"%(ch)Description: \![open,inputbox,OnAddPlant_conditions,-1]"
}

OnAddPlant_conditions
{
	floradesc[floracount] = REPLACE(reference0,",","+")
	--
	"%(ch)Behavior: \![open,inputbox,OnAddPlant_end,-1]"
}

OnAddPlant_end
{
	floralivingcon[floracount] = REPLACE(reference0,",","+")
	floracount += 1
	choosennum = floracount - 1
	--
	"\b4Done, here is your plant:\x\c\b4\_q"
	--
	OnPlantPage
	--
	plantpage
}

OnPlantPage
{
	if reference0 == "translate"; choosennum = reference1
	--
	plantpage = "\b4\_q%(ch)"
	--
	portraits = FENUM('portraits','+')
	--
	if TOLOWER(floraaname[choosennum]) _in_ TOLOWER(portraits); plantpage += "\_b[portraits/" + floraaname[choosennum] + ".png,inline,--option=use_self_alpha]\n\n"
	--
	plantpage += florastuff[0] + floraaname[choosennum] + "\n\n[half]" + florastuff[1] + floradesc[choosennum] + "\n\n[half]" + florastuff[2] + floralivingcon[choosennum]
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(floraaname[choosennum]) _in_ TOLOWER(refsheets); plantpage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + floraaname[choosennum] + "]\n\n"
	--
	plantpage += "\n\n\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnPlants]"
	--
	plantpage = REPLACE(plantpage,"+",",")
}
//===================================OPEN REF SHEET=================================================
OnOpenRef
{
	thingforref = reference0
	reffarray = SPLIT(refsheets,"+")
	for _i=0,_x=0;_x!=1;_i++
	{
		if TOLOWER(thingforref) _in_ TOLOWER(reffarray[_i])
		{
			_x=1
			foundnum = _i
		}
	}
	--
	"\![open,file,refsheets/%(reffarray[foundnum])]"
}
//===================================PLANTS=================================================
OnItems
{
	itemlist = "\_q\b2%(ch)"
	--
	if itemcount != 0
	{
		itemlist += "\f[bold,1]Your Items:\f[bold,0]\n\n[half]"
		--
		for _i=0;_i<itemcount;_i++
		{
			itemlist += "\![*]\q[" + itemsaname[_i] + ",OnItemClick," + _i +"]\n"
		}
	}
	else
	{
		itemlist += "You don't have any items yet\n\n[half]"
	}
	--
	itemlist += "\f[size,10]\n\![*]\q[Add Item,OnAddItem]\n"
	--
	if removeitems == 1; itemlist += "\f[color,230, 39, 25]\![*]\q[Remove Item,removeitm]\f[color,default]\n"
	else; itemlist += "\![*]\q[Remove Item,removeitm]\n"
	--
	if edititem == 1; itemlist += "\f[color,230, 39, 25]\![*]\q[Edit Item,editm]\f[color,default]"
	else; itemlist += "\![*]\q[Edit Item,editm]"
	--
	itemlist += "\f[size,default]\n\n[half]\![*]\q[End,Cancel] or \![*]\q[Go back,worldplan]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
	--
	itemlist
}

Select.editm
{
	if edititem == 1
	{
		edititem = 0
	}
	else
	{
		removeitems = 0
		edititem = 1
	}
	--
	OnItems
}

Select.removeitm
{
	if removeitems == 1
	{
		removeitems = 0
	}
	else
	{
		edititem = 0
		removeitems = 1
	}
	--
	OnItems
}

OnItemClick
{
	choosennum = reference0
	--
	if removeitems == 1
	{
		for _i=choosennum;_i<itemcount;_i++
		{
			itemsaname[_i] = itemsaname[_i+1]
			itemsdesc[_i] = itemsdesc[_i+1]
			itemsability[_i] = itemsability[_i+1]
			itemshistory[_i] = itemshistory[_i+1]
			itemsowner[_i] = itemsowner[_i+1]
		}
		--
		itemcount -= 1
		--
		OnItems
	}
	elseif edititem == 1
	{
		"\_q\b2%(ch)What do you want to edit?\n\n"
		--
		"\![*]\q[Name,OnEditItem,name]\n/
		\![*]\q[Description,OnEditItem,descr]\n/
		\![*]\q[Abilities,OnEditItem,ability]\n/
		\![*]\q[History,OnEditItem,history]\n/
		\![*]\q[Owner,OnEditItem,owner]\n"
		--
		"\n[half]\![*]\q[Go Back,OnItems]\n/
		\![*]\q[Nevermind,Cancel]\e"
	}
	else
	{
		OnItemPage
		--
		itempage
	}
}

OnEditItem
{
	case reference0
	{
		when "name"; "\![open,input,OnINameChange,-1]"
		when "descr"; "\![open,input,OnIDescChange,-1]"
		when "ability"; "\![open,input,OnIAbility,-1]"
		when "history"; "\![open,input,OnIHistory,-1]"
		when "owner"; "\![open,input,OnIOwner,-1]"
	}
}

OnINameChange
{
	itemsaname[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnItemPage
	--
	itempage

}

OnIDescChange
{
	itemsdesc[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnItemPage
	--
	itempage

}

OnIAbility
{
	itemsability[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnItemPage
	--
	itempage
}

OnIHistory
{
	itemshistory[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnItemPage
	--
	itempage
}

OnIOwner
{
	itemsowner[choosennum] = reference0
	--
	"\b4Done\x\c" 
	--
	OnItemPage
	--
	itempage
}

OnAddItem
{
	"%(ch)Name: \![open,inputbox,OnAddItem_desc,-1]"
}

OnAddItem_desc
{
	itemsaname[itemcount] = reference0
	--
	"%(ch)Description: \![open,inputbox,OnAddItem_ability,-1]"
}

OnAddItem_ability
{
	itemsdesc[itemcount] = REPLACE(reference0,",","+")
	--
	"%(ch)Abilities: \![open,inputbox,OnAddItem_history,-1]"
}

OnAddItem_history
{
	itemsability[itemcount] = REPLACE(reference0,",","+")
	--
	"%(ch)History: \![open,inputbox,OnAddItem_owner,-1]"
}

OnAddItem_owner
{
	itemshistory[itemcount] = REPLACE(reference0,",","+")
	--
	"%(ch)Owner: \![open,inputbox,OnAddItem_end,-1]"
}

OnAddItem_end
{
	itemsowner[itemcount] = REPLACE(reference0,",","+")
	itemcount += 1
	choosennum = itemcount - 1
	--
	"\b4%(ch)Done, here is your plant:\x\c\b4\_q"
	--
	OnItemPage
	--
	itempage
}

OnItemPage
{
	if reference0 == "translate"
	{
		choosennum = reference1
	}
	--
	itempage = "\b4\_q%(ch)"
	--
	portraits = FENUM('portraits','+')
	--
	if TOLOWER(itemsaname[choosennum]) _in_ TOLOWER(portraits); itempage += "\_b[portraits/" + itemsaname[choosennum] + ".png,inline,--option=use_self_alpha]\n\n"
	--
	itempage += itemstuff[0] + itemsaname[choosennum] + "\n\n[half]" + itemstuff[1] + itemsdesc[choosennum] + "\n\n[half]" + itemstuff[2] + itemsability[choosennum] + "\n\n[half]" + itemshistory[3] + floralivingcon[choosennum] + "\n\n[half]" + itemstuff[4] + itemsowner[choosennum]
	--
	refsheets = FENUM('refsheets','+')
	--
	if TOLOWER(itemsaname[choosennum]) _in_ TOLOWER(refsheets); itempage += "\n\n[half]\![*]\q[Open Reference Sheet,OnOpenRef," + itemsaname[choosennum] + "]\n\n"
	--
	itempage += "\n\n\![*]\q[End,Cancel]\n\![*]\q[Go back to the list,OnItems]"
	--
	itempage = REPLACE(itempage,"+",",")
}