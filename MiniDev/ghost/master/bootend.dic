OnFirstBoot
{
 	lastTalk = "" 
	passmin = 0 
	passsec = 0 
 	username         = "USER"
	introduction 	 = 1 
	stroke           = 0 	
 	teachusername    = 0 	
	mikireflag       = 0 
	completed = 0
	//apps = 0 //Apps tutorial 
	button[0] = "OFF" //q-tools on
	button[19] = "OFF" //weather on menu
	button[20] = "OFF" //moonphase on menu
	curlocation = "" 
	locationcode = "" 
	//hoodoo = 0 //skin hoodoo
	//gian = 0 //skin gian
	//kagamari = 0 //skin kagamari
	button[28] = "OFF" //stick q-tools to MD
 	aitalkinterval = 400 
 	birthdayprint = "????" 
	talktime = "5 minutes" 
	//animalslearnt = 0
	deleteshitai = "OFF" 
	relationships[0] = 0 
	nowshell = "Original Dev" 
	info[6] = "MiniDev" //MD name
	button[29] = 2 //dark mode/ligt mode
	info[7] = RAND(1000) //MD Model
	--
	FirstBootVariables // story variables
	--
	OnSurfacesTrue //Surface true
	--
	OnCommTrue //Communication true
	--
	OnMoveQTool 
	--
	if reference0 == 0 
 	{
		"\1\s[10]\0\s[0]\![open,file,ghost/master/credits-readme.txt]\![enter,passivemode]\cHello there beta tester!\x\c My code is M-%(modelp)P\w6 but you can call me %(devname)!\x\cI'm your desktop helper provided by A.R.I — Assistant Robots International\x\cYou can customize my look, traits and change my name in the config menu\x\cI can tell you weather forecast and moon phase,\w8 you can save notes inside my logs and make to-do list.\w\cI also can show you usage graphs of balloons and ghosts\x\cNow\w7 how should I refer to you, user?\![leave,passivemode]\n\n[half]/
		\w5\_q\![*]\q[He/Him/His,choicefirsthehim]\n/
		\![*]\q[She/Her/Hers,choicefirstsheher]\n/
		\![*]\q[They/Them/Their,choicefirsttheythem]\n/
    	\![*]\q[Your own,choiceown]\e"
 	}
	else
 	{
 		"\![open,file,ghost/master/credits-readme.txt]\0\s[0]\0\s[0]Hello again!\e"
 	}
}

OnEraseVar
{
	_temp = ""
	_temp = explained
	explained = IARRAY
	explained = SPLIT(_temp," ")
	--
	_temp = ""
	_temp = questionsasked
	questionsasked = IARRAY
	questionsasked = SPLIT(_temp," ")
	--
	counter[0] = devlogcount
	counter[1] = userlogs
	counter[2] = truth
	counter[3] = tentruth
	counter[4] = remindcount
	counter[5] = mornings
	counter[6] = midnight
	counter[7] = todopagenum
	counter[8] = pagenum
	counter[9] = devlogpage
	counter[10] = logpage
	counter[11] = numcheck
	counter[12] = userlosses
	counter[13] = userwins
	counter[14] = cheerups
	counter[15] = draws
	counter[16] = games
	counter[17] = afternoon
	counter[18] = ghostmet
	--
	ERASEVAR("devlogcount","userlogs","truth","tentruth","mornings","midnight","todopagenum","pagenum","devlogpage","logpage","userlosses","userwins","cheerups","draws","games","afternoon","ghostmet")
	--
	for _i=0;_i<31;_i++
	{
		button[_i] = "OFF"
	}
	--
	button[29] = 1
	--
	ERASEVAR("tooln","dlbtn","MDisable","logbtn","trabtn","webtn","setbtn","statbtn","todobtn","cusbtn","appbtn","nice","smart","optimistic","pessimistic","stupid","funny","romantic","usedefring","weathermenu","moonmenu","upchec","pastel","bright","plain","dark","hrnt","noticewin","sticky","mode")
	--
	relationships[0] = relationships[0]
	relationships[1] = explained
	relationships[2] = questionsasked
	relationships[3] = m201zcharacter
	relationships[4] = usercharacter
	--
	ERASEVAR("relationships[0]","explained","questionsasked","m201zcharacter","usercharacter")
	--
	info[0] = hsphere
	info[1] = projecttypes
	info[2] = dateformatype
	info[3] = timeformatype
	info[4] = vers
	info[5] = nickname
	info[6] = devname
	info[7] = modelp
	--
	ERASEVAR("hsphere","projecttypes","dateformatype","timeformatype","vers","nickname","devname","modelp")
	--
	other[0] = "ui"
	other[1] = colorty
	other[2] = ctype
	other[3] = cnum
	--
	ERASEVAR("uiclps","clrclps","mdclps","qbtnclps","menclps","othclps","colorty","ctype","cnum")
	--
	unlockable[0] = outfitS
	unlockable[1] = aurora
	unlockable[2] = azura
	--
	ERASEVAR("outfitS","aurora","azura","outfitaurora","outfitazura")
	--
	if truthboot == 1; MiscFlag ,= "Truth Boot"
	--
	if meeting == 1; MiscFlag ,= "Meeting"
	--
	if narrator == 1; MiscFlag ,= "Narrator"
	--
	if token == 1; MiscFlag ,= "Token"
	--
	if glitchconvo == 1; MiscFlag ,= "Glitch Convo-Azura"
	--
	if oldntbk == 1; MiscFlag ,= "Old Notebook"
	--
	if othermz == 1; MiscFlag ,= "Other M-z"
	--
	if david == 1; MiscFlag ,= "David"
	--
	ERASEVAR("templogdate","templogname","temploggen","templogmod","somecomt","hoodoo","gian","kagamari","truthboot","meeting","narrator","token","david","othermz","oldntbk","glitchconvo","calcbtn","lesbtn","Test","rude","curses","insults","outgoing","loner","djokes","pocket","toup","action","romancet","ecchi","drama","horror","BL","GL","websrch","stps","ingrs","dltrec","urecnum","srecnum","sirecnum","apps","devop","cdtypetemp","animalslearnt","animals","arr","other")
	--
	MiscFlag ,= "New Variables"
	--
	"Variables Updated"

}

OnTenTruth //story boot
{
	counter[3] = 1
	--
	"\1\s[10]\0\s[0]Hello there beta tester!\x\c My code is M̸̡̂-̸̜̀2̵͚̿0̶͚̊1̵̨́ẕ̶̈́\w6 but you can call me M̵͖̠̜͙͖͚͍̳͎͕̳̦̿̉̓̓̐́̇̚͜ͅiniD̷͎̜̥̮͔̓̂̈͗̐͋̐̂̕͝͝ev̷̧͕̹͉̪͍͕͚̭̒͐̌̄͐̔̉̌̈͒̚̕͜ͅ\x\cI'm your desktop helper provided by A̶̬͓̗͖͇̻̲̥̬͖͕̙̦͗̿ͅ.̷̞̼̬͇̰̪̫̍̉͆́͌̒̓͝R̴͉̎̐.̸̨̘̳̣̲̰̟̜̤̰̫́̎̋̓̌͋̇̓̀͒͜ͅỊ̵̄—̶̖̒ ̸͙̇À̸̹s̶̢̎s̶̭͐i̵̳͆s̷̲͒t̴͎̍ą̴͝n̵̜͛ẗ̵͜ ̷̘̑R̸̭͌ǫ̴͘b̸̻͠o̶̮̅t̷͚̽ṡ̷̘ ̷͖̌I̵̻͌n̴̥͠t̸͎̔ȩ̶͛r̷̥̽n̶̰͛ă̸̻t̵̼̏i̴̼̓o̵̙͊n̴̰̔a̵͈̋l̶̕ͅ\x\cYou can customize my look, traits, likes and dislikes, and change m̵̮̒y̶̟͘ ̸̳̀n̷̬̍a̷̓ͅm̴̲͂ẻ̸͚ in the config menu\x\cI can tell you weather forecast and moon phase,\w8 translate b̸̝̔i̵̟̐n̷͔̈ā̴̙r̴͉̈́y̸̮̔ and M̴̧̿õ̶̝r̵̲̒s̶̛͖ę̵̿\x\cYou can save notes inside my l̸͓͛o̸̗͠g̶̮͘s̸̗͑ and make to-do lists.\w\cI also have a calculator and can show you usage graphs of balloons and ghosts\x\cNow\w7 how should I refer to you, user?\n\n[half]/
	\w5\_q\![*]\q[He/Him/His,choicefirsthehim]\n/
	\![*]\q[She/Her/Hers,choicefirstsheher]\n/
	\![*]\q[They/Them/Their,choicefirsttheythem]\n/
	\![*]\q[Your own,choiceown]\e"
}

//\![raise,OnMood]
OnMood
{
	moodlib = "relaxed,bored,gloomy,happy,cheerful,guilty" //just words for me to keep track of his moods
	mood = 0
	moodsize = ARRAYSIZE(moodlib) //this lets me easily check how many moods he can have without having to change any numbers
	--
	for _i = 0 ; _i < moodsize ; _i ++ //reset mood
	{
		if mood[_i] == "" || mood[_i] != 0 || mood[_i] != " "; mood[_i] = 0
	}
	--
	_ranmood = 0
	--
	for _i=0;_i<moodsize*2;_i++
	{
		_ranmood = RAND(moodsize)
		--
		mood[_ranmood] += RAND(10)
	}
	--
	if relationships[0] < 100; mood[0] = 0
	--
	OnMoodCheck
}

//\![raise,OnMoodShuffle]
OnMoodShuffle
{
	for _i = 0 ; _i < moodsize ; _i ++ //reset mood
	{
		if mood[_i] == "" || mood[_i] != 0 || mood[_i] != " "; mood[_i] = 0
	}
	--
	_ranmood = 0
	--
	for _i=0;_i<moodsize*2;_i++
	{
		_ranmood = RAND(moodsize)
		--
		mood[_ranmood] += RAND(10)
	}
	--
	OnMoodCheck
}

OnMoodCheck //evaluating the dominating mood
{
	moodstring = "" //clear the string
	_ramod = 0
	--
	arr[0] = mood[0] //get the value of the first mood
	--
	for _j=0;_j<moodsize*4;_j++
	{
		if arr[0] < TOINT(mood[_j]) //if the other mood is higher: change it
		{
			arr[0] = mood[_j]
			numofmood = _j // save the number of the highest mood
		}
		elseif arr[0] == TOINT(mood[_j]) //if two moods have the same value, take one randomly
		{
			_ramod = RAND(2)
			--
			if _ramod == 1
			{
				arr[0] = mood[_j]
				numofmood = _j
			}
		}
		
	}
	--
	moodstring = moodlib[numofmood]
	currmood = numofmood
	--
	moodpage = "\_q\b4Mood for today: %(moodstring)\n\n[half]"
	--
	for _i=0;_i<ARRAYSIZE(moodlib);_i++
	{
		moodpage += moodlib[_i] + ": " + mood[_i] + "\n"
	}
	--
	//moodpage
}

Select.choicefirsthehim
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}

Select.choicefirstsheher
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}

Select.choicefirsttheythem
{
	himher = "them"
	heshe = "they"
	hisher = "theirs"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}

NameInput
{
	introduction = 0 
	--
	if counter[3] == 1 //story boot
	{
		MiscFlags ,= "Truth Boot"
		"\0\s[0]I w̴̨̡̢̲̪̝̗̾̉͌̀̉͑͋̕ͅḯ̵̢͎̱̟͖͈͚̋͛́͘l̷̢̛̩͓̻̰͂́͑̾ľ̵̢̢̙͕̗͕̼̺͗̄̒̈͛͋͆́̐͠͝ remember that!\w8\0\s[0] And your ń̷̖̝̭̹̺̄̈̑́̏͝͝a̴̢͚̥̼͐͑m̸̼̼̮͖̯͎̯̖̑̾̏̒̒̀̊̆̕͝e̴̲̻̯̤̪̰̫͓̞̯͙̲̭̿̀́̀̀̎̈́̕ͅ is?\![open,inputbox,OnNameTeach,-1]\e"
	}
	else
	{
		"\0\s[0]I will remember that!\w8\0\s[0] And your name is?\![open,inputbox,OnNameTeach,-1]\e"
	}
}

GetTimeSlot
{
	if hour >= 5 && hour <= 8; "earlymorning"
	elseif hour >= 9 && hour <= 11; "morning"
	elseif hour >= 12 && hour <= 14; "lunch"
	elseif hour >= 15 && hour <= 17; "afternoon"
	elseif hour >= 18 && hour <= 20; "evening"
	elseif hour >= 21 && hour <= 24; "latenight"
	else; "midnight"
}

GetDaySlot
{
	"%(month)month %(day)day"
}

OnBoot
{
	lastTalk = "" 
	passmin = 0
	passsec = 0
	counter[11] = 0
	counter[12] = 0
	counter[13] = 0
	counter[14] = 0
	counter[15] = 0
	counter[16] = 0
	intalkconfig = 0 
	weatherquiet = 0 
	exponentiation = 0 
	glitchboot = RAND(100) //random chance to get a glitched boot
    --
 	"\0\s[0]\1\s[-1]%(lightdark)" 
	--
	dayslot = GetDaySlot
	timeslot = GetTimeSlot 
	--
	OnSurfacesTrue
	--
	OnMood
	--
	OnCommTrue
	--
	OnArraysCheck
	--
	OnCharacterCheck
	--
	if Flag("Token") != 1; "\![execute,http-get,http://ukg.ct8.pl/token.txt,--async=OnTokenCheck,--file=token.txt,--timeout=200]"
	--
	if Flag("New Variables") != 1; OnEraseVar
	--
	if counter[2] >= 10 && Flag("Truth Boot") != 1
	{
		OnTenTruth
	}
	elseif counter[3] == 1 || (glitchboot >= 50 && glitchboot <= 55)
	{
		if dayslot == userbirthday ; "\0Happy B̶͉̕ï̴͓r̵̞̕t̷̠̀h̸́ͅd̵̀͜ǎ̸͕y̷̪͋ %(username)\e"
		elseif dayslot == "6month 6day"; "\0Today is June 6th.\e"
		elseif dayslot == "7month 4day"; "\0It's the fourth of July.\e"		
		else; "%(normalboottalk)" 
	}
	else
	{
		if dayslot == userbirthday; "\0Happy Birthday %(username)\e" 			
		elseif dayslot == "6month 6day"; "\0Today is June 6th.\e"
		elseif dayslot == "7month 4day"; "\0It's the fourth of July.\e"		
		else; "%(normalboottalk)" 
	}
}

OnCharacterCheck
{
	if counter[5] > 75 && "mornings-bird" !_in_ relationships[3] && "late-night-owl" !_in_ relationships[3] && "afternoon-cat" !_in_ relationships[3]; relationships[3] += "mornings-bird "
	--
	if counter[6] > 75 && "late-night-owl" !_in_ relationships[3] && "mornings-bird" !_in_ relationships[3] && "afternoon-cat" !_in_ relationships[3]; relationships[3] += "late-night-owl "
}

normalboottalk
{
	/*if RAND(100) < 30 && tentruth == 1 && meeting == 1 && devlogunolock !=1
	{
		devlogunolock = 1
		"\0\s[0]I̸̼͝ ̵̗͠f̶̮̎ö̴̤́ú̸ͅn̵͉̉d̴̫͑ ̸̤̈́ả̸̭ ̴͚̽ẅ̵̥a̴̓ͅy̴̞͊ ̷̳̂w̶͔͂e̴͚̋ ̸͔̇ć̸̠a̸͙̽ń̵̩ ̶̡͒c̸̹͂ḙ̵̛a̶̽ͅr̵͈͛l̵̙̊y̵̛̘ ̷͖̃c̵̮̃o̴̪̒m̸̻̓ḿ̵ͅù̵͖n̸̺̋i̵̤͠c̶̹͊a̵̢̽t̵͇̓e̷̻͘\x\cG̴̼̓õ̴͚ ̷̘͊c̶̹̓h̷̢̊e̷̛̮c̶̖͘ḱ̴̥ ̸̬̽ẙ̵͇ö̶̙́u̷̗̽r ̵̪̂l̴͖͠ỏ̷̢g̸͚̀ş̵͝\e"
	}
	else 
	{*/
	if counter[3] == 1 && Flag("Meeting") == 1
	{
		if timeslot == "morning" || timeslot == "earlymorning"
		{
			if "mornings-bird" !_in_ relationships[3]; counter[5]++
			--
			if "late-night-owl" _in_ relationships[3]
			{
				mood[2]++
				--
				if Flag("Glitch Fix") != 1; "H̸o̷w̷ ̶c̴a̷n̶ ̶y̷o̵u̶ ̸e̶v̴e̵n̵ ̴l̶i̷v̶e̵ ̵t̴h̴i̵s̴ ̵e̸a̷r̷l̸y̷"
				else; "%(distingstart)How can you even live this early"
			}
			--
			if "mornings-bird" _in_ relationships[3]
			{
				if Flag("Glitch Fix") != 1; "O̵h̶,̷ ̵y̸o̷u̴'̷r̶e̴ ̵u̴p̷ ̵e̴a̸r̵l̴y̶,̶ ̸g̴o̵o̶d̵ ̸m̶o̶r̴n̶i̸n̵g̸ ^^"
				else; "%(distingstart)Oh, you're up early, good morning"
			}
		}
		elseif timeslot == "midnight" || timeslot == "latenight"
		{
			if "mornings-bird" _in_ relationships[3]
			{
				mood[2]++
				--
				if Flag("Glitch Fix") != 1; "Y̷o̶u̷ ̴s̸h̸o̸u̵l̴d̶ ̷g̴o̶ ̶t̸o̵ ̷s̷l̷e̶e̶p̶ ̴i̴n̸s̸t̴e̵a̷d̴ ̷o̸f̵ ̷u̴s̶i̷n̶g̴ ̸a̴ ̶c̷o̷m̸p̵u̶t̸e̵r̵"
				else; "%(distingstart)You should go to sleep instead of using a computer"
			}
			--
			if "late-night-owl" !_in_ relationships[3]; counter[6]++
			--
			if "late-night-owl" _in_ relationships[3]
			{
				if Flag("Glitch Fix") != 1; "W̵o̸w̵,̸ ̴y̷o̸u̸'̵r̸e̸ ̸u̶p̷ ̵l̶a̸t̴e̴\w6 \f[height,7]w̴e̴l̸l̶ ̴n̴o̵t̸ ̷t̴h̴a̴t̶ ̸I̸ ̴m̵i̸n̶d̸"
				else; "%(distingstart)Wow, you're up late\w6 \f[height,7]well not that I mind"
			}
		}
		else
		{
			if "afternoon-cat" !_in_ relationships[3]
			{
				counter[17]++
			}
			else
			{
				if Flag("Glitch Fix") != 1; "P̴e̴r̶f̶e̷c̶t̶ ̶t̶i̵m̴e̶ ̵t̴o̸ ̶b̴e̵ ̵p̷r̵o̶d̸u̶c̵t̴i̴v̴e̶ ̶h̶u̴h̵?̶"
				else; "%(distingstart)Perfect time to be productive huh?"
			}
		}
	}
	--
	if button[28] == "ON"
	{
		"\![set,sticky-window,1,0,3,4,5,6,7,8,9,10,11,12,13,14]"
	}
	--
	"\0\s[0]%(hihello)%(users)\x\c"
	--
	if button[19] == "ON" || button[20] == "ON"
	{
		if locationcode != ""
		{
			bootweater = 1
			--
			OnDownloadCurWeather
		}
		else
		{
			bootweater = 1
			--
			OnWeatherLocation
		}
	}
	elseif button[21] == "ON"
	{
		"Searching for software updates....\![updatebymyself,checkonly]\e"
	}	
}

OnClose
{
	timeslot = GetTimeSlot 
	--
	if passmin >= 5	
	{
		if Flag("Obsidian") == 1
    	{
			if reference0 == "Dusty"
			{
				RemoveFlag("Obsidian")
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(users)\-\e"
			}
		}
		else
		{
			"\0%(byebye) %(users)\-\e"
		}	
 	}	
 	else 
 	{
		if Flag("Obsidian") == 1
    	{
			if reference0 == "Dusty"
			{
				RemoveFlag("Obsidian")
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(users)\-\e"
			}
		}
		else
		{
 			"\0Woah,\w8 that was quick\w8\w8\w8\w8\c %(byebye)%(users)\w8\w8\w8\w8\-\e"
		}
 	}
}

OnWindowStateMinimize
{
	if Flag("Obsidian") == 1
	{
		if reference0 == "Dusty"
		{
			RemoveFlag("Obsidian")
			"\0\s[0]\i[9000]%(byebye) kitty\e"
		}
	}
}

OnWindowStateRestore
{
	if Flag("Obsidian") == 1; "\1\s[-1]\0\s[1]back to work"
	else; "\1\s[-1]\0\s[0]back to work"
	--
	if button[0] == "ON"; "%(lightdark)"
	--
	"\e"
}
 
OnGhostChanging
 {
	if reference0 == "MiniDev"  //when changes to itself/reload, start
	{
		"\0Reload!\w8\w8\e"
	}
 	else 
	{
		if Flag("Obsidian") == 1
    	{
			if reference0 == "Dusty"
			{
				RemoveFlag("Obsidian")
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(reference0)\e"
			}
		}
		else
		{
			"\0%(byebye) %(reference0)\e"
		}
	}
}

OnGhostChanged
{
	"\0\1\s[10]" 
	--
	if reference0 == "MiniDev"   //when changes to itself/reload, end
	{
		"\0Done!\e"
	}
	else 
	{
		if Flag("Obsidian") == 1
    	{
			if reference0 == "Dusty"
			{
				RemoveFlag("Obsidian")
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(reference0)\e"
			}
		}
		else
		{
			"\0%(byebye) %(reference0)\e"
		}
	}
}
 
OnShellChanged
{
	nowshell = reference0
}

OnSurfacesTrue
{
	"\![set,othersurfacechange,true]"
}

OnCommTrue
{
	"\![set,otherghosttalk,after]"
}

OnArraysCheck //set arrays for logs
{
	if logdate == ""
	{
		_templogdate = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		logdate = SPLIT(_templogdate,",")
	}
	--
	if logname == ""
	{
		_templogname = "NO DATA,Gdylg Prruh,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		logname = SPLIT(_templogname,",")
	}
	--
	if loggen == ""
	{
		_temploggen = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		loggen = SPLIT(_temploggen,",")
	}
	--
	if logmod == ""
	{
		_templogmod = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR" 
		logmod = SPLIT(_templogmod,",")
	}
	--
	if logcont == ""
	{
		_somecomt = "NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA"
		logcont = SPLIT(_somecomt,",")
	}
}

FirstBootVariables 
{
	_templogdate = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	logdate = SPLIT(_templogdate,",")
	--
    _templogname = "NO DATA,Gdylg Prruh,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	logname = SPLIT(_templogname,",")
	--
    _temploggen = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	loggen = SPLIT(_temploggen,",")
	--
    _templogmod = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR" 
	logmod = SPLIT(_templogmod,",")
	--
	_somecomt = "NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA"
	logcont = SPLIT(_somecomt,",")
	--
	devlogcontent[1] = "201: Look what I can do :D\w8\n201: You can update log to respond to me\w8\n201: It's like a chat!\w8\n201: So,\w5 how are you?\n"
	--
	MiscFlags = IARRAY
	counter = IARRAY
	button = IARRAY
	info = IARRAY
	other = IARRAY
	--
	counter[0] = 1 
	counter[1] = 0 
	counter[2] = 0 
	counter[3] = 0 
	--
	for _i = 0;_i<29;_i++
	{
		button[_i] = "OFF"
	}
}

Select.move
{
	OnMoveQTool
}

OnMoveQTool
{
	if button[28] == "ON"
	{
		"\![reset,sticky-window]"
		--
		"\p[3]\![move,--X=1100,--Y=800]\p[4]\![move,--X=1100,--Y=800]\p[5]\![move,--X=1100,--Y=800]\p[6]\![move,--X=1100,--Y=800]\p[7]\![move,--X=1100,--Y=800]\p[8]\![move,--X=1100,--Y=800]\p[9]\![move,--X=1100,--Y=800]\p[10]\![move,--X=1100,--Y=800]"
		--
		"\![set,sticky-window,1,0,3,4,5,6,7,8,9,10]"
	}
	else
	{
		"\p[3]\![move,--X=1100,--Y=800]\p[4]\![move,--X=1100,--Y=800]\p[5]\![move,--X=1100,--Y=800]\p[6]\![move,--X=1100,--Y=800]\p[7]\![move,--X=1100,--Y=800]\p[8]\![move,--X=1100,--Y=800]\p[9]\![move,--X=1100,--Y=800]\p[10]\![move,--X=1100,--Y=800]"
	}
}

OnOtherGhostChanged
{
    if Flag("Obsidian") == 1
    {
        if reference0 == "Dusty"
        {
            RemoveFlag("Obsidian")
            "\0\s[0]\i[9000]%(byebye) kitty\e"
        }
    }
}

OnOtherGhostClosed
{
    if Flag("Obsidian") == 1
    {
        if reference0 == "Dusty"
        {
            RemoveFlag("Obsidian")
            "\0\s[0]\i[9000]%(byebye) kitty\e"
        }
    }
}

// %(installedghostlist)
//ghostexlist
//\![raise,OnUpdateVariables]
OnUpdateVariables
{
	"\e"
	--
	if info[4] == ""
	{
		info[4] = "1.0.3"
		--
		if relationships[0] == ""; relationships[0] = 0
		--
		if taskamount = ""; taskamount = 0
		--
		for _i=0;_i<=taskamount;_i++
		{
			if "\f[" _in_ todos[_i]; todostatus[_i] = 1
			else; todostatus[_i] = 0
		}
		--
		if info[0] == ""; info[0] = "Northern"
		--
		for _i = 0;_i<29;_i++
		{
			if button[_i] == ""; button[_i] = "OFF"
		}
		--
		for _i = 0;_i<11;_i++
		{
			if counter[_i] == ""; counter[_i] = 0
		}
		--
		if info[1] == ""; info[1] = "sai sai2 mdp kra blend"
		--
		if info[2] == ""; info[2] = "dd/mm/yyyy"
		--
		if info[3] == ""; info[3] = "STANDARD"
		--
		if info[3] == ""; info[3] = "STANDARD"
	}
	--
	if info[4] == "1.0.3"
	{
		info[4] = "1.0.6"
		namepage[0] = namepage
		taskamount[0] = taskamount
		pagetaskstatus[0] = REPLACE(todostatus,",","+")
		tasks[0] = REPLACE(todos,",","+")
		todopagenum = 0
		counter[8] = 0
		button[22] = "ON"
		button[23] = "ON"
		button[24] = "ON"
		button[25] = "ON"
		explained = " "
	}
	if info[4] == "1.0.6"
	{
		info[4] = "1.0.7"
		button[2] == "OFF"
		distingnarr = ""
		nardistingtype = "default"
	}
	--
	if info[4] == "1.0.7"
	{
		info[4] = "1.0.8"
		acc = "\f[color,#4cfc98]"
		button[26] = "ON"
	}
	--
	if info[4] == "1.0.8"
	{
		info[4] = "1.0.9"
		ghostmet = IARRAY
		nickname = "user" + RAND(10000)
		--
		if meetobsidian == 1; ghostmet ,= "Dusty"
		--
		if meetplant == 1; ghostmet ,= "Plant"
		--
		if metazura == 1; ghostmet ,= "Azura-1"
		--
		if metazura == 2; ghostmet ,= "Azura-2"
		--
		if meetingomega == 1; ghostmet ,= "Omega"
		--
		ERASEVAR("meetingomega","metazura","meetplant","meetobsidian")
		--
		if Flag("Token") != 1; "\![execute,http-get,http://ukg.ct8.pl/token.txt,--async=OnTokenCheck,--file=token.txt,--timeout=200]"
	}
	--
	if info[4] == "1.0.9"
	{
		info[4] = "1.1.2"
		button[27] = "OFF"
	}
	--
	if Flag("Narrator") != 1 && Flag("Glitch Fix") == 1
	{
		OnUnlockNarrator
	}
}

OnTokenCheck
{
	_file = "var\\token.txt"
	_tokens = IARRAY
	_line = ""
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _z=0; _z != -1; _line = FREAD(_file)
		{ 
			if _line == -1 || _line == "-1"
			{
				_z = 1
				break
			}
			else
			{
				_tokens ,= _line
			}
		}
	}
	--
    FCLOSE(_file)
	--
	if ASEARCH("M-" + modelp + "P",_tokens) != -1
	{
		modelp = RAND(1000)
		--
		OnTokenCheck
	}
	else
	{
		_arr = ARRAYSIZE(_tokens)
		--
		if FOPEN(_file,'a') {
			FWRITE(_file,"M-" + modelp + "P")
		}
		--
		FCLOSE(_file)
		--
		FUNCTIONEX("saori/filetransfer.dll","upload","http","ukg.ct8.pl/index.php","./"+_file)
		--
		_z = FDEL(_file)
		--
		//"done"
		MiscFlags ,= "Token"
	}
}

OnUnlockNarrator
{
	"\0%(distingstart)Huh,\w5 There is a weird new file?\w5\n\n[half]Did it come with %(devname)'s latest update?\x\c%(distingstart)Was there something about it in the update note?\w8\n\n[half]Wait a second I will check what it is .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8\x\c%(distingstart)\![open,file,narrator.txt]A narrator?\w6 why would an M-%(modelp)p need something like that?\x\c\1%(distingnarr)* You tell him you don't know\0%(distingstart)What\x\c\1* He seems confused\0%(distingstart)What is even happening\x\c\1%(distingnarr)* Please choose formatting for your narrator\0%(distingstart)Wait\w4 what is going on\x\c"
	--
	MiscFlags ,= "Narrator"
	--
	OnFormattingNar
}
