//**** Don't touch this ***************************************************************
On_\person
{
 	person
}

OnZChnage
{
	LETTONAME(reference0,onezero(reference1))
	--
	if reference0 == "removechar"
	{ 
		movechar = 0
		editchar = 0
	}
	elseif reference0 == "editchar"
	{ 
		removechar = 0
		uplog = 0
	}
	elseif reference0 == "movechar"
	{ 
		editchar = 0
		removechar = 0
	}
	--
	if reference2 == "char"; OnCharacterList
}

onezero //onezero(variable)
{
	if _argv[0] == 1 || _argv[0] == "1"; 0
	else; 1
}

nameracerand
{
	randsylabs
}

namerand
{
	charnamesmale
	charnamesfemale
	randsylabs
}

guardianstruble
{
	"DLT"
	"SGM"
}

surname
{
	"Hillshire"
	"Assange"
	"Sunfire"
	"Dartt"
	"Shepeard"
	"Nygaard"
	"Lentz"
	"Maloof"
	"Rien"
	"Malinche"
	"Koru"
	"Jonhson"
	"Cressida"
	"Norville"
	"Flin"
	"Prowse"
	"Hadaway"
	"Mioko"
	"Nekko"
	"Cimorelli"
	"Kijo"
	"Bodett"
	"Rameses"
	"Falken"
	"Eban"
	"Rhyne"
	"Beli"
	"Slingby"
	"Brenan"
	"Hupp"
	"Fontainebleau"
	"Kollins"
	"Wonkas"
	"Drummle"
	"Mephisto"
	"Vittons"
	"Baikal"
	"Bont"
	"Coggins"
	"Rouke"
	"Streiber"
	"Loblaw"
	"Daya"
	"Dayo"
	"Foxie"
	"Latos"
	"Rockatansky"
	"Tenjou"
	"Nannette"
	"Aldred"
	"Celest"
	"Aruba"
	"Unruh"
	"Peppin"
	"Mingle"
	"Castigliano"
	"Larka"
	"Brownstein"
	"Portsmouth"
	"Hitchcocks"
	"Orian"
	"Whitehawk"
	"Edina"
	"Malaysia"
	"Poopy"
	"Lyttle"
	"Crabb"
	"Ravenheart"
	"Motimiya"
	"Fuzen"
	"Arla"
	"Whatserface"
	"Claudel"
	"Cagalli"
	"Sherrington"
	"Ridell"
	"hihoin"
	"Adriano"
	"Kenshi"
	"Voynich"
	"Redbeard"
	"Czolgosz"
	"Voght"
	"Tarus"
	"Schlosser"
	"Wieland"
	"Levoy"
	"Gwendoline"
	"Veneto"
	"Gognitti"
	"Hikasa"
	"Silverburgh"
	"Vivier"
	"Syoaran"
	"Purdue"
	"Middlemas"
	"Provost"
	"Boyko"
	"Cheveyo"
	"Fatelli"
	"Renia"
	"Stormheart"
	"Highn"
	"Sterk"
	"Bascomb"
	"Jonh"
	"Morehead"
	"Afremov"
	"Azari"
	"Whitting"
	"Alicorn"
	"Yanahara"
	"Lipinsky"
	"Schecter"
	"Shikibu"
	"Mimiru"
	"Gurlukovich"
	"Hofstader"
	"Akua"
	"Shuri"
	"Parfitt"
	"Terrin"
	"Franzen"
	"Hiryuu"
	"Thain"
	"Rantzen"
	"Imani"
	"Kalan"
	"Hernando"
	"Neff"
	"Valentime"
	"Burchell"
	"Samira"
	"Croggon"
	"Lupescu"
	"Beards"
	"Endymon"
	"Teegarden"
	"Cita"
	"Herren"
	"Mcall"
	"Sorens"
	"Whitechapel"
	"Filia"
	"Wrightman"
	"Himawari"
	"Poniatowski"
	"Kion"
	"Dresner"
	"Litchfield"
	"Safire"
	"Sandry "
	"Hollingberry"
	"Bretton"
	"Goudling"
	"Faine"
	"Chocola"
	"Boer"
	"Duey"
	"Bruenor"
	"Blackshaw"
	"Shatterdome"
	"Miyahara"
	"Offenbach"
	"Snavely"
	"Gatomon"
	"Schlink"
	"Leala"
	"Jellicoe"
	"Weatherfield"
	"Ryuki"
	"Appleman"
	"Tullis"
	"Reedy"
	"Boxall"
	"Flemmings"
	"Bolet"
	"Nins"
	"Cuellar"
	"Kyona"
	"Runyan"
	"Hoggins"
	"Sanna"
	"Bestor"
	"Sakurada"
	"Jenison"
	"Arcueid"
	"Akashia"
	"Challoner"
	"Kilborn"
	"Bouguereau"
	"Massri"
	"Golbez"
	"Trammell"
	"Munchausen"
	"Bessler"
	"Dagonet"
	"Anala"
	"Azkadellia"
	"Ichida"
	"Goleman"
	"Gilmor"
	"Turnball"
	"Ketter"
	"Stonefield"
	"Gloriosus"
	"Raxton"
	"Kassia"
	"Doric"
	"Unitas"
	"Palmeri"
	"Zacharias"
	"Faren"
	"Gippal"
	"Messervy"
	"Meaney"
	"Graysons"
	"Belling"
	"Varnum"
	"Frankenteen"
	"Wann"
	"Hadar"
	"Jerkula"
	"Heartfilla"
	"Winch"
	"Kadohata"
	"Hotchkins"
	"Rickley"
	"Mouto"
	"Thorsten"
	"Brandenburg"
	"Sudbury"
	"Asherton"
	"Scarletta"
	"Ankoku"
	"Toye"
	"Beaudry"
	"Friedberg"
	"Chapuys"
	"Dreamcatcher"
	"Choderlos"
	"Shibasaki"
	"Mossberg"
	"Wolfen"
	"Golda"
	"Froggatt"
	"Pape"
	"Coulsons"
	"Tarou"
	"Dobby"
	"Ofelia"
	"Penderazzdown"
	"Smee"
	"Montanas"
	"Stienbeck"
	"Baynham"
	"Phlegm"
	"Kaneda"
	"Mirima"
	"Czech"
	"Neiderman"
	"Derlin"
	"Hartwright"
	"Jewlers"
	"Turnquist"
	"Lamon"
	"Rostoff"
	"Wunny"
	"Lamora"
	"Sonne"
	"Extremis"
	"Hugger"
	"Mannor"
	"Kalinowski"
	"Thibideaux"
	"Cheeto"
	"Gredenko"
	"Bennit"
	"Canaver"
	"Tripley"
	"Byakko"
	"Majin"
	"Joanie"
	"Monoko"
	"Namine"
	"Mably"
	"Choate"
	"Chim"
	"Tynan"
	"Dimir"
	"Digg"
	"Hertford"
	"Tenton"
	"Huit"
	"Falin"
	"Joncas"
	"Foofoo"
	"Slutskaya"
	"Waltfield"
	"Folson"
	"Diaires"
	"Miyasaki"
	"Gorgan"
	"Sproule"
	"Verdier"
	"Divan"
	"Unikitty"
	"Bensons"
	"Honora"
	"Sommersby"
	"Darkson"
	"Brockton"
	"Bieb"
	"Wetherly"
	"Finnley"
	"Prieto"
	"Lyndsay"
	"Ellard"
	"Rocko"
	"Matterhorn"
	"Grendal"
	"Dayle"
	"Zuber"
	"Krull"
	"Tobi"
	"Diya"
	"Seoul"
	"Lainer"
	"Reynol"
	"Widen"
	"Whiler"
	"Yuudai"
	"Ariya"
	"Schwarzkopf"
	"Becka"
	"Witmore"
	"Annafellows"
	"Fiorentino"
	"Hankel"
	"Mizuro"
	"Stohl"
	"Slay"
	"Linders"
	"Plowman"
	"Bali"
	"Bartels"
	"Grif"
	"Seiler"
	"Tuckerson"
	"Mockingjay"
	"Adison"
	"Bolkonsky"
	"Scuderi"
	"Engarde"
	"Crafton"
	"Silverstream"
	"Mcquire"
	"Edinburg"
	"Duerr"
	"Warring"
	"Boid"
	"Felch"
	"Filipov"
	"Bergmen"
	"Veemon"
	"Pare"
	"Novia"
	"Medb"
	"Nariko"
	"Nini"
	"Dume"
	"Karam"
	"Evelynn"
	"Sciver"
	"Ouran"
	"Dany"
	"Warz"
	"Leelee"
	"Yamagishi"
	"Sheller"
	"Dothan"
	"Manningham"
	"Rathaway"
	"Fordyce"
	"Sabella"
	"Tayson"
	"Hellen"
	"Gillett"
	"Borisov"
	"Minas"
	"Izzie"
	"Corvino"
	"Wakka"
	"Prest"
	"Tarpin"
	"Dacosta"
	"Hadfield"
	"Brennans"
	"Frick"
	"Shey"
	"Turley"
	"Ditko"
	"Venna"
	"Gemcity"
	"Norcross"
	"Freeport"
	"Beales"
	"Toshiko"
	"Harrietta"
	"Buttz"
	"Liath"
	"Reynaud"
	"Hudak"
	"Hallstrom"
	"Hagberg"
	"Seagram"
	"Scarr"
	"Carrara"
	"Friedmann"
	"Jelous"
	"Mikaelsen"
	"Fischbach"
	"Italians"
	"Connells"
	"Edel"
	"Sasame"
	"Bream"
	"Arria"
	"Dorthy"
	"Kardashin"
	"Dotour"
	"Redburn"
	"Azim"
	"Walhberg"
	"Bache"
	"Fantaisie"
	"Macke"
	"Alekhine"
	"Ihave"
	"Accalia"
	"Wakowski"
	"Caldwin"
	"Blacker"
	"Scuro"
	"Hinagiku"
	"Tingle"
	"Delmhorst"
	"Kenan"
	"Dukov"
	"Rogel"
	"Hokuto"
	"Brannaugh"
	"Ostrander"
	"Jagan"
	"Mizaki"
	"Sakara"
	"Willmington"
	"Geren"
	"Maury"
	"Kenneally"
	"Firey"
	"Tupolev"
	"Ambroise"
	"Reymond"
	"Modine"
	"Grayfield"
	"Fannin"
	"Livington"
	"Dougall"
	"Fosdyke"
	"Wist"
	"Nuriko"
	"Bronwyn"
	"Ficton"
	"Finnley"
	"Ashlee"
	"Connory"
	"Kittinger"
	"Linberg"
	"Pein"
	"Blainey"
	"Shisui"
	"Niemi"
	"Mcgonagal"
	"Morrill"
	"Caliburn"
	"Bumby"
	"Silvermen"
	"Kalila"
	"Onaga"
	"Boudin"
	"Collet"
	"Remis"
	"Mure"
	"Therin"
	"Yomiko"
	"Empson"
	"Kennicot"
	"Rayquaza"
	"Delroy"
	"Alde"
	"Hoshikawa"
	"Waldemar"
	"Rhett"
	"Simetra"
	"Megane"
	"Lenscherr"
	"Udinov"
	"Cassano"
	"Prinston"
	"Novell"
	"Fairchilde"
	"Tovar"
	"Macfadyen"
	"Elowen"
	"Jenova"
	"Daris"
	"Kimba"
	"Tumes"
	"Cronk"
	"Proffitt"
	"Genious"
	"Vrenna"
	"Railey"
	"Wysocki"
	"Rames"
	"Pianissima"
	"Artha"
	"Kentworth"
	"Sulley"
	"Stadler"
	"Adako"
	randsylabs
}

randsylabs
{
	word = ""
	letter = RAND(ARRAYSIZE(alphabettemp))
	--
	num = RAND(maxletter)
	--
	if num < minletter
	{
		num = minletter
	}
	--
	for _j=0;_j<=num;_j++
	{
		if rulethree == "ON"
		{
			for _x=0;_x<=numcom;_x++
			{
				newlet = RAND(ARRAYSIZE(alphabettemp))
				--
				if newlet == letter
				{
					if RAND(2) == 1
					{
						if alphabettemp[letter-newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x-newlet
						}
					}
					else
					{
						if alphabettemp[letter+newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x+newlet
						}
					}
				}
				--
				if letterprev == alphabettemp[letter+_x]
				{
					if RAND(2) == 1
					{
						if alphabettemp[letter-newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x-newlet
						}
					}
					else
					{
						if alphabettemp[letter+newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x+newlet
						}
					}
				}
				--
				if letterprev == alphabettemp[letter-_x]
				{
					if RAND(2) == 1
					{
						if alphabettemp[letter-newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x-newlet
						}
					}
					else
					{
						if alphabettemp[letter+newlet] == ""
						{
							letter = ARRAYSIZE(alphabettemp)
						}
						else
						{
							letter += _x+newlet
						}
					}
				}
			}
		}
		--
		if ruletwo == "ON"
		{
			if alphabettemp[letter] == letterprev
			{
				letter += 1
			}
		}
		--
		if ruleone == "ON"
		{
			if "'" _in_ word && "'" _in_ alphabettemp[letter]
			{
				word = REPLACE(word,"'","")
			}
		}
		--
		if letterprev == "'" && alphabettemp[letter] == "-"
		{
			letter = RAND(15)
		}
		elseif letterprev == "-" && alphabettemp[letter] == "'"
		{
			letter = RAND(15)
		}
		--
		word += alphabettemp[letter]
		letterprev = alphabettemp[letter]
	}
	--
	word = ERASE(word,0,1)
	_buffer = SUBSTR(word,0,1)
	word = INSERT(word,0,TOUPPER(_buffer))
	--
	"%(word)"
}

charnamesmale
{
	"Liam"
	"Noah"
	"William"
	"James"
	"Oliver"
	"Benjamin"
	"Elijah"
	"Lucas"
	"Mason"
	"Logan"
	"Alexander"
	"Ethan"
	"Jacob"
	"Michael"
	"Daniel"
	"Henry"
	"Jackson"
	"Sebastian"
	"Aiden"
	"Matthew"
	"Samuel"
	"David"
	"Joseph"
	"Carter"
	"Owen"
	"Wyatt"
	"John"
	"Jack"
	"Luke"
	"Jayden"
	"Dylan"
	"Grayson"
	"Levi"
	"Isaac"
	"Gabriel"
	"Julian"
	"Mateo"
	"Anthony"
	"Jaxon"
	"Lincoln"
	"Joshua"
	"Christopher"
	"Andrew"
	"Theodore"
	"Caleb"
	"Ryan"
	"Asher"
	"Nathan"
	"Thomas"
	"Leo"
	"Isaiah"
	"Charles"
	"Josiah"
	"Hudson"
	"Christian"
	"Hunter"
	"Connor"
	"Eli"
	"Ezra"
	"Aaron"
	"Landon"
	"Adrian"
	"Jonathan"
	"Nolan"
	"Jeremiah"
	"Easton"
	"Elias"
	"Colton"
	"Cameron"
	"Carson"
	"Robert"
	"Angel"
	"Maverick"
	"Nicholas"
	"Dominic"
	"Jaxson"
	"Greyson"
	"Adam"
	"Ian"
	"Austin"
	"Santiago"
	"Jordan"
	"Cooper"
	"Brayden"
	"Roman"
	"Evan"
	"Ezekiel"
	"Xavier"
	"Jose"
	"Jace"
	"Jameson"
	"Leonardo"
	"Bryson"
	"Axel"
	"Everett"
	"Parker"
	"Kayden"
	"Miles"
	"Sawyer"
	"Jason"
	"Declan"
	"Weston"
	"Micah"
	"Ayden"
	"Wesley"
	"Luca"
	"Vincent"
	"Damian"
	"Zachary"
	"Silas"
	"Gavin"
	"Chase"
	"Kai"
	"Emmett"
	"Harrison"
	"Nathaniel"
	"Kingston"
	"Cole"
	"Tyler"
	"Bennett"
	"Bentley"
	"Ryker"
	"Tristan"
	"Brandon"
	"Kevin"
	"Luis"
	"George"
	"Ashton"
	"Rowan"
	"Braxton"
	"Ryder"
	"Gael"
	"Ivan"
	"Diego"
	"Maxwell"
	"Max"
	"Carlos"
	"Kaiden"
	"Juan"
	"Maddox"
	"Justin"
	"Waylon"
	"Calvin"
	"Giovanni"
	"Jonah"
	"Abel"
	"Jayce"
	"Jesus"
	"Amir"
	"King"
	"Beau"
	"Camden"
	"Alex"
	"Jasper"
	"Malachi"
	"Brody"
	"Jude"
	"Blake"
	"Emmanuel"
	"Eric"
	"Brooks"
	"Elliot"
	"Antonio"
	"Abraham"
	"Timothy"
	"Finn"
	"Rhett"
	"Elliott"
	"Edward"
	"August"
	"Xander"
	"Alan"
	"Dean"
	"Lorenzo"
	"Bryce"
	"Karter"
	"Victor"
	"Milo"
	"Miguel"
	"Hayden"
	"Graham"
	"Grant"
	"Zion"
	"Tucker"
	"Jesse"
	"Zayden"
	"Joel"
	"Richard"
	"Patrick"
	"Emiliano"
	"Avery"
	"Nicolas"
	"Brantley"
	"Dawson"
	"Myles"
	"Matteo"
	"River"
	"Steven"
	"Thiago"
	"Zane"
	"Matias"
	"Judah"
	"Messiah"
	"Jeremy"
	"Preston"
	"Oscar"
	"Kaleb"
	"Alejandro"
	"Marcus"
	"Mark"
	"Peter"
	"Maximus"
	"Barrett"
	"Jax"
	"Andres"
	"Holden"
	"Legend"
	"Charlie"
	"Knox"
	"Kaden"
	"Paxton"
	"Kyrie"
	"Kyle"
	"Griffin"
	"Josue"
	"Kenneth"
	"Beckett"
	"Enzo"
	"Adriel"
	"Arthur"
	"Felix"
	"Bryan"
	"Lukas"
	"Paul"
	"Brian"
	"Colt"
	"Caden"
	"Leon"
	"Archer"
	"Omar"
	"Israel"
	"Aidan"
	"Theo"
	"Javier"
	"Remington"
	"Jaden"
	"Bradley"
	"Emilio"
	"Colin"
	"Riley"
	"Cayden"
	"Phoenix"
	"Clayton"
	"Simon"
	"Ace"
	"Nash"
	"Derek"
	"Rafael"
	"Zander"
	"Brady"
	"Jorge"
	"Jake"
	"Louis"
	"Damien"
	"Karson"
	"Walker"
	"Maximiliano"
	"Amari"
	"Sean"
	"Chance"
	"Walter"
	"Martin"
	"Finley"
	"Andre"
	"Tobias"
	"Cash"
	"Corbin"
	"Arlo"
	"Iker"
	"Erick"
	"Emerson"
	"Gunner"
	"Cody"
	"Stephen"
	"Francisco"
	"Killian"
	"Dallas"
	"Reid"
	"Manuel"
	"Lane"
	"Atlas"
	"Rylan"
	"Jensen"
	"Ronan"
	"Beckham"
	"Daxton"
	"Anderson"
	"Kameron"
	"Raymond"
	"Orion"
	"Cristian"
	"Tanner"
	"Kyler"
	"Jett"
	"Cohen"
	"Ricardo"
	"Spencer"
	"Gideon"
	"Ali"
	"Fernando"
	"Jaiden"
	"Titus"
	"Travis"
	"Bodhi"
	"Eduardo"
	"Dante"
	"Ellis"
	"Prince"
	"Kane"
	"Luka"
	"Kash"
	"Hendrix"
	"Desmond"
	"Donovan"
	"Mario"
	"Atticus"
	"Cruz"
	"Garrett"
	"Hector"
	"Angelo"
	"Jeffrey"
	"Edwin"
	"Cesar"
	"Zayn"
	"Devin"
	"Conor"
	"Warren"
	"Odin"
	"Jayceon"
	"Romeo"
	"Julius"
	"Jaylen"
	"Hayes"
	"Kayson"
	"Muhammad"
	"Jaxton"
	"Joaquin"
	"Caiden"
	"Dakota"
	"Major"
	"Keegan"
	"Sergio"
	"Marshall"
	"Johnny"
	"Kade"
	"Edgar"
	"Leonel"
	"Ismael"
	"Marco"
	"Tyson"
	"Wade"
	"Collin"
	"Troy"
	"Nasir"
	"Conner"
	"Adonis"
	"Jared"
	"Rory"
	"Andy"
	"Jase"
	"Lennox"
	"Shane"
	"Malik"
	"Ari"
	"Reed"
	"Seth"
	"Clark"
	"Erik"
	"Lawson"
	"Trevor"
	"Gage"
	"Nico"
	"Malakai"
	"Quinn"
	"Cade"
	"Johnathan"
	"Sullivan"
	"Solomon"
	"Cyrus"
	"Fabian"
	"Pedro"
	"Frank"
	"Shawn"
	"Malcolm"
	"Khalil"
	"Nehemiah"
	"Dalton"
	"Mathias"
	"Jay"
	"Ibrahim"
	"Peyton"
	"Winston"
	"Kason"
	"Zayne"
	"Noel"
	"Princeton"
	"Matthias"
	"Gregory"
	"Sterling"
	"Dominick"
	"Elian"
	"Grady"
	"Russell"
	"Finnegan"
	"Ruben"
	"Gianni"
	"Porter"
	"Kendrick"
	"Leland"
	"Pablo"
	"Allen"
	"Hugo"
	"Raiden"
	"Kolton"
	"Remy"
	"Ezequiel"
	"Damon"
	"Emanuel"
	"Zaiden"
	"Otto"
	"Bowen"
	"Marcos"
	"Abram"
	"Kasen"
	"Franklin"
	"Royce"
	"Jonas"
	"Sage"
	"Philip"
	"Esteban"
	"Drake"
	"Kashton"
	"Roberto"
	"Harvey"
	"Alexis"
	"Kian"
	"Jamison"
	"Maximilian"
	"Adan"
	"Milan"
	"Phillip"
	"Albert"
	"Dax"
	"Mohamed"
	"Ronin"
	"Kamden"
	"Hank"
	"Memphis"
	"Oakley"
	"Augustus"
	"Drew"
	"Moises"
	"Armani"
	"Rhys"
	"Benson"
	"Jayson"
	"Kyson"
	"Braylen"
	"Corey"
	"Gunnar"
	"Omari"
	"Alonzo"
	"Landen"
	"Armando"
	"Derrick"
	"Dexter"
	"Enrique"
	"Bruce"
	"Nikolai"
	"Francis"
	"Rocco"
	"Kairo"
	"Royal"
	"Zachariah"
	"Arjun"
	"Deacon"
	"Skyler"
	"Eden"
	"Alijah"
	"Rowen"
	"Pierce"
	"Uriel"
	"Ronald"
	"Luciano"
	"Tate"
	"Frederick"
	"Kieran"
	"Lawrence"
	"Moses"
	"Rodrigo"
	"Brycen"
	"Leonidas"
	"Nixon"
	"Keith"
	"Chandler"
	"Case"
	"Davis"
	"Asa"
	"Darius"
	"Isaias"
	"Aden"
	"Jaime"
	"Landyn"
	"Raul"
	"Niko"
	"Trenton"
	"Apollo"
	"Cairo"
	"Izaiah"
	"Scott"
	"Dorian"
	"Julio"
	"Wilder"
	"Santino"
	"Dustin"
	"Donald"
	"Raphael"
	"Saul"
	"Taylor"
	"Ayaan"
	"Duke"
	"Ryland"
	"Tatum"
	"Ahmed"
	"Moshe"
	"Edison"
	"Emmitt"
	"Cannon"
	"Alec"
	"Danny"
	"Keaton"
	"Roy"
	"Conrad"
	"Roland"
	"Quentin"
	"Lewis"
	"Samson"
	"Brock"
	"Kylan"
	"Cason"
	"Ahmad"
	"Jalen"
	"Nikolas"
	"Braylon"
	"Kamari"
	"Dennis"
	"Callum"
	"Justice"
	"Soren"
	"Rayan"
	"Aarav"
	"Gerardo"
	"Ares"
	"Brendan"
	"Jamari"
	"Kaison"
	"Yusuf"
	"Issac"
	"Jasiah"
	"Callen"
	"Forrest"
	"Makai"
	"Crew"
	"Kobe"
	"Bo"
	"Julien"
	"Mathew"
	"Braden"
	"Johan"
	"Marvin"
	"Zaid"
	"Stetson"
	"Casey"
	"Ty"
	"Ariel"
	"Tony"
	"Zain"
	"Callan"
	"Cullen"
	"Sincere"
	"Uriah"
	"Dillon"
	"Kannon"
	"Colby"
	"Axton"
	"Cassius"
	"Quinton"
	"Mekhi"
	"Reece"
	"Alessandro"
	"Jerry"
	"Mauricio"
	"Sam"
	"Trey"
	"Mohammad"
	"Alberto"
	"Gustavo"
	"Arturo"
	"Fletcher"
	"Marcelo"
	"Abdiel"
	"Hamza"
	"Alfredo"
	"Chris"
	"Finnley"
	"Curtis"
	"Kellan"
	"Quincy"
	"Kase"
	"Harry"
	"Kyree"
	"Wilson"
	"Cayson"
	"Hezekiah"
	"Kohen"
	"Neil"
	"Mohammed"
	"Raylan"
	"Kaysen"
	"Lucca"
	"Sylas"
	"Mack"
	"Leonard"
	"Lionel"
	"Ford"
	"Roger"
	"Rex"
	"Alden"
	"Boston"
	"Colson"
	"Briggs"
	"Zeke"
	"Dariel"
	"Kingsley"
	"Valentino"
	"Jamir"
	"Salvador"
	"Vihaan"
	"Mitchell"
	"Lance"
	"Lucian"
	"Darren"
	"Jimmy"
	"Alvin"
	"Amos"
	"Tripp"
	"Zaire"
	"Layton"
	"Reese"
	"Casen"
	"Colten"
	"Brennan"
	"Korbin"
	"Sonny"
	"Bruno"
	"Orlando"
	"Devon"
	"Huxley"
	"Boone"
	"Maurice"
	"Nelson"
	"Douglas"
	"Randy"
	"Gary"
	"Lennon"
	"Titan"
	"Denver"
	"Jaziel"
	"Noe"
	"Jefferson"
	"Ricky"
	"Lochlan"
	"Rayden"
	"Bryant"
	"Langston"
	"Lachlan"
	"Clay"
	"Abdullah"
	"Lee"
	"Baylor"
	"Leandro"
	"Ben"
	"Kareem"
	"Layne"
	"Joe"
	"Crosby"
	"Deandre"
	"Demetrius"
	"Kellen"
	"Carl"
	"Jakob"
	"Ridge"
	"Bronson"
	"Jedidiah"
	"Rohan"
	"Larry"
	"Stanley"
	"Tomas"
	"Shiloh"
	"Thaddeus"
	"Watson"
	"Baker"
	"Vicente"
	"Koda"
	"Jagger"
	"Nathanael"
	"Carmelo"
	"Shepherd"
	"Graysen"
	"Melvin"
	"Ernesto"
	"Jamie"
	"Yosef"
	"Clyde"
	"Eddie"
	"Tristen"
	"Grey"
	"Ray"
	"Tommy"
	"Samir"
	"Ramon"
	"Santana"
	"Kristian"
	"Marcel"
	"Wells"
	"Zyaire"
	"Brecken"
	"Byron"
	"Otis"
	"Reyansh"
	"Axl"
	"Joey"
	"Trace"
	"Morgan"
	"Musa"
	"Harlan"
	"Enoch"
	"Henrik"
	"Kristopher"
	"Talon"
	"Rey"
	"Guillermo"
	"Houston"
	"Jon"
	"Vincenzo"
	"Dane"
	"Terry"
	"Azariah"
	"Castiel"
	"Kye"
	"Augustine"
	"Zechariah"
	"Joziah"
	"Kamryn"
	"Hassan"
	"Jamal"
	"Chaim"
	"Bodie"
	"Emery"
	"Branson"
	"Jaxtyn"
	"Kole"
	"Wayne"
	"Aryan"
	"Alonso"
	"Brixton"
	"Madden"
	"Allan"
	"Flynn"
	"Jaxen"
	"Harley"
	"Magnus"
	"Sutton"
	"Dash"
	"Anders"
	"Westley"
	"Brett"
	"Emory"
	"Felipe"
	"Yousef"
	"Jadiel"
	"Mordechai"
	"Dominik"
	"Junior"
	"Eliseo"
	"Fisher"
	"Harold"
	"Jaxxon"
	"Kamdyn"
	"Maximo"
	"Caspian"
	"Kelvin"
	"Damari"
	"Fox"
	"Trent"
	"Hugh"
	"Briar"
	"Franco"
	"Keanu"
	"Terrance"
	"Yahir"
	"Ameer"
	"Kaiser"
	"Thatcher"
	"Ishaan"
	"Koa"
	"Merrick"
	"Coen"
	"Rodney"
	"Brayan"
	"London"
	"Rudy"
	"Gordon"
	"Bobby"
	"Aron"
	"Marc"
	"Van"
	"Anakin"
	"Canaan"
	"Dario"
	"Reginald"
	"Westin"
	"Darian"
	"Ledger"
	"Leighton"
	"Maxton"
	"Tadeo"
	"Valentin"
	"Aldo"
	"Khalid"
	"Nickolas"
	"Toby"
	"Dayton"
	"Jacoby"
	"Billy"
	"Gatlin"
	"Elisha"
	"Jabari"
	"Jermaine"
	"Alvaro"
	"Marlon"
	"Mayson"
	"Blaze"
	"Jeffery"
	"Kace"
	"Braydon"
	"Achilles"
	"Brysen"
	"Saint"
	"Xzavier"
	"Aydin"
	"Eugene"
	"Adrien"
	"Cain"
	"Kylo"
	"Nova"
	"Onyx"
	"Arian"
	"Bjorn"
	"Jerome"
	"Miller"
	"Alfred"
	"Kenzo"
	"Kyng"
	"Leroy"
	"Maison"
	"Jordy"
	"Stefan"
	"Wallace"
	"Benicio"
	"Kendall"
	"Zayd"
	"Blaine"
	"Tristian"
	"Anson"
	"Gannon"
	"Jeremias"
	"Marley"
	"Ronnie"
	"Dangelo"
	"Kody"
	"Will"
	"Bentlee"
	"Gerald"
	"Salvatore"
	"Turner"
	"Chad"
	"Misael"
	"Mustafa"
	"Konnor"
	"Maxim"
	"Rogelio"
	"Zakai"
	"Cory"
	"Judson"
	"Brentley"
	"Darwin"
	"Louie"
	"Ulises"
	"Dakari"
	"Rocky"
	"Wesson"
	"Alfonso"
	"Payton"
	"Dwayne"
	"Juelz"
	"Duncan"
	"Keagan"
	"Deshawn"
	"Bode"
	"Bridger"
	"Skylar"
	"Brodie"
	"Landry"
	"Avi"
	"Keenan"
	"Reuben"
	"Jaxx"
	"Rene"
	"Yehuda"
	"Imran"
	"Yael"
	"Alexzander"
	"Willie"
	"Cristiano"
	"Heath"
	"Lyric"
	"Davion"
	"Elon"
	"Karsyn"
	"Krew"
	"Jairo"
	"Maddux"
	"Ephraim"
	"Ignacio"
	"Vivaan"
	"Aries"
	"Vance"
	"Boden"
	"Lyle"
	"Ralph"
	"Reign"
	"Camilo"
	"Draven"
	"Terrence"
	"Idris"
	"Ira"
	"Javion"
	"Jericho"
	"Khari"
	"Marcellus"
	"Creed"
	"Shepard"
	"Terrell"
	"Ahmir"
	"Camdyn"
	"Cedric"
	"Howard"
	"Jad"
	"Zahir"
	"Harper"
	"Justus"
	"Forest"
	"Gibson"
	"Zev"
	"Alaric"
	"Decker"
	"Ernest"
	"Jesiah"
	"Torin"
	"Benedict"
	"Bowie"
	"Deangelo"
	"Genesis"
	"Harlem"
	"Kalel"
	"Kylen"
	"Bishop"
	"Immanuel"
	"Lian"
	"Zavier"
	"Archie"
	"Davian"
	"Gus"
	"Kabir"
	"Korbyn"
	"Randall"
	"Benton"
	"Coleman"
	"Markus"	
}

charnamesfemale
{
	"Emma"
	"Olivia"
	"Ava"
	"Isabella"
	"Sophia"
	"Charlotte"
	"Mia"
	"Amelia"
	"Harper"
	"Evelyn"
	"Abigail"
	"Emily"
	"Elizabeth"
	"Mila"
	"Ella"
	"Avery"
	"Sofia"
	"Camila"
	"Aria"
	"Scarlett"
	"Victoria"
	"Madison"
	"Luna"
	"Grace"
	"Chloe"
	"Penelope"
	"Layla"
	"Riley"
	"Zoey"
	"Nora"
	"Lily"
	"Eleanor"
	"Hannah"
	"Lillian"
	"Addison"
	"Aubrey"
	"Ellie"
	"Stella"
	"Natalie"
	"Zoe"
	"Leah"
	"Hazel"
	"Violet"
	"Aurora"
	"Savannah"
	"Audrey"
	"Brooklyn"
	"Bella"
	"Claire"
	"Skylar"
	"Lucy"
	"Paisley"
	"Everly"
	"Anna"
	"Caroline"
	"Nova"
	"Genesis"
	"Emilia"
	"Kennedy"
	"Samantha"
	"Maya"
	"Willow"
	"Kinsley"
	"Naomi"
	"Aaliyah"
	"Elena"
	"Sarah"
	"Ariana"
	"Allison"
	"Gabriella"
	"Alice"
	"Madelyn"
	"Cora"
	"Ruby"
	"Eva"
	"Serenity"
	"Autumn"
	"Adeline"
	"Hailey"
	"Gianna"
	"Valentina"
	"Isla"
	"Eliana"
	"Quinn"
	"Nevaeh"
	"Ivy"
	"Sadie"
	"Piper"
	"Lydia"
	"Alexa"
	"Josephine"
	"Emery"
	"Julia"
	"Delilah"
	"Arianna"
	"Vivian"
	"Kaylee"
	"Sophie"
	"Brielle"
	"Madeline"
	"Peyton"
	"Rylee"
	"Clara"
	"Hadley"
	"Melanie"
	"Mackenzie"
	"Reagan"
	"Adalynn"
	"Liliana"
	"Aubree"
	"Jade"
	"Katherine"
	"Isabelle"
	"Natalia"
	"Raelynn"
	"Maria"
	"Athena"
	"Ximena"
	"Arya"
	"Leilani"
	"Taylor"
	"Faith"
	"Rose"
	"Kylie"
	"Alexandra"
	"Mary"
	"Margaret"
	"Lyla"
	"Ashley"
	"Amaya"
	"Eliza"
	"Brianna"
	"Bailey"
	"Andrea"
	"Khloe"
	"Jasmine"
	"Melody"
	"Iris"
	"Isabel"
	"Norah"
	"Annabelle"
	"Valeria"
	"Emerson"
	"Adalyn"
	"Ryleigh"
	"Eden"
	"Emersyn"
	"Anastasia"
	"Kayla"
	"Alyssa"
	"Juliana"
	"Charlie"
	"Esther"
	"Ariel"
	"Cecilia"
	"Valerie"
	"Alina"
	"Molly"
	"Reese"
	"Aliyah"
	"Lilly"
	"Parker"
	"Finley"
	"Morgan"
	"Sydney"
	"Jordyn"
	"Eloise"
	"Trinity"
	"Daisy"
	"Kimberly"
	"Lauren"
	"Genevieve"
	"Sara"
	"Arabella"
	"Harmony"
	"Elise"
	"Remi"
	"Teagan"
	"Alexis"
	"London"
	"Sloane"
	"Laila"
	"Lucia"
	"Diana"
	"Juliette"
	"Sienna"
	"Elliana"
	"Londyn"
	"Ayla"
	"Callie"
	"Gracie"
	"Josie"
	"Amara"
	"Jocelyn"
	"Daniela"
	"Everleigh"
	"Mya"
	"Rachel"
	"Summer"
	"Alana"
	"Brooke"
	"Alaina"
	"Mckenzie"
	"Catherine"
	"Amy"
	"Presley"
	"Journee"
	"Rosalie"
	"Ember"
	"Brynlee"
	"Rowan"
	"Joanna"
	"Paige"
	"Rebecca"
	"Ana"
	"Sawyer"
	"Mariah"
	"Nicole"
	"Brooklynn"
	"Payton"
	"Marley"
	"Fiona"
	"Georgia"
	"Lila"
	"Harley"
	"Adelyn"
	"Alivia"
	"Noelle"
	"Gemma"
	"Vanessa"
	"Journey"
	"Makayla"
	"Angelina"
	"Adaline"
	"Catalina"
	"Alayna"
	"Julianna"
	"Leila"
	"Lola"
	"Adriana"
	"June"
	"Juliet"
	"Jayla"
	"River"
	"Tessa"
	"Lia"
	"Dakota"
	"Delaney"
	"Selena"
	"Blakely"
	"Ada"
	"Camille"
	"Zara"
	"Malia"
	"Hope"
	"Samara"
	"Vera"
	"Mckenna"
	"Briella"
	"Izabella"
	"Hayden"
	"Raegan"
	"Michelle"
	"Angela"
	"Ruth"
	"Freya"
	"Kamila"
	"Vivienne"
	"Aspen"
	"Olive"
	"Kendall"
	"Elaina"
	"Thea"
	"Kali"
	"Destiny"
	"Amiyah"
	"Evangeline"
	"Cali"
	"Blake"
	"Elsie"
	"Juniper"
	"Alexandria"
	"Myla"
	"Ariella"
	"Kate"
	"Mariana"
	"Lilah"
	"Charlee"
	"Daleyza"
	"Nyla"
	"Jane"
	"Maggie"
	"Zuri"
	"Aniyah"
	"Lucille"
	"Leia"
	"Melissa"
	"Adelaide"
	"Amina"
	"Giselle"
	"Lena"
	"Camilla"
	"Miriam"
	"Millie"
	"Brynn"
	"Gabrielle"
	"Sage"
	"Annie"
	"Logan"
	"Lilliana"
	"Haven"
	"Jessica"
	"Kaia"
	"Magnolia"
	"Amira"
	"Adelynn"
	"Makenzie"
	"Stephanie"
	"Nina"
	"Phoebe"
	"Arielle"
	"Evie"
	"Lyric"
	"Alessandra"
	"Gabriela"
	"Paislee"
	"Raelyn"
	"Madilyn"
	"Paris"
	"Makenna"
	"Kinley"
	"Gracelyn"
	"Talia"
	"Maeve"
	"Rylie"
	"Kiara"
	"Evelynn"
	"Brinley"
	"Jacqueline"
	"Laura"
	"Gracelynn"
	"Lexi"
	"Ariah"
	"Fatima"
	"Jennifer"
	"Kehlani"
	"Alani"
	"Ariyah"
	"Luciana"
	"Allie"
	"Heidi"
	"Maci"
	"Phoenix"
	"Felicity"
	"Joy"
	"Kenzie"
	"Veronica"
	"Margot"
	"Addilyn"
	"Lana"
	"Cassidy"
	"Remington"
	"Saylor"
	"Ryan"
	"Keira"
	"Harlow"
	"Miranda"
	"Angel"
	"Amanda"
	"Daniella"
	"Royalty"
	"Gwendolyn"
	"Ophelia"
	"Heaven"
	"Jordan"
	"Madeleine"
	"Esmeralda"
	"Kira"
	"Miracle"
	"Elle"
	"Amari"
	"Danielle"
	"Daphne"
	"Willa"
	"Haley"
	"Gia"
	"Kaitlyn"
	"Oakley"
	"Kailani"
	"Winter"
	"Alicia"
	"Serena"
	"Nadia"
	"Aviana"
	"Demi"
	"Jada"
	"Braelynn"
	"Dylan"
	"Ainsley"
	"Alison"
	"Camryn"
	"Avianna"
	"Bianca"
	"Skyler"
	"Scarlet"
	"Maddison"
	"Nylah"
	"Sarai"
	"Regina"
	"Dahlia"
	"Nayeli"
	"Raven"
	"Helen"
	"Adrianna"
	"Averie"
	"Skye"
	"Kelsey"
	"Tatum"
	"Kensley"
	"Maliyah"
	"Erin"
	"Viviana"
	"Jenna"
	"Anaya"
	"Carolina"
	"Shelby"
	"Sabrina"
	"Mikayla"
	"Annalise"
	"Octavia"
	"Lennon"
	"Blair"
	"Carmen"
	"Yaretzi"
	"Kennedi"
	"Mabel"
	"Zariah"
	"Kyla"
	"Christina"
	"Selah"
	"Celeste"
	"Eve"
	"Mckinley"
	"Milani"
	"Frances"
	"Jimena"
	"Kylee"
	"Leighton"
	"Katie"
	"Aitana"
	"Kayleigh"
	"Sierra"
	"Kathryn"
	"Rosemary"
	"Jolene"
	"Alondra"
	"Elisa"
	"Helena"
	"Charleigh"
	"Hallie"
	"Lainey"
	"Avah"
	"Jazlyn"
	"Kamryn"
	"Mira"
	"Cheyenne"
	"Francesca"
	"Antonella"
	"Wren"
	"Chelsea"
	"Amber"
	"Emory"
	"Lorelei"
	"Nia"
	"Abby"
	"April"
	"Emelia"
	"Carter"
	"Aylin"
	"Cataleya"
	"Bethany"
	"Marlee"
	"Carly"
	"Kaylani"
	"Emely"
	"Liana"
	"Madelynn"
	"Cadence"
	"Matilda"
	"Sylvia"
	"Myra"
	"Fernanda"
	"Oaklyn"
	"Elianna"
	"Hattie"
	"Dayana"
	"Kendra"
	"Maisie"
	"Malaysia"
	"Kara"
	"Katelyn"
	"Maia"
	"Celine"
	"Cameron"
	"Renata"
	"Jayleen"
	"Charli"
	"Emmalyn"
	"Holly"
	"Azalea"
	"Leona"
	"Alejandra"
	"Bristol"
	"Collins"
	"Imani"
	"Meadow"
	"Alexia"
	"Edith"
	"Kaydence"
	"Leslie"
	"Lilith"
	"Kora"
	"Aisha"
	"Meredith"
	"Danna"
	"Wynter"
	"Emberly"
	"Julieta"
	"Michaela"
	"Alayah"
	"Jemma"
	"Reign"
	"Colette"
	"Kaliyah"
	"Elliott"
	"Johanna"
	"Remy"
	"Sutton"
	"Emmy"
	"Virginia"
	"Briana"
	"Oaklynn"
	"Adelina"
	"Everlee"
	"Megan"
	"Angelica"
	"Justice"
	"Mariam"
	"Khaleesi"
	"Macie"
	"Karsyn"
	"Alanna"
	"Aleah"
	"Mae"
	"Mallory"
	"Esme"
	"Skyla"
	"Madilynn"
	"Charley"
	"Allyson"
	"Hanna"
	"Shiloh"
	"Henley"
	"Macy"
	"Maryam"
	"Ivanna"
	"Ashlynn"
	"Lorelai"
	"Amora"
	"Ashlyn"
	"Sasha"
	"Baylee"
	"Beatrice"
	"Itzel"
	"Priscilla"
	"Marie"
	"Jayda"
	"Liberty"
	"Rory"
	"Alessia"
	"Alaia"
	"Janelle"
	"Kalani"
	"Gloria"
	"Sloan"
	"Dorothy"
	"Greta"
	"Julie"
	"Zahra"
	"Savanna"
	"Annabella"
	"Poppy"
	"Amalia"
	"Zaylee"
	"Cecelia"
	"Coraline"
	"Kimber"
	"Emmie"
	"Anne"
	"Karina"
	"Kassidy"
	"Kynlee"
	"Monroe"
	"Anahi"
	"Jaliyah"
	"Jazmin"
	"Maren"
	"Monica"
	"Siena"
	"Marilyn"
	"Reyna"
	"Kyra"
	"Lilian"
	"Jamie"
	"Melany"
	"Alaya"
	"Ariya"
	"Kelly"
	"Rosie"
	"Adley"
	"Dream"
	"Jaylah"
	"Laurel"
	"Jazmine"
	"Mina"
	"Karla"
	"Bailee"
	"Aubrie"
	"Katalina"
	"Melina"
	"Harlee"
	"Elliot"
	"Hayley"
	"Elaine"
	"Karen"
	"Dallas"
	"Irene"
	"Lylah"
	"Ivory"
	"Chaya"
	"Rosa"
	"Aleena"
	"Braelyn"
	"Nola"
	"Alma"
	"Leyla"
	"Pearl"
	"Addyson"
	"Roselyn"
	"Lacey"
	"Lennox"
	"Reina"
	"Aurelia"
	"Noa"
	"Janiyah"
	"Jessie"
	"Madisyn"
	"Saige"
	"Alia"
	"Tiana"
	"Astrid"
	"Cassandra"
	"Kyleigh"
	"Romina"
	"Stevie"
	"Haylee"
	"Zelda"
	"Lillie"
	"Aileen"
	"Brylee"
	"Eileen"
	"Yara"
	"Ensley"
	"Lauryn"
	"Giuliana"
	"Livia"
	"Anya"
	"Mikaela"
	"Palmer"
	"Lyra"
	"Mara"
	"Marina"
	"Kailey"
	"Liv"
	"Clementine"
	"Kenna"
	"Briar"
	"Emerie"
	"Galilea"
	"Tiffany"
	"Bonnie"
	"Elyse"
	"Cynthia"
	"Frida"
	"Kinslee"
	"Tatiana"
	"Joelle"
	"Armani"
	"Jolie"
	"Nalani"
	"Rayna"
	"Yareli"
	"Meghan"
	"Rebekah"
	"Addilynn"
	"Faye"
	"Zariyah"
	"Lea"
	"Aliza"
	"Julissa"
	"Lilyana"
	"Anika"
	"Kairi"
	"Aniya"
	"Noemi"
	"Angie"
	"Crystal"
	"Bridget"
	"Ari"
	"Davina"
	"Amelie"
	"Amirah"
	"Annika"
	"Elora"
	"Xiomara"
	"Linda"
	"Hana"
	"Laney"
	"Mercy"
	"Hadassah"
	"Madalyn"
	"Louisa"
	"Simone"
	"Kori"
	"Jillian"
	"Alena"
	"Malaya"
	"Miley"
	"Milan"
	"Sariyah"
	"Malani"
	"Clarissa"
	"Nala"
	"Princess"
	"Amani"
	"Analia"
	"Estella"
	"Milana"
	"Aya"
	"Chana"
	"Jayde"
	"Tenley"
	"Zaria"
	"Itzayana"
	"Penny"
	"Ailani"
	"Lara"
	"Aubriella"
	"Clare"
	"Lina"
	"Rhea"
	"Bria"
	"Thalia"
	"Keyla"
	"Haisley"
	"Ryann"
	"Addisyn"
	"Amaia"
	"Chanel"
	"Ellen"
	"Harmoni"
	"Aliana"
	"Tinsley"
	"Landry"
	"Paisleigh"
	"Lexie"
	"Myah"
	"Rylan"
	"Deborah"
	"Emilee"
	"Laylah"
	"Novalee"
	"Ellis"
	"Emmeline"
	"Avalynn"
	"Hadlee"
	"Legacy"
	"Braylee"
	"Elisabeth"
	"Kaylie"
	"Ansley"
	"Dior"
	"Paula"
	"Belen"
	"Corinne"
	"Maleah"
	"Martha"
	"Teresa"
	"Salma"
	"Louise"
	"Averi"
	"Lilianna"
	"Amiya"
	"Milena"
	"Royal"
	"Aubrielle"
	"Calliope"
	"Frankie"
	"Natasha"
	"Kamilah"
	"Meilani"
	"Raina"
	"Amayah"
	"Lailah"
	"Rayne"
	"Zaniyah"
	"Isabela"
	"Nathalie"
	"Miah"
	"Opal"
	"Kenia"
	"Azariah"
	"Hunter"
	"Tori"
	"Andi"
	"Keily"
	"Leanna"
	"Scarlette"
	"Jaelyn"
	"Saoirse"
	"Selene"
	"Dalary"
	"Lindsey"
	"Marianna"
	"Ramona"
	"Estelle"
	"Giovanna"
	"Holland"
	"Nancy"
	"Emmalynn"
	"Mylah"
	"Rosalee"
	"Sariah"
	"Zoie"
	"Blaire"
	"Lyanna"
	"Maxine"
	"Anais"
	"Dana"
	"Judith"
	"Kiera"
	"Jaelynn"
	"Noor"
	"Kai"
	"Adalee"
	"Oaklee"
	"Amaris"
	"Jaycee"
	"Belle"
	"Carolyn"
	"Della"
	"Karter"
	"Sky"
	"Treasure"
	"Vienna"
	"Jewel"
	"Rivka"
	"Rosalyn"
	"Alannah"
	"Ellianna"
	"Sunny"
	"Claudia"
	"Cara"
	"Hailee"
	"Estrella"
	"Harleigh"
	"Zhavia"
	"Alianna"
	"Brittany"
	"Jaylene"
	"Journi"
	"Marissa"
	"Mavis"
	"Iliana"
	"Jurnee"
	"Aislinn"
	"Alyson"
	"Elsa"
	"Kamiyah"
	"Kiana"
	"Lisa"
	"Arlette"
	"Kadence"
	"Kathleen"
	"Halle"
	"Erika"
	"Sylvie"
	"Adele"
	"Erica"
	"Veda"
	"Whitney"
	"Bexley"
	"Emmaline"
	"Guadalupe"
	"August"
	"Brynleigh"
	"Gwen"
	"Promise"
	"Alisson"
	"India"
	"Madalynn"
	"Paloma"
	"Patricia"
	"Samira"
	"Aliya"
	"Casey"
	"Jazlynn"
	"Paulina"
	"Dulce"
	"Kallie"
	"Perla"
	"Adrienne"
	"Alora"
	"Nataly"
	"Ayleen"
	"Christine"
	"Kaiya"
	"Ariadne"
	"Karlee"
	"Barbara"
	"Lillianna"
	"Raquel"
	"Saniyah"
	"Yamileth"
	"Arely"
	"Celia"
	"Heavenly"
	"Kaylin"
	"Marisol"
	"Marleigh"
	"Avalyn"
	"Berkley"
	"Kataleya"
	"Zainab"
	"Dani"
	"Egypt"
	"Joyce"
	"Kenley"
	"Annabel"
	"Kaelyn"
	"Etta"
	"Hadleigh"
	"Joselyn"
	"Luella"
	"Jaylee"
	"Zola"
	"Alisha"
	"Ezra"
	"Queen"
	"Amia"
	"Annalee"
	"Bellamy"
	"Paola"
	"Tinley"
	"Violeta"
	"Jenesis"
	"Arden"
	"Giana"
	"Wendy"
	"Ellison"
	"Florence"
	"Margo"
	"Naya"
	"Robin"
	"Sandra"
	"Scout"
	"Waverly"
	"Janessa"
	"Jayden"
	"Micah"
	"Novah"
	"Zora"
	"Ann"
	"Jana"
	"Taliyah"
	"Vada"
	"Giavanna"
	"Ingrid"
	"Valery"
	"Azaria"
	"Emmarie"
	"Esperanza"
	"Kailyn"
	"Aiyana"
	"Keilani"
	"Austyn"
	"Whitley"
	"Elina"
	"Kimora"
	"Maliah"
}

isdead
{
	"Yes"
	"No"
	"Undead"
	"Immortal"
}

gender
{
	if male == "ON"
	{
		"Male"
	}

	if female == "ON"
	{
		"Female"
	}

	if mtf == "ON"
	{
		"Male (FTM)"
	}

	if ftm == "ON"
	{
		"Female (MTF)"
	}

	if nonbinary == "ON"
	{
		"Non-binary"
	}

	if genfluid == "ON"
	{
		"Gender Fluid"
	}
}

race
{
	racesize = ARRAYSIZE(charrace)
	randrace = RAND(racesize)
	--
	if chardead[charcount] == "Immortal"
	{
		"Vampire"
		"Angel"
		"God"
		"Forest Demon"
		"Demon"
		"Grim Reaper"
	}
	elseif chardead[charcount] == "Undead"
	{
		"Zombie"
		"Skeleton"
		"Strzyga"
		"Ghost"
	}
	
	"Clockman"
	"Earth Nymph"
	"Forest Nymph"
	"Grand Elf"
	"Flint Dwarf"
	"Jade Dwarf"
	"Minotaur"
	"Mountain Dwarf"
	"Night Elf"
	"Obsidian Dwarf"
	"Ogre"
	"Smallfolk"
	"Sylvan Elf"
	"Water Nymph"
	"Oni"
	"Succubus"
	"Angel"
	"Android"
	"Spartan"
	"Cloud Nymph"
	"Mutant"
	"Alien"
	"Human"
	"Orc"
	"Fairy"
	"Dragon"
	"Goblin"
	"Gremlin"
	"Slime"
	"Kitsune"
	"Robot"
	"Clone"
	"Werewolf"

	if racecount >= 1
	{
		"%(charrace[randrace])"
	}
}

//Story generation

firstpart_story
{
	"%(charname[charcount]) is a%(isa) that lives in %(place) and %(whatdoyoudo)"
	"%(charname[charcount]) is a%(isa) that lives in %(place) and %(whatdoyoudo)"
	"%(charname[charcount]) is a%(isa) that lives in %(place) with their %(housmate)"
}

whatdoyoudo
{
	"tries to find %(search)"
	"tries to defeat %(villian)"
	"searches for %(search)"
	"tries to summon a demon"
	"tries to survive the zombie apocalipse"
	"tries to survive a war"
}

nationality
{
	countrysize = ARRAYSIZE(counname)
	randcountry = RAND(countrysize)
	--
	"American"
	"Canadian"
	"Polish"
	"Finnish"
	"Mexican"
	"Cuban"
	"Hawaiian"
	"Scottish"
	"Swedish"
	"English"
	"Spanish"
	"Brazilian"
	"German"
	"Russian"
	"Chainese"
	"Korean"
	"Korean"
	"Japanese"
	"Italian"
	"French"
	"Australian"

	if countrycount >= 1
	{
		"%(counname[randcountry])'ian"
	}
}

search
{
	"a ghost"
	"the murderer"
	"meaning of life"
	"tree of life"
	"Atlantis"
	"well of knowledge"
	"their missing %(housmate)"
}

villian
{
	"dark lord"
	"demon"
	"supervillian"
	"necromancer"
	"angels"
	"demons"
	"monsters"
	"demon king"
}

place
{
	countrysize = ARRAYSIZE(counname)
	randcountry = RAND(countrysize)
	--
	"USA"
	"Canada"
	"Poland"
	"Finnland"
	"Mexico"
	"Cuba"
	"Hawaii"
	"Los Angeles"
	"New York"
	"Texas"
	"Wales"
	"Scottland"
	"Greenland"
	"Iceland"
	"Sweden"
	"England"
	"Spain"
	"Brazil"
	"Germany"
	"Russia"
	"Chaina"
	"South Korea"
	"North Korea"
	"Japan"
	"Kazahstan"
	"Greece"
	"Italy"
	"France"
	"Australia"
	"Monako"
	"the forest"
	"the mountains"
	"beside a lake"
	"beside the ocean"
	"beside a river"

	if countrycount >= 1
	{
		"%(counname[randcountry])'ian"
	}
}

housmate
{
	"younger brother"
	"older brother"
	"younger sister"
	"older sister"
	"twin brother"
	"twin sister"
	"wife"
	"husband"
	"spause"
	"roommate"
	"mother"
	"father"
	"best friend"
	"best friends"
	"friend"
	"friends"
	"enemies"
	"enemy"
	"cat"
	"cats"
	"dog"
	"dogs"
	"rabbit"
	"rabbits"
}

yanold
{
	if charage[charcount] > 50
	{
		"n old"
	}
	else
	{
		" young"
	}
}

isa
{
	"%(yanold) %(charprof[charcount])"
	"%(yanold) %(charrace[charcount])"
}

profes
{
	"%(job)"
	"%(charclass)"
}

job
{
	"Dentist"
	"Teacher"
	"Artist"
	"Writer"
	"Registered Nurse"
	"Pharmacist"
	"Computer Systems Analyst"
	"Physician"
	"Database Administrator"
	"Software Developer"
	"Physical Therapist"
	"Web Developer"
	"Dental Hygienist"
	"Occupational Therapist"
	"Veterinarian"
	"Computer Programmer"
	"School Psychologist"
	"Physical Therapist Assistant"
	"Interpreter & Translator"
	"Mechanical Engineer"
	"Veterinary Technologist & Technician"
	"Epidemiologist"
	"IT Manager"
	"Market Research Analyst"
	"Diagnostic Medical Sonographer"
	"Computer Systems Administrator"
	"Respiratory Therapist"
	"Medical Secretary"
	"Civil Engineer"
	"Substance Abuse Counselor"
	"Speech-Language Pathologist"
	"Landscaper & Groundskeeper"
	"Radiologic Technologist"
	"Cost Estimator"
	"Financial Advisor"
	"Marriage & Family Therapist"
	"Medical Assistant"
	"Lawyer"
	"Accountant"
	"Compliance Officer"
	"High School Teacher"
	"Clinical Laboratory Technician"
	"Maintenance & Repair Worker"
	"Bookkeeping Accounting & Audit Clerk"
	"Financial Manager"
	"Recreation & Fitness Worker"
	"Insurance Agent"
	"Elementary School Teacher"
	"Dental Assistant"
	"Management Analyst"
	"Home Health Aide"
	"Pharmacy Technician"
	"Construction Manager"
	"Public Relations Specialist"
	"Middle School Teacher"
	"Massage Therapist"
	"Paramedic"
	"Preschool Teacher"
	"Hairdresser"
	"Marketing Manager"
	"Patrol Officer"
	"School Counselor"
	"Executive Assistant"
	"Financial Analyst"
	"Personal Care Aide"
	"Clinical Social Worker"
	"Business Operations Manager"
	"Loan Officer"
	"Meeting Convention & Event Planner"
	"Mental Health Counselor"
	"Nursing Aide"
	"Sales Representative"
	"Architect"
	"Sales Manager"
	"HR Specialist"
	"Plumber"
	"Real Estate Agent"
	"Glazier"
	"Art Director"
	"Customer Service Representative"
	"Logistician"
	"Auto Mechanic"
	"Bus Driver"
	"Restaurant Cook"
	"Child & Family Social Worker"
	"Administrative Assistant"
	"Receptionist"
	"Paralegal"
	"Cement Mason & Concrete Finisher"
	"Painter"
	"Sports Coach"
	"Teacher Assistant"
	"Brickmason & Blockmason"
	"Cashier"
	"Janitor"
	"Electrician"
	"Delivery Truck Driver"
	"Maid & Housekeeper"
	"Carpenter"
	"Security Guard"
	"Construction Worker"
	"Fabricator"
	"Telemarketer"
}

charclass //Wizard and etc.
{
	"Priest"
	"Wizard"
	"Cleric"
	"Warrior"
	"Witch"
	"Palladin"
	"Rogue"
	"Knight"
	"Monk"
	"Fighter"
	"Thief"
	"Assassin"
	"Mage"
	"Summoner"
	"Necromancr"
	"Druid"
	"Barbarian"
	"Bard"
	"Berzerker"
	"Healer"
	"Soldier"
	"Cavalier" 
	"Guardian"
	"Sword Master"
	"Warden"
	"Mercenary"
	"Swashbuckler"
	"Dark Knight"
	"Dragon Knight"
	"Monster Knight"
	"Samurai"
	"Swordmaster"
	"Warlord"
	"Fallen Knight"
	"Warlock"
	"Elementalist"
	"Shaman"
	"Thief"
	"Gambler"
	"Ninja"
	"Shadow"
	"Spy"
	"Burglar"
	"Priest"
	"Battle Priest"
	"Witch Doctor"
	"Templar"
	"Caster"
	"Sniper"
	"Melee" 
	"Alchemist"
	"Engineer"
	"Gunslinger"
	"Psychic"
}

shehetheychar
{
	if "Male" _in_ chargender[charcount]
	{
		"he"
	}
	elseif "Female" _in_ chargender[charcount]
	{
		"she"
	}
	else
	{
		"they"
	}
}

herhistheir
{
	if "Male" _in_ chargender[charcount]
	{
		"his"
	}
	elseif "Female" _in_ chargender[charcount]
	{
		"her"
	}
	else
	{
		"their"
	}
	
}

havehaschar
{
	if "Male" _in_ chargender[charcount] || "Female" _in_ chargender[charcount]
	{
		"has"
	}
	else
	{
		"have"
	}
}

isare
{
	if "Male" _in_ chargender[charcount] || "Female" _in_ chargender[charcount]
	{
		"is"
	}
	else
	{
		"are"
	}
}

schar
{	
	if "Male" _in_ chargender[charcount] || "Female" _in_ chargender[charcount]
	{
		"s"
	}
	else
	{
		""
	}
}

dontdoesnt
{
	if "Male" _in_ chargender[charcount] || "Female" _in_ chargender[charcount]
	{
		"doesn't"
	}
	else
	{
		"don't"
	}
}


//eyes, hair
looks
{
	"%(charname[charcount]) is a %(isa), %(shehetheychar) usually wear%(schar) %(color), %(color) and %(color), herhistheir %(darknbright) %(color) hair is %(hairlenght) and %(hairtype).\n%(shehetheychar) usually wear%(schar) %(clothes). %(shehetheychar) %(accesorynstuff)"
	"%(charname[charcount]) is %(height), %(shehetheychar) %(havehaschar) %(darknbright) %(color) eyes and %(hairlenght) %(hairtype) hair, %(shehetheychar) usually wear%(schar) %(clothes). %(shehetheychar) %(accesorynstuff)"
	"%(charname[charcount]) is %(height), %(shehetheychar) %(havehaschar) %(darknbright) %(color) eyes and %(hairlenght) %(hairtype) hair, %(shehetheychar) usually wear%(schar) %(clothes)."
	"%(charname[charcount]) is a %(isa), %(shehetheychar) usually wear%(schar) %(color), %(color) and %(color), herhistheir %(darknbright) %(color) hair is %(hairlenght) and %(hairtype).\n%(shehetheychar) usually wear%(schar) %(clothes)"
	--
	"they are %(TOLOWER(chartrait)) and %(TOLOWER(chartrait))."
}

chartrait : nonoverlap
{
    "Demanding"
    "Thoughtful"
    "Keen"
    "Disagreeable"
    "Simple"
    "Fancy"
    "Plain"
    "Excited"
    "Studious"
    "Inventive"
    "Creative"
    "Thrilling"
    "Intelligent"
    "Proud"
   	"Fun-loving"
    "Daring"
    "Bright"
    "Serious"
    "Funny"
    "Humorous"
    "Lazy"
    "a Dreamer"
    "Helpful"
    "Simple-minded"
    "Friendly"
    "Adventurous"
    "Timid"
    "Shy"
    "Pitiful"
    "Cooperative"
    "Lovable"
    "Ambitious"
    "Quiet"
    "Curious"
    "Reserved"
    "Pleasing"
    "Bossy"
    "Witty"
    "Energetic"
    "Cheerful"
    "Smart"
    "Impulsive"
    "Honest"
    "Brave"
    "Compassionate"
    "Leader"
    "Courageous"
    "Unselfish"
    "Loyal"
    "Hard-working"
    "Independent"
    "Selfish"
    "Responsible"
    "Considerate"
    "Self-confident"
    "Humble"
    "Poor"
    "Rich"
    "Strong"
    "Handsome"
    "Pretty"
    "Ugly"
    "Messy"
    "Gentle"
    "Wild"
    "Joyful"
    "Busy"
    "Patriotic"
    "Neat"
    "Popular"
    "Successful"
    "Proper"
    "Tireless"
    "Plain"
    "Imaginative"
    "Mischievous"

}

randracedesc
{
	"%(racename[racecount]) are a %(commonrare) race found in %(placerace). They are %(carnomniharbi)."
	"%(racename[racecount]) are %(carnomniharbi) that can be %(commonraretwo) found in %(placerace)."
	--
	" They are usually %(color)"
	--
	""
	" and %(color)."
	" %(color) and %(color)."
	--
	" They have %(RAND(4)+2) arms "
	" They don't have arms "
	--
	"and %(RAND(4)+2) legs. "
	"and they don't have legs. "
	--
	"%(racename[racecount])'ans are covered in %(furscals)."
	"%(racename[racecount])'ans are covered in %(furscals) and %(furscals)."
	"%(racename[racecount])'ans are partialy covered in %(furscals) and %(furscals)."
	"%(racename[racecount])'ans are partialy covered in %(furscals)."
	"%(racename[racecount])'ans don't have any feathers, scales, fur or hair."
	--
	" They have beaks."
	" "
}

furscals : nonoverlap
{
	"fur"
	"scales"
	"feathers"
	"hair"
}

commonraretwo
{
	"uniquely"
	"commonly"
	"rarerly"
}

carnomniharbi
{
	"omnivores"
	"carnivores"
	"harbivores"
	"cannibals"
	"a race that consumes %(foodfortherace)"
}

foodfortherace
{
	"souls"
	"blood"
	"stones"
	"minerals"
	"energy"
}

placerace
{
	"the moountains"
	"lakes"
	"the sea"
	"the forests"
	"the caves"
	"the underground"
	"flying islands"
	"the jungle"
	"the dessert"
	"cold places"
	"warm places"
	"the rain forests"
}

commonrare
{
	"common"
	"rare"
	"unique"
}

height 
{
	"short"
	"tall"
	"average height"
}

darknbright
{
	"dark"
	"bright"
	"dull"
}

accesorynstuff
{
	"%(havehaschar) a %(bigorsmol)scar on their %(bodypart)"
	"wear%(schar) one earring on their %(side) ear"
	"%(havehaschar) brow piercing"
	"%(havehaschar) lip piercing"
	"%(havehaschar) tangue piercing"
	"%(havehaschar) a necklace"
	"%(dontdoesnt) wear any accesories"
}

bigorsmol
{
	"big "
	"small "
	""
	
}

side
{
	"left"
	"right"
}

bodypart
{
	"%(side) leg"
	"%(side) arm"
	"face"
	"brow"
	"lip"
	"%(side) hand"
	"%(side) feet"
	"neck"
	"%(side) ear"
}

clothes
{
	if "Female" _in_ chargender[charcount]
	{
		"dresses"
	}
	elseif "Male" _in_ chargender[charcount]
	{
		"suits"
	}

	"%(clothestop) and %(clothesbottoms)"
}

clothesbottoms
{
	if chargender[charcount] == "Female"
	{
		"long skirts"
		"short skirts"
	}
	
	"jeans"
	"sweatpants"
	"shorts"
}

hairtype
{
	"curly"
	"wavy"
	"stright"
}

clothestop
{
	"hoodies"
	"jackets"
	"sweatshirts"
	"T-shirts"
	"tanktops"
}

hairlenght
{
	"long"
	"short"
	"medium"
	"very short"
	"very long"
	"half shaved"
}

color : nonoverlap
{
	"black"
	"grey"
	"white"
	"red"
	"brown"
	"orange"
	"yellow"
	"green"
	"cyan"
	"blue"
	"violet"
	"pink"
	"magenta"
}

ch
{
	"\![set,balloontimeout,0]"
}


//\![raise,OnMapGenVar]
//%(howlongmap)
OnMapGenVar
{
	signs = ("\_b[water.png,inline,--option=use_self_alpha]","\_b[grass.png,inline,--option=use_self_alpha]","\_b[tree.png,inline,--option=use_self_alpha]","\_b[home.png,inline,--option=use_self_alpha]")
	river = (RAND(10) + 2,RAND(5) + 5,RAND(30)) //0: width | 1: x | 2: y | 3: height
	village = (RAND(30) + 5, RAND(30) + 5,RAND(20),RAND(30) + 5) //0: width | 1: x | 2: y | 3: height
	forest = (RAND(30) + 5,RAND(20) + 5,RAND(20) + 5,RAND(50)) //0: width | 1: x | 2: y | 3: height
	/*river[0] = RAND(10) + 2
	river[1] = RAND(30)
	river[2] = RAND(5) + 5
	forest[0] = RAND(30) + 5
	forest[1] = RAND(30) + 3
	forest[2] = RAND(20) + 5
	forest[3] = RAND(50)
	village[0] = RAND(30) + 5
	village[1] = RAND(30) + 5
	village[2] = RAND(20)
	village[3] = RAND(30)*/
	foresd = 0
	riverd = 0
	mapgtwo = "\1\b6\_q"
	--
	for _i=0;_i<1010;_i++
	{
		mapgtwonew[_i] = ""
	}
	--
	OnMapgentwo
}

OnMapgentwo
{
	for _i=0,_z=0,_s=0,_x;_i<1015;_i++,_z++
	{
		
		if _z == 35
		{
			mapgtwo += "\n"
			_z=0
			_s+=1
		}
		--
		if _z == river[1] && riverd != 1 && _s == river[2]
		{
			for _x=0;_x<river[0];_x++,_i++
			{
				mapgtwo += signs[0]
				_z++
				--
				if _z == 35
				{
					_x = river[0]
					mapgtwo += "\n"
					_z=0
					_s+=1
				}
			}
			--
			river[1] += riveroffset
			river[2] += 1
			--
			if river[1] == 36
			{
				river[1] = 0
				riverd = 1
			}
			--
			riveroffset = RAND(5)
			river[0] = RAND(10) + 2
		}
		elseif _z == forest[1] && foresd != 1 && _s == forest[2]
		{
			for _x=0;_x<forest[0];_x++,_z++,_i++
			{
				mapgtwo += signs[2]
				--
				if _z == 35
				{
					_x = forest[0]
					mapgtwo += "\n"
					_z=0
					_s+=1
				}
			}
			--
			if RAND(2) == 1
			{
				forest[1] += forestoffset
			}
			else
			{
				forest[1] -= forestoffset
			}
			--
			forest[2] += 1
			--
			if _s == forest[3]
			{
				foresx = 0
				foresd = 1
			}
			--
			forestoffset = RAND(5)
			forest[0] = RAND(30) + 2
		}
		elseif _z == village[1] && villaged != 1 && _s == village[2]
		{
			for _x=0;_x<village[0];_x++,_z++,_i++
			{
				mapgtwo += signs[3]
				--
				if _z == 35
				{
					_x = village[0]
					mapgtwo += "\n"
					_z=0
					_s+=1
				}
			}
			--
			if RAND(2) == 1
			{ 
				villageoffset += RAND(5)
				village[0] += villageoffset
				village[1] -=  RAND(5)
			}
			else
			{
				villageoffset -= RAND(5)
				village[0] -= villageoffset
				village[1] +=  RAND(5)
			}
			--
			village[2] += 1
			--
			if _s == village[3]
			{
				villaged = 0
				villaged = 1
			}
			--
			//villageoffset = RAND(5)
			//if _s == (village[3]/2)
		//	{
				//village[0] = village[0] - RAND(5)
				//village[1] +=  RAND(5)
			//}
			//else
			//{
			//	village[0] = village[0] + RAND(5)
				//village[1] -= RAND(5)
			//}
		}
		else
		{
			mapgtwo += signs[1]
		}

	}
	--
	mapgtwo += "\0\![*]\q[I'm Done,Cancel] or \![*]\q[Generate Again,OnMapGenVar]"
	--
	mapgtwo
}

/*The Krum Fir is a native to the Krüor region. It grows up to 40 meters and can live up to 150 years. The Krum Fir has thin, scaly bark, a narrow trunk with a cylindrical shape, ending in a high treetop.
It has thin needles, mostly dark green in color. The cones open up at spring.
It can withstand freezing winters and relatively hot summers.
The Krum Fir is used in some parks and gardens as decoration – as the tree can thrive in a variety of environments, its seeds can be planted even in climates unnatural for it, like cities and near-sea areas.
*/
randfloradesc
{
	if planttypegen == "Random"
	{
		randplanttype = RAND(2)
	}
	elseif planttypegen == "Tree"
	{
		randplanttype = 1
	}
	elseif planttypegen == "Bush"
	{
		randplanttype = 2
	}
	elseif planttypegen == "Flower"
	{
		randplanttype = 0
	}
	--
	"%(floraaname[floracount]) is a %(heighplant) %(planttype), "
	-- 
	if randplanttype == 0
	{
		"it is %(color). "
		"it can be %(color) and %(color). "
		"it can be %(color) or %(color) in a %(flwrcolorpatrn) pattern. "
		"it can be %(color), %(color) or %(color) in a %(flwrcolorpatrn) pattern. "
		"it can be %(color), %(color), %(color) or %(color) in a %(flwrcolorpatrn) pattern. "
		"it can be %(color) and %(color) or %(color) and %(color) in a %(flwrcolorpatrn) pattern. "
		--
		"It has %(heighplant) petals and is %(shapeflwr) with a %(pettalarr) petal arrangement. "
		--
		"Those flower grow %(flowgrowth)."
	}
	elseif randplanttype == 1
	{
		"it has %(color) %(leaftype) "
		--
		"and it's bark %(bark)."
		--
		""
		"it grows %(fruitsize)"
		"it grows %(flowersizze)"
	}
	elseif randplanttype == 2
	{
		"it has %(color) %(leafshape) leaves with a %(leafedge) edge."
		--
		""
		"it grows %(fruitsize)"
		"it grows %(flowersizze)"
		--
		"."
	}

}

flowersizze
{
	"big"
	"small"
	"medium sized"
	--
	", %(color)"
	", %(color) and %(color)"
	--
	" flowers. "
	--
	"Those flowers are %(poizon)"
	""
	--
	"."
}

poizon
{
	"poisonus"
	"edible"
}

fruitsize
{
	"big"
	"small"
	"medium sized"
	--
	", %(color)"
	", %(color) and %(color)"
	--
	" fruits. Those fruits are "
	--
	"poisonus"
	"edible"
	"unedible"
	--
	"."
}

bark
{
	"is smooth"
	"has %(deepthgroov)grooves"
	"is scaly"
}

deepthgroov
{
	"deep "
	"shallow "
	""
}

flwrcolorpatrn
{
	"self-coloured"
	"bicoloured"
	"picotee"
	"striped"
}

flowgrowth
{
	"in solitary"
	"in a cluster"
	"in an umbel"
	"as flowerhead"
	"as recame"
	"as cyme"
	"as spike"
	"as corymb"
	"as pinacle"
}

pettalarr
{
	"single"
	"recurved"
	"reflexed"
	"semi-double"
	"double"
	"fully souble"
}

shapeflwr
{
	"cross"
	"star"
	"saucer"
	"cup"
	"bell "
	"tubular"
	"funnel"
	"pitcher"
	"trumpet"
	"salverform"
	"rosette"
	"pompom"
	"pea"
	"slipper"
	--
	"-shaped"
}

heighplant
{
	if randplanttype == 2
	{
		"high"
	}

	"small"
	"big"
	"large"
	"medium sized"
}

planttype
{
	switch randplanttype
	{
		"flower"
		"tree"
		"bush"
	}
}

leaftype
{
	"needles"
	"scales"
	"%(leafshape) leaves with a %(leafedge) edge"
}

leafshape
{
	"oval"
	"lanceolate"
	"obovate"
	"elliptical"
	"spatulate"
	"cordate"
	"oblanceolate"
	"obcordate"
	"oblong"
	"linear"
	"peltete"
	"cuneate"
	"reniform"
	"hastete"
}

leafedge
{
	"smooth"
	"saw-tooth"
	"loges"
}

florarandgrowth
{
	"%(floraaname[floracount]) grows in a %(climateplantz) climate."
	--
	if randplanttype == 0
	{
		"It grows %(wherdoesitgrow)"
		""
	}
}

climateplantz
{
	{
		"hot"
		"cold"
		"rainy"
		--
		{
			"and"
			--
			"dry"
			"moist"
		}
		""
	}

	"mild"
}

wherdoesitgrow
{
	{
	"on "
	--
	"animals corpses"
	"tree trunks"
	"living organisms"
	}

	{
	"in "
	--
	"animals corpses"
	"tree trunks"
	"living organisms"
	"lakes"
	"rivers"
	"the sea"
	"the ocean"
	}
}

floraprops
{
	{
		"When eaten "
		--
		"allows breathing underwater"
		"puts in a coma"
		"heals all wounds"
		"makes you blind"
	}

	{
		"when burned, the smoke "
		--
		"makes you high"
		"is acidic"
		"shows spirits"
		"lures in fae"
		""
	}
}

randfaunadesc
{
	"%(faunaname[faunacount]) are %(heighplant) and "
	--
	"are covered in %(colorfull) %(furscals)."
	"are covered in %(colorfull) %(furscals) and %(colorfull) %(furscals)."
	"are partialy covered in %(colorfull) %(furscals) and %(colorfull) %(furscals)."
	"partialy covered in %(colorfull) %(furscals)."
	"don't have any feathers, scales, fur or hair."
	--
	" They live in %(animalliving) and are %(carnomniharbi)."
}

animalliving
{
	"lakes"
	"forests"
	"the mountains"
	"underground caves"
	"underground rivers"
	"caves"
	"rivers"
	"lakes"
	"the sea"
	"the ocean"
	"plains"
	"villages"
	"cities"
	"jungles"
	"canions"
}

colorfull
{
	"%(color), %(color) and %(color)"
	"%(color)"
	"%(color) and %(color)"
}

randanimalbehavior
{
	"%(faunaname[faunacount]) are %(agressiveornice) towards other spiecies and live in %(grouping)."
}

agressiveornice
{
	"agressive"
	"passive"
	"neutral"
	"friendly"
}

grouping
{
	"groups"
	"solitary"
	"pairs"
}


randitemdesc
{
	"%(itemsaname[itemcount]) is a %(weapons) and "
	"%(itemsaname[itemcount]) is a %(casualitems) and "
	--
	"it is %(color)."
	"it is %(color) and %(color)."
	"it is %(color), %(color) and %(color)."
}

weapons
{
	{
		"hook"
		"butterfly"
		"hunting"
		"arming"
		"basket-hilted"
		"side"
		"boar"
		"flame-bladed"
		"great"
		"heading"
		"small"
		"arming"
		"sickle"
		--
		" sword"
	}
	
	{
		"bronze age"
		"knightly"
		"ear"
		"ballock"
		"rondel"
		"hunting"
		"trench"
		"push "
		--
		" dagger"
	}
	"shield"
	"bow"
	"spear"
	"brass knuckles"
	"gauntlet"
	"hammer"
	{
		"combat"
		"butterfly"
		"ballistic"
		"throwing"
		"trench"
		"genoese"
		--
		"knife"
	}
	"axe"
	"katana"
	"fan"
	"bayonet"
	"karambit"
	"war scythe"
	"scythe"
	{
		"hira"
		"bo"
		--
		" shuriken"
	}
	"kunai"
	"harpoon"
	{
		"long"
		"recurved "
		"short "
		"reflex "
		"cross"
		--
		"bow"
	}
	"blowgun"
	"whip"
	"chain"
	"nunchaku"
	"staff"
}

casualitems
{
	"rock"
	"guitar"
	"flute"
	"cymbal"
	"tambourine"
	"piano"
	"cup"
	"box"
	"chest"
	"bottle"
	"deck of cards"
	"shirt"
	"cloak"
	"necklace"
	"earrings"
	"crown"
	"staff"
	"cloth"
	"plate"
	"bowl"
	"ring"
	"bracelet"
	"bag"
	"sack"
	"pencil"
	"fountain pen"
	"notebook"
	"scroll"
	"book"
	"lamp"
	"table"
	"broom"
	"sculpture"
	"mirror"
}

randitemability
{
	"A demon lives inside it"
	{
		"Faery"
		"Wind"
		"Fire"
		"Water"
		"Earth"
		"Plant"
		"Shadow"
		"Light"
		"Mind"
		--
		" Magic"
	}

	{
		"Wind"
		"Fire"
		"Water"
		"Earth"
		"Plant"
		"Shadow"
		"Light"
		"Mind"
		"Time"
		"Ice"
		--
		" control"
	}
	"Stealing souls"
	"Teleportation"
	"Divination"
	"Mind Reading"
}