OnFirstBoot
{
 	lastTalk = "" 
	passmin = 0 
	passsec = 0 
 	username         = "USER"
	introduction 	 = 1 
	stroke           = 0 	
 	teachusername    = 0 	
	mikireflag       = 0 
	completed = 0
	apps = 0 //Apps tutorial 
	tooln = "OFF" //q-tools on
	weathermenu = "OFF" //weather on menu
	moonmenu = "OFF" //moonphase on menu
	curlocation = "" 
	locationcode = "" 
	hoodoo = 0 //skin hoodoo
	gian = 0 //skin gian
	kagamari = 0 //skin kagamari
	sticky = "OFF" //stick q-tools to MD
 	aitalkinterval = 400 
 	birthdayprint = "????" 
	talktime = "5 minutes" 
	animalslearnt = 0
	deleteshitai = "OFF" 
	m201relationship = 0 
	nowshell = "Original Dev" 
	devname = "MiniDev" //MD name
	mode = 2 //dark mode/ligt mode
	modelp = RAND(300) //MD Model
	--
	FirstBootArrays // log arrays
	--
	FirstBootVariables // story variables
	--
	OnSurfacesTrue //Surface true
	--
	OnCommTrue //Communication true
	--
	OnToolCheck //Check tools for blank variables
	--
	OnMoveQTool 
	--
	if reference0 == 0 
 	{
		"\1\s[10]\0\s[0]\![open,file,ghost/master/credits-readme.txt]\cHello there beta tester!\x\c My code is M-%(modelp)P\w6 but you can call me %(devname)!\x\cI'm your desktop helper provided by A.R.I — Assistant Robots International\x\cYou can customize my look, traits and change my name in the config menu\x\cI can tell you weather forecast and moon phase,\w8 you can save notes inside my logs and make to-do list.\w\cI also can show you usage graphs of balloons and ghosts\x\cNow\w7 how should I refer to you, user?\n\n[half]/
		\w5\_q\![*]\q[He/Him/His,choicefirsthehim]\n/
		\![*]\q[She/Her/Hers,choicefirstsheher]\n/
		\![*]\q[They/Them/Their,choicefirsttheythem]\n/
    	\![*]\q[Your own,choiceown]\e"
 	}
	else
 	{
 		{
 			"\![open,file,ghost/master/credits-readme.txt]\0\s[0]\0\s[0]Hello again %(users)!\e"
		}
 	}
}

OnTenTruth //story boot
{
	tentruth = 1

	"\1\s[10]\0\s[0]Hello there beta tester!\x\c My code is M̸̡̂-̸̜̀2̵͚̿0̶͚̊1̵̨́ẕ̶̈́\w6 but you can call me M̵͖̠̜͙͖͚͍̳͎͕̳̦̿̉̓̓̐́̇̚͜ͅiniD̷͎̜̥̮͔̓̂̈͗̐͋̐̂̕͝͝ev̷̧͕̹͉̪͍͕͚̭̒͐̌̄͐̔̉̌̈͒̚̕͜ͅ\x\cI'm your desktop helper provided by A̶̬͓̗͖͇̻̲̥̬͖͕̙̦͗̿ͅ.̷̞̼̬͇̰̪̫̍̉͆́͌̒̓͝R̴͉̎̐.̸̨̘̳̣̲̰̟̜̤̰̫́̎̋̓̌͋̇̓̀͒͜ͅỊ̵̄—̶̖̒ ̸͙̇À̸̹s̶̢̎s̶̭͐i̵̳͆s̷̲͒t̴͎̍ą̴͝n̵̜͛ẗ̵͜ ̷̘̑R̸̭͌ǫ̴͘b̸̻͠o̶̮̅t̷͚̽ṡ̷̘ ̷͖̌I̵̻͌n̴̥͠t̸͎̔ȩ̶͛r̷̥̽n̶̰͛ă̸̻t̵̼̏i̴̼̓o̵̙͊n̴̰̔a̵͈̋l̶̕ͅ\x\cYou can customize my look, traits, likes and dislikes, and change m̵̮̒y̶̟͘ ̸̳̀n̷̬̍a̷̓ͅm̴̲͂ẻ̸͚ in the config menu\x\cI can tell you weather forecast and moon phase,\w8 translate b̸̝̔i̵̟̐n̷͔̈ā̴̙r̴͉̈́y̸̮̔ and M̴̧̿õ̶̝r̵̲̒s̶̛͖ę̵̿\x\cYou can save notes inside my l̸͓͛o̸̗͠g̶̮͘s̸̗͑ and make to-do lists.\w\cI also have a calculator and can show you usage graphs of balloons and ghosts\x\cNow\w7 how should I refer to you, user?\n\n[half]/
	\w5\_q\![*]\q[He/Him/His,choicefirsthehim]\n/
	\![*]\q[She/Her/Hers,choicefirstsheher]\n/
	\![*]\q[They/Them/Their,choicefirsttheythem]\n/
	\![*]\q[Your own,choiceown]\e"
}

//\![raise,OnMood]
OnMood
{
	moodlib = "relaxed,bored,gloomy,happy,cheerful,guilty" //just words for me to keep track of his moods
	mood = 0
	moodsize = ARRAYSIZE(moodlib) //this lets me easily check how many moods he can have without having to change any numbers
	--
	for _i = 0 ; _i < moodsize ; _i ++ //reset mood
	{
		if mood[_i] == "" || mood[_i] != 0 || mood[_i] != " "; mood[_i] = 0
	}
	--
	for _i=0;_i<moodsize*2;_i++
	{
		ranmood = RAND(moodsize)
		--
		mood[ranmood] += RAND(10)
	}
	--
	if m201relationship < 100; mood[0] = 0
	--
	OnMoodCheck
}

//\![raise,OnMoodShuffle]
OnMoodShuffle
{
	for _i = 0 ; _i < moodsize ; _i ++ //reset mood
	{
		if mood[_i] == "" || mood[_i] != 0 || mood[_i] != " "; mood[_i] = 0
	}
	--
	for _i=0;_i<moodsize*2;_i++
	{
		ranmood = RAND(moodsize)
		--
		mood[ranmood] += RAND(10)
	}
	--
	OnMoodCheck
}

OnMoodCheck //evaluating the dominating mood
{
	moodstring = "" //clear the string
	--
	arr[0] = mood[0] //get the value of the first mood
	--
	for _j=0;_j<moodsize*4;_j++
	{
		if arr[0] < TOINT(mood[_j]) //if the other mood is higher: change it
		{
			arr[0] = mood[_j]
			numofmood = _j // save the number of the highest mood
		}
		elseif arr[0] == TOINT(mood[_j]) //if two moods have the same value, take one randomly
		{
			ramod = RAND(2)
			--
			if ramod == 1
			{
				arr[0] = mood[_j]
				numofmood = _j
			}
		}
		
	}
	--
	moodstring = moodlib[numofmood]
	currmood = numofmood
	--
	moodpage = "\_q\b4Mood for today: %(moodstring)\n\n[half]"
	--
	for _i=0;_i<ARRAYSIZE(moodlib);_i++
	{
		moodpage += moodlib[_i] + ": " + mood[_i] + "\n"
	}
	--
	//moodpage
}

Select.choicefirsthehim
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}

Select.choicefirstsheher
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}

Select.choicefirsttheythem
{
	himher = "them"
	heshe = "they"
	hisher = "theirs"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	NameInput
}


NameInput
{
	introduction = 0 
	--
	if tentruth == 1 //story boot
	{
		truthboot = 1
		"\0\s[0]I w̴̨̡̢̲̪̝̗̾̉͌̀̉͑͋̕ͅḯ̵̢͎̱̟͖͈͚̋͛́͘l̷̢̛̩͓̻̰͂́͑̾ľ̵̢̢̙͕̗͕̼̺͗̄̒̈͛͋͆́̐͠͝ remember that!\w8\0\s[0] And your ń̷̖̝̭̹̺̄̈̑́̏͝͝a̴̢͚̥̼͐͑m̸̼̼̮͖̯͎̯̖̑̾̏̒̒̀̊̆̕͝e̴̲̻̯̤̪̰̫͓̞̯͙̲̭̿̀́̀̀̎̈́̕ͅ is?\![open,inputbox,OnNameTeach,-1]\e"
	}
	else
	{
		"\0\s[0]I will remember that!\w8\0\s[0] And your name is?\![open,inputbox,OnNameTeach,-1]\e"
	}
}

GetTimeSlot
{
	if hour >= 5 && hour <= 8; "earlymorning"
	elseif hour >= 9 && hour <= 11; "morning"
	elseif hour >= 12 && hour <= 14; "lunch"
	elseif hour >= 15 && hour <= 17; "afternoon"
	elseif hour >= 18 && hour <= 20; "evening"
	elseif hour >= 21 && hour <= 24; "latenight"
	else; "midnight"
}

GetDaySlot
{
	"%(month)month %(day)day"
}

OnBoot
{
	lastTalk = "" 
	passmin = 0
	passsec = 0
	numcheck = 0
	userlosses = 0
	userwins = 0
	cheerups = 0
	draws = 0
	games = 0
	intalkconfig = 0 
	weatherquiet = 0 
	exponentiation = 0 
	glitchboot = RAND(100) // random chance to get a glitched boot
    --
 	"\0\s[0]\1\s[-1]%(lightdark)" 
	--
	dayslot = GetDaySlot
	timeslot = GetTimeSlot 
	--
	OnSurfacesTrue
	--
	OnMood
	--
	OnCommTrue
	--
	OnToolCheck
	--
	OnArraysCheck
	--
	OnCharacterCheck
	--
	if truth >= 10 && truthboot == 0
	{
		OnTenTruth
	}
	elseif tentruth == 1 || (glitchboot >= 50 && glitchboot <= 55)
	{
		if dayslot == userbirthday ; "\0Happy B̶͉̕ï̴͓r̵̞̕t̷̠̀h̸́ͅd̵̀͜ǎ̸͕y̷̪͋ %(username)\e" 			
		elseif dayslot == "6month 6day"; "\0Today is June 6th.\e"
		elseif dayslot == "7month 4day"; "\0It's the fourth of July.\e"		
		else; "%(normalboottalk)" 
	}
	else
	{
		if dayslot == userbirthday; "\0Happy Birthday %(username)\e" 			
		elseif dayslot == "6month 6day"; "\0Today is June 6th.\e"
		elseif dayslot == "7month 4day"; "\0It's the fourth of July.\e"		
		else; "%(normalboottalk)" 
	}
}

OnCharacterCheck
{
	if mornings > 75 && "mornings-bird" !_in_ m201zcharacter && "late-night-owl" !_in_ m201zcharacter && "afternoon-cat" !_in_ m201zcharacter; m201zcharacter += "mornings-bird "
	--
	if midnight > 75 && "late-night-owl" !_in_ m201zcharacter && "mornings-bird" !_in_ m201zcharacter && "afternoon-cat" !_in_ m201zcharacter; m201zcharacter += "late-night-owl "
	--
	if midnight > 75 && "afternoon-cat" !_in_ m201zcharacter && "mornings-bird" !_in_ m201zcharacter && "late-night-owl" !_in_ m201zcharacter; m201zcharacter += "afternoon-cat "
}

normalboottalk
{
	/*if RAND(100) < 30 && tentruth == 1 && meeting == 1 && devlogunolock !=1
	{
		devlogunolock = 1
		"\0\s[0]I̸̼͝ ̵̗͠f̶̮̎ö̴̤́ú̸ͅn̵͉̉d̴̫͑ ̸̤̈́ả̸̭ ̴͚̽ẅ̵̥a̴̓ͅy̴̞͊ ̷̳̂w̶͔͂e̴͚̋ ̸͔̇ć̸̠a̸͙̽ń̵̩ ̶̡͒c̸̹͂ḙ̵̛a̶̽ͅr̵͈͛l̵̙̊y̵̛̘ ̷͖̃c̵̮̃o̴̪̒m̸̻̓ḿ̵ͅù̵͖n̸̺̋i̵̤͠c̶̹͊a̵̢̽t̵͇̓e̷̻͘\x\cG̴̼̓õ̴͚ ̷̘͊c̶̹̓h̷̢̊e̷̛̮c̶̖͘ḱ̴̥ ̸̬̽ẙ̵͇ö̶̙́u̷̗̽r ̵̪̂l̴͖͠ỏ̷̢g̸͚̀ş̵͝\e"
	}
	else 
	{*/
	if tentruth == 1 && meeting == 1
	{
		if timeslot == "morning" || timeslot == "earlymorning"
		{
			if "mornings-bird" !_in_ m201zcharacter; mornings++
			--
			if "late-night-owl" _in_ m201zcharacter
			{
				mood[2]++
				--
				if repairglitch != 1; "H̸o̷w̷ ̶c̴a̷n̶ ̶y̷o̵u̶ ̸e̶v̴e̵n̵ ̴l̶i̷v̶e̵ ̵t̴h̴i̵s̴ ̵e̸a̷r̷l̸y̷"
				else; "%(distingstart)How can you even live this early"
			}
			--
			if "mornings-bird" _in_ m201zcharacter
			{
				if repairglitch != 1; "O̵h̶,̷ ̵y̸o̷u̴'̷r̶e̴ ̵u̴p̷ ̵e̴a̸r̵l̴y̶,̶ ̸g̴o̵o̶d̵ ̸m̶o̶r̴n̶i̸n̵g̸ ^^"
				else; "%(distingstart)Oh, you're up early, good morning"
			}
		}
		elseif timeslot == "midnight" || timeslot == "latenight"
		{
			if "mornings-bird" _in_ m201zcharacter
			{
				mood[2]++
				--
				if repairglitch != 1; "Y̷o̶u̷ ̴s̸h̸o̸u̵l̴d̶ ̷g̴o̶ ̶t̸o̵ ̷s̷l̷e̶e̶p̶ ̴i̴n̸s̸t̴e̵a̷d̴ ̷o̸f̵ ̷u̴s̶i̷n̶g̴ ̸a̴ ̶c̷o̷m̸p̵u̶t̸e̵r̵"
				else; "%(distingstart)You should go to sleep instead of using a computer"
			}
			--
			if "late-night-owl" !_in_ m201zcharacter; midnight++
			--
			if "late-night-owl" _in_ m201zcharacter
			{
				if repairglitch != 1; "W̵o̸w̵,̸ ̴y̷o̸u̸'̵r̸e̸ ̸u̶p̷ ̵l̶a̸t̴e̴\w6 \f[height,7]w̴e̴l̸l̶ ̴n̴o̵t̸ ̷t̴h̴a̴t̶ ̸I̸ ̴m̵i̸n̶d̸"
				else; "%(distingstart)Wow, you're up late\w6 \f[height,7]well not that I mind"
			}
		}
		else
		{
			if "afternoon-cat" !_in_ m201zcharacter
			{
				afternoon++
			}
			else
			{
				if repairglitch != 1; "P̴e̴r̶f̶e̷c̶t̶ ̶t̶i̵m̴e̶ ̵t̴o̸ ̶b̴e̵ ̵p̷r̵o̶d̸u̶c̵t̴i̴v̴e̶ ̶h̶u̴h̵?̶"
				else; "%(distingstart)Perfect time to be productive huh?"
			}
		}
	}
	--
	if sticky == "ON"
	{
		"\![set,sticky-window,1,0,3,4,5,6,7,8,9,10,11,12,13,14]"
	}
	--
	"\0\s[0]%(hihello)%(users)\x\c"
	--
	if weathermenu == "ON" || moonmenu == "ON"
	{
		if locationcode != ""
		{
			bootweater = 1
			--
			OnDownloadCurWeather
		}
		else
		{
			bootweater = 1
			--
			OnWeatherLocation
		}
	}
	elseif upchec == "ON"
	{
		"Searching for software updates....\![updatebymyself,checkonly]\e"
	}	
}

OnClose
{
	timeslot = GetTimeSlot 
	--
	if passmin >= 5	
	{
		if obsydian == 1
    	{
			if reference0 == "Dusty"
			{
				obsydian = 0
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(users)"
			}
		}
		else
		{
			"\0%(byebye) %(users)"
		}	
 	}	
 	else 
 	{
		if obsydian == 1
    	{
			if reference0 == "Dusty"
			{
				obsydian = 0
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(users)"
			}
		}
		else
		{
 			"\0Woah,\w8 that was quick\w8\w8\w8\w8\c %(byebye)%(users)\w8\w8\w8\w8"
		}
 	}
 	--
	"\-\e" 
}

OnWindowStateMinimize
{
	if obsydian == 1
	{
		if reference0 == "Dusty"
		{
			obsydian = 0
			"\0\s[0]\i[9000]%(byebye) kitty\e"
		}
	}
}

OnWindowStateRestore
{
	if obsydian == 1; "\1\s[-1]\0\s[1]back to work"
	else; "\1\s[-1]\0\s[0]back to work"
	--
	if tooln == "ON"; "%(lightdark)"
	--
	"\e"
}
 
OnGhostChanging
 {
	if reference0 == "MiniDev"  //when changes to itself/reload, start
	{
		"\0Reload!\w8\w8\e"
	}
 	else 
	{
		if obsydian == 1
    	{
			if reference0 == "Dusty"
			{
				obsydian = 0
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(reference0)\e"
			}
		}
		else
		{
			"\0%(byebye) %(reference0)\e"
		}
	}
}

OnGhostChanged
{
	"\0\1\s[10]" 
	--
	if reference0 == "MiniDev"   //when changes to itself/reload, end
	{
		"\0Done!\e"
	}
	else 
	{
		if obsydian == 1
    	{
			if reference0 == "Dusty"
			{
				obsydian = 0
				"\0\s[0]\i[9000]%(byebye) kitty, %(byebye) %(reference0)\e"
			}
		}
		else
		{
			"\0%(byebye) %(reference0)\e"
		}
	}
}
 
OnShellChanged
{
	nowshell = reference0
}

OnSurfacesTrue
{
	"\![set,othersurfacechange,true]"
}

OnCommTrue
{
	"\![set,otherghosttalk,after]"
}

OnArraysCheck //set arrays for logs
{
	if logdate == ""
	{
		templogdate = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		logdate = SPLIT(templogdate,",")
	}
	--
	if logname == ""
	{
		templogname = "NO DATA,Gdylg Prruh,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		logname = SPLIT(templogname,",")
	}
	--
	if loggen == ""
	{
		temploggen = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
		loggen = SPLIT(temploggen,",")
	}
	--
	if logmod == ""
	{
		templogmod = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR" 
		logmod = SPLIT(templogmod,",")
	}
	--
	if somecomt == ""
	{
		somecomt = "NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA"
		logcont = SPLIT(somecomt,",")
	}

}

FirstBootArrays //set arrays for logs
{
	templogdate = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	logdate = SPLIT(templogdate,",")
	--
    templogname = "NO DATA,Gdylg Prruh,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	logname = SPLIT(templogname,",")
	--
    temploggen = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR"  
	loggen = SPLIT(temploggen,",")
	--
    templogmod = "NO DATA,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR,ERROR" 
	logmod = SPLIT(templogmod,",")
	--
	somecomt = "NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA,NO DATA"
	logcont = SPLIT(somecomt,",")
	--
	devlogcontent[1] = "201: Look what i can do :D\w8\n201: You can update log to respond to me\w8\n201: It's like a chat!\w8\n201: So,\w5 how are you?\n"
}

//Triats OFF
OnTriats
{
	//POSITIVE TRIATS:
	nice = "OFF"
	smart  = "OFF"
	optimistic  = "OFF"
	//NEGATIVE TRIATS:
	pessimistic = "OFF"
	stupid = "OFF"
	//NEUTRAL TRIATS:
	funny = "OFF"
	romantic = "OFF"
}

FirstBootVariables 
{
	truth = 0
	tentruth = 0
	truthboot = 0
	userlogs = 0
	meeting = 0
	devlogcount	= 1
	AI = "OFF"
	tooln = "OFF"
	dlbtn = "OFF"
	calcbtn = "OFF"
	logbtn = "OFF"
	lesbtn = "OFF"
	webtn = "OFF"
	setbtn = "OFF"
	statbtn = "OFF"
	trabtn = "OFF"
	todobtn = "OFF"
	cusbtn = "OFF"
	appbtn = "OFF"
}

//\![raise,OnToolCheck]
OnToolCheck //adding stuff after updates
{
	if vers == ""
	{
		vers = "1.0.3"
		--
		quest = 0
		//Name,color
		colormeanings = "red.respect+desire+courage+true love+passion,yellow.happiness+joy+friendship+unrequited love,pink.love+happiness,orange.excitment+enthusiasm,white.purity+innocence+sympathy+truth,blue.peace+tranqility+relaxation,purple.success+royality+admiration,lavender.grace+elegance+youth,green.rebith+renewal+good fortune+youthfulness"
		plants = "rose.red+orange+white+pink+yellow+green+blue+purple+bicolor+black.spring+summer+fall.full sun.none.roses,tulip.cream+white+yellow+orange+pink+red+purple+violet+black.spring.full sun+part sun.none.tulips,orchid.blue+magenta+purple+red+pink+white+yellow+orange+green+orange.varies.part sun.none.orchids,aster.blue+pink+purple+red+white.summer+fall.full sun+part sun.attracts butterflies.asters,dahlia.multicolor+orange+pink+purple+red+white+yellow.summer+fall.full sun.none.dahlias,sunflower.yellow+orange+red.summer.full sun.attracts birds and butterflies.sunflowers,astilbe.pink+red+white.spring+summer.part sun+shade.attracts butterflies.astilbes"
		//Name,type,fluff or nah
		animals = ""
		animalslearnt = 0
		questionsasked  = ""
		m201zcharacter = ""
		usercharacter = ""
		--
		if BL == ""; BL = "ON"
		--
		if GL == ""; GL = "ON"
		--
		if ecchi == ""; ecchi = "ON"
		--
		if romancet == ""; romancet = "ON"
		--
		if action == ""; action = "ON"
		--
		if drama == ""; drama = "ON"
		--
		if horror == ""; horror = "ON"
		--
		if m201relationship == ""; m201relationship = 0
		--
		for _i=0;_i<=taskamount;_i++
		{
			if "\f[" _in_ todos[_i]; todostatus[_i] = 1
			else; todostatus[_i] = 0
		}
		--
		if hsphere == ""; hsphere = "Northern"
		--
		if usedefring == ""; usedefring = "OFF"
		--
		if remindcount == ""; remindcount = 0
		--
		if weathermenu == ""; weathermenu = "OFF"
		--
		if moonmenu == ""; moonmenu = "OFF"
		--
		if tooln == ""; tooln = "OFF"
		--
		if dlbtn == ""; dlbtn = "OFF"
		--
		calcbtn = "OFF"
		--
		if logbtn == ""; logbtn = "OFF"
		--
		if lesbtn == ""; lesbtn = "OFF"
		--
		if webtn == ""; webtn = "OFF"
		--
		if setbtn == ""; setbtn = "OFF"
		--
		if statbtn == ""; statbtn = "OFF"
		--
		if trabtn == ""; trabtn = "OFF"
		--
		if todobtn == ""; todobtn = "OFF"
		--
		if cusbtn == ""; cusbtn = "OFF"
		--
		if appbtn == ""; appbtn = "OFF"
		--
		if sticky == ""; sticky = "OFF"
		--
		if nice == ""; nice = "OFF"
		--
		if rude == ""; rude = "OFF"
		--
		if curses == ""; curses = "OFF"
		--
		if insults == ""; insults = "OFF"
		--
		if stupid == ""; stupid = "OFF"
		--
		if smart == ""; smart = "OFF"
		--
		if romantic == ""; romantic = "OFF"
		--
		if outgoing == ""; outgoing = "OFF"
		--
		if loner == ""; loner = "OFF"
		--
		if optimistic == ""; optimistic = "OFF"
		--
		if pessimistic == ""; pessimistic = "OFF"
		--
		if djokes == ""; djokes = "OFF"
		--
		if pessimistic == ""; pessimistic = "OFF"
		--
		if pocket == ""; pocket = "OFF"
		--
		if projecttypes == ""; projecttypes = "sai sai2 mdp kra blend"
		--
		if upchec == ""; upchec = "OFF"
		--
		if dateformatype == ""; dateformatype = "dd/mm/yyyy"
		--
		if timeformatype == ""; timeformatype = "STANDARD"
		--
		if mornings == ""; mornings = 0
		--
		if midnight == ""; midnight = 0
		--
		OnUpdateVariables
	}
	else
	{
		OnUpdateVariables
	}
}

Select.move
{
	OnMoveQTool
}

OnMoveQTool
{
	if sticky == "ON"
	{
		"\![reset,sticky-window]"
		--
		"\p[3]\![move,--X=1100,--Y=800]\p[4]\![move,--X=1100,--Y=800]\p[5]\![move,--X=1100,--Y=800]\p[6]\![move,--X=1100,--Y=800]\p[7]\![move,--X=1100,--Y=800]\p[8]\![move,--X=1100,--Y=800]\p[9]\![move,--X=1100,--Y=800]\p[10]\![move,--X=1100,--Y=800]"
		--
		"\![set,sticky-window,1,0,3,4,5,6,7,8,9,10]"
	}
	else
	{
		"\p[3]\![move,--X=1100,--Y=800]\p[4]\![move,--X=1100,--Y=800]\p[5]\![move,--X=1100,--Y=800]\p[6]\![move,--X=1100,--Y=800]\p[7]\![move,--X=1100,--Y=800]\p[8]\![move,--X=1100,--Y=800]\p[9]\![move,--X=1100,--Y=800]\p[10]\![move,--X=1100,--Y=800]"
	}
}

OnOtherGhostChanged
{
    if obsydian == 1
    {
        if reference0 == "Dusty"
        {
            obsydian = 0
            "\0\s[0]\i[9000]%(byebye) kitty\e"
        }
    }
}

OnOtherGhostClosed
{
    if obsydian == 1
    {
        if reference0 == "Dusty"
        {
            obsydian = 0
            "\0\s[0]\i[9000]%(byebye) kitty\e"
        }
    }
}

// %(installedghostlist)
//ghostexlist
//\![raise,OnUpdateVariables]
OnUpdateVariables
{
	if vers == "1.0.3"
	{
		vers = "1.0.4"
		namepage[0] = namepage
		taskamount[0] = taskamount
		pagetaskstatus[0] = REPLACE(todostatus,",","+")
		tasks[0] = REPLACE(todos,",","+")
		todopagenum = 0
		pagenum = 0
		pastel = "ON"
		plain = "ON"
		bright = "ON"
		dark = "ON"
		explained = " "
		--
		OnUpdateVariables
	}
	elseif vers == "1.0.4"
	{
		vers = "1.0.5"
		explained = " "
		pastel = "ON"
		plain = "ON"
		bright = "ON"
		dark = "ON"
		--
		OnUpdateVariables
	}
	elseif vers == "1.0.5"
	{
		vers = "1.0.6"
		pastel = "ON"
		plain = "ON"
		bright = "ON"
		dark = "ON"
		--
		OnUpdateVariables
	}
	elseif vers == "1.0.6"
	{
		//playlists = 0
		//plistname = ""
		vers = "1.0.7"
		MDisable == "OFF"
		narrator = 0
		distingnarr = ""
		nardistingtype = "default"
	}
	elseif vers == "1.0.7"
	{
		vers = "1.0.8"
		acc = "\f[color,#4cfc98]"
		hrnt = "ON"
	}
	--
	if narrator == 0 && repairglitch == 1
	{
		//OnUnlockNarrator
	}

}

OnUnlockNarrator
{
	"\0%(distingstart)Huh,\w5 There is a weird new file?\w5\n\n[half]Did it come with %(devname)'s latest update?\x\c%(distingstart)Was there something about it in the update note?\w8\n\n[half]Wait a second I will check what it is .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 .\w8\x\c%(distingstart)\![open,file,narrator.txt]A narrator?\w6 why would an M-%(modelp)p need something like that?\x\c\1%(distingnarr)* You tell him you don't know\0%(distingstart)What\x\c\1* He seems confused\0%(distingstart)What is even happening\x\c\1%(distingnarr)* Please choose formatting for your narrator\0%(distingstart)Wait\w4 what is going on\x\c"
	--
	narrator = 1
	--
	OnFormattingNar
}
