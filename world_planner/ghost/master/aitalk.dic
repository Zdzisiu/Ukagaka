AiTalk
{
	if RAND(100) < communicateratio
 	{
 		StartCommunicate
	}
 	else
	{
 		if mikireflag == 0
		{
			if CHAIN.IDName == "" {
 				lastTalk = RandomTalk
			}
			else {
				lastTalk = ChainTalk
			}
			lastTalk
		}
 		else
		{ 
		MikireTalk
 		}
	}
}

RandomTalk : nonoverlap
{
	/*case currmood
	{
		when 0 //thoughtfull
		{
			if mood[1] > 5
			{
				
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 1 //happy
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 2 //relaxed
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 3 //sleepy
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 4 //bored
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 5 //sad
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 6 //flushed
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 7 //annoyed
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 8 //angry
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 9 //exited
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[10] > 5
			{
				"%(ch)"
			}
		}
		when 10 //tired
		{
			if mood[0] > 5
			{
				"%(ch)"
			}

			if mood[1] > 5
			{
				"%(ch)"
			}

			if mood[2] > 5
			{
				"%(ch)"
			}

			if mood[3] > 5
			{
				"%(ch)"
			}

			if mood[4] > 5
			{
				"%(ch)"
			}

			if mood[5] > 5
			{
				"%(ch)"
			}

			if mood[6] > 5
			{
				"%(ch)"
			}

			if mood[7] > 5
			{
				"%(ch)"
			}

			if mood[8] > 5
			{
				"%(ch)"
			}

			if mood[9] > 5
			{
				"%(ch)"
			}
		}

	}*/
	
	"I hope %(guardians) isn't causing any trouble while I'm here"
	".\w5 .\w5 .\w5 When I get back I will have a lot of work"
	".\w5 .\w5 .\w5 I have to finally clean my desk when I get back"
	"I wonder how is %(guardians) doing?"
	".\w5 .\w5 .\w5 I can feel DLT causing trouble"

	{
		"* You can hear him mumbling . . .\n\n[half]\f[size,12]%(TOPROPER(TOLOWER(langMumb)))"
		--
		"?"
		"."
		"!?"
		"!"
		--
		"\f[size,default]"
	}
	
	if ghostexcount > 0 //Put this in randomtalk somewhere
	{
		"\![raise,OnTalkWithGhosts]"
	}
}

langMumb
{
	_alp = ("alphabet","sylabs","both")
	REPLACE(FakeWord(2,6,_alp[RAND(3)],RAND(1),RAND(1),RAND(1),RAND(1),RAND(10),RAND(10)),","," ")
}

/*
OnMinuteChange
-----
Reference0: OS continuous startup time (hour)
Reference1: 1 when out of stock, 0 otherwise.
Reference2: 1 when overlapping, 0 otherwise.
Reference3: 1 when talk can be played, 0 otherwise.
Reference4: *SSP only (at OS level) Time left unattended. In seconds. 
*/

guardians
{
	"SGM"
	"DLT"
	"ZTA"
	"OMNCRN"
	"GMM"
}

OnMinuteChange
{
	timeslot = GetTimeSlot 
	--
	moodminute += 1
	--
	if moodminute == 30
	{
		OnMoodCheck
		moodminute = 0
	}
	--
 	if minute == 0 
	{
 		
	}
	elseif mikireflag == 1
 	{
 		MikireTalk
	}
}

/*
OnSecondChange
-----
Reference0: OS continuous startup time (hour)
Reference1: 1 when out of stock, 0 otherwise.
Reference2: 1 when overlapping, 0 otherwise.
Reference3: 1 when talk can be played, 0 otherwise.
Reference4: *SSP only (at OS level) Time left unattended. In seconds
*/

OnSecondChange
{
	if passsec == 60
 		{
	 	passsec = 1
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	if mikireflag == 1 && reference1 == 0
		{
			EndMikireTalk
 		}
		mikireflag = reference1
	if reference2 == 1
	{

	}
}

MikireTalk
{
	"Push Ctrl-Shift-F12 to bring me back."
}

EndMikireTalk
{
	"...\e"
}

/*
OnKeyPress
-----
Reference0: The key entered. (Letter written on key top)
Reference1: The key entered. (Win32 virtual key code)
Reference2: *SSP only Counts the key pressed.
Reference3: *SSP only Character window ID where the key event came.
Reference4: *SSP only Modifier keys are listed separated by commas. Example: "ctrl,alt" 
*/

OnKeyPress
{
	if (reference0 == "z" && lastpressed == "return") || (reference0 == "return" && lastpressed == "z")
    {
        "\nenter z"
    }
    else
    {
        //Debug: 
        //"%(reference0) %(reference1) %(reference2) %(reference3) %(reference4) %(lastpressed)"
    }
    --
    lastpressed = reference0
	--
	lastpressed = reference0
	/*if reference0 == "t"
	{
		OnAiTalk
	}
	elseif reference0 == "r"
	{
		OnLastTalk
	}
	elseif reference0 == "z"
	{
		OnVariables
	}
	elseif reference0 == "s"
	{
		"\![reload,shiori]"
	}
	elseif reference0 == "a"
	{
		"\![reload,shell]"
	}
	elseif reference0 == "f1"
	{
		"\![open,readme]"
	}*/
}