Select.configmenu
{
	TalkConfig
}

Select.devconfig
{
	"\![Reset,reset]\n"
}

Select.reset
{
	OnFirstBoot
}

Select.deleteon
{
	deleteshitai = "ON"
	TalkConfig
}

Select.deleteoff
{
	deleteshitai = "OFF"
	TalkConfig
}

Select.format
{
	formattype = 1 //back to config
	--
	"\_q\b[2]Current Formating: %(distingstart)%(distingtype) text\f[default]\n\n[half]"
	--
	"\![*]\q[Bold text,OnDisting,bold]\n\![*]\q[Cursive text,OnDisting,cursive]\n/
	\![*]\q[Striked text,OnDisting,strike]\n\![*]\q[Underlined text,OnDisting,underline]\n/
	\![*]\q[Yellow text,OnDisting,yellow]\n\![*]\q[Green text,OnDisting,green]\n/
	\![*]\q[Red text,OnDisting,red]\n\![*]\q[Pink text,OnDisting,pink]\n\![*]\q[Custom Color,OnDisting,custom]\n\n\n[half]"
	--
	"\![*]\q[Go back,TalkConfig] | \![*]\q[Nevermind,cancle]"
}

OnFormattingNar
{
	if reference0 == "config"; formattype = 1 //back to config
	--
	"\_q\1\b[2]Current Formating: %(distingnarr)%(nardistingtype) text\f[default]\n\n[half]"
	--
	"\![*]\q[Bold text,OnDisting,bold,nar]\n\![*]\q[Cursive text,OnDisting,cursive,nar]\n/
	\![*]\q[Striked text,OnDisting,strike,nar]\n\![*]\q[Underlined text,OnDisting,underline,nar]\n/
	\![*]\q[Yellow text,OnDisting,yellow,nar]\n\![*]\q[Green text,OnDisting,green,nar]\n/
	\![*]\q[Red text,OnDisting,red,nar]\n\![*]\q[Pink text,OnDisting,pink]\n\![*]\q[Custom Color,OnDisting,custom,nar]\n\n\n[half]"
	--
	"\![*]\q[Go back,TalkConfig] | \![*]\q[Nevermind,cancle]"
}

Select.hemisph
{
	if hsphere == "Northern"; hsphere = "Southern"
	else; hsphere = "Northern"
	--
	TalkConfig
}

Select.hrntc
{
	if hrnt == "ON"; hrnt = "OFF"
	else; hrnt = "ON"
	--
	TalkConfig
}

TalkConfig
{
    
	"\0\b4\_q\![set,autoscroll,disable]\*" 
	--
	"\f[bold,1]Your Name:\f[default] %(acc)\q[%(username),TEACHNAME]\f[default]\n"
	--
	"\f[bold,1]Pronouns:\f[default] %(acc)\q[%(heshe)/%(himher)/%(hisher),TEACHPRONOUN]\f[default]\n"
	--
	"\f[bold,1]Birthday:\f[default] %(acc)\q[%(birthdayprint),TEACHBDAY]\f[default]\n"
	--
	"\f[bold,1]Talk Rate:\f[default] %(acc)\__q[talkinter]%(talktime)\__q\f[default]\n"
	--
	"\f[bold,1]Dev Name:\f[default] %(acc)\q[%(devname),changedev]\f[default]\n"
	--
	"\f[bold,1]Hour Notice:\f[default] %(acc)\q[%(hrnt),hrntc]\f[default]\n"
	--
	if repairglitch == 1 && tentruth == 1; "\f[bold,1]Disable %(devname) Talking:\f[bold,0] %(acc)\q[%(MDisable),mdtalk]\f[default]\n"
	--
	//"\f[bold,1]\![*]\q[Accessibility,acces]\f[bold,0]\n"
	--
	"\n[half]\![*]\f[bold,1]\q[Change Accent Color,OnAccColor]\f[default]\n"
	--
	if repairglitch == 1 && tentruth == 1; "%(distingstart)\![*]\q[Change M-201z Formatting,format]\f[default]\n"
	--
	if narrator != 0 && nowshell == "M-201z"; "%(distingnarr)\![*]\q[Change Narrator Formatting,OnFormattingNar,config]\f[default]\n"
	--
	"\f[bold,1]\![*]\q[Change Traits,traits]\f[default]\n"
	--
	"\f[bold,1]\![*]\q[Change tags,OnRecomConfig]\f[default]\n\n[half]"
	--
	"\f[bold,1]%(acc)\q[%(timeformatype),timetype]\f[default] TIME\n"
	--
	"\f[bold,1]DATE FORMAT:%(acc)\q[%(dateformatype),datetype]\f[default]\n\n[half]"
	--
	if weathermenu != "ON"
	{
		"Weather: %(acc) \q[%(weathermenu),weatheron]\f[default]\n"
	}
	else
	{
		"Weather %(acc) \q[%(weathermenu),weatheroff]\f[default] ("
		--
		"%(acc)\q[%(currentweatherarray[1]),startunit]\f[default])\n"
	}
	--
	if moonmenu != "ON"; "Moon Phase: %(acc) \q[%(moonmenu),moonon]\f[default]\n"
	--
	"Hemisphere: %(acc) \q[%(hsphere),hemisph]\f[default]\n"
	--
	if upchec != "ON"; "Auto update check: %(acc) \q[%(upchec),upcheck]\f[default]\n"
	--
	if deleteshitai != "ON"; "\f[default]Enable Uninstall?: %(acc) \q[%(deleteshitai),deleteon]\f[default]\n\n[half]"
	--
	"\n[half]\f[bold,1]Quick tools:\n\n[half]\f[default]"
	--
	"Quick tools: %(acc) \q[%(tooln),tool]\f[default]\n\n[half]"
	--
	"light/dark button: %(acc) \q[%(dlbtn),ldbtn]\f[default]\n"
	--
	"Logs: %(acc) \q[%(logbtn),lobtn]\f[default]\n"
	--
	"Weather: %(acc) \q[%(webtn),wbtn]\f[default]\n"
	--
	"Settings: %(acc) \q[%(setbtn),sbtn]\f[default]\n"
	--
	"Statistics: %(acc) \q[%(statbtn),stbtn]\f[default]\n"
	--
	"To-Do: %(acc) \q[%(todobtn),tdbtn]\f[default]\n"
	--
	"Cuztomization: %(acc) \q[%(cusbtn),cubtn]\f[default]\n"
	--
	"Open App: %(acc) \q[%(appbtn),apbtn]\f[default]\n"
	--
	"\n[half]Sticky tools: %(acc) \q[%(sticky),sticbtn]\f[default]\n"	
	--
	"\![*]\q[Reset Tools Positions,OnMoveQTool]\n"
	--
	//"\f[bold,1]\![*]\q[Change Likes and Dislikes,likedis]\f[bold,0]\n"
	//--
	//"\f[bold,1]\![*]\q[Change Fears,fear]\f[bold,0]\n\n[half]"
	//--
	"\n[half]\![*]\q[Back to the menu,BACKTOMENU]\n"
    --
	"\![*]\q[Nevermind,CANCEL]\e"
}

OnAccColor
{
	"%(cha)What color do you want?\![open,dialog,color,--id=OnCustomAccColor]"
}

OnCustomAccColor
{
	acc = "\f[color,"+ reference2 +"]"
	--
	TalkConfig
}

Select.acces
{

}

Select.degreeez
{
	if "C" _in_ currentweatherarray[1]; currentweatherarray[1] = REPLACE(currentweatherarray[1],"C","F")
	else; currentweatherarray[1] = REPLACE(currentweatherarray[1],"F","C")
	--
	TalkConfig
}

Select.startunit
{
	unitchange = 1
	--
	Select.switchunits
}

Select.datetype
{
	case dateformatype
	{
		when "dd/mm/yyyy"; dateformatype = "yyyy/mm/dd"
		when "yyyy/mm/dd"; dateformatype = "mm/dd/yyyy"
		when "mm/dd/yyyy"; dateformatype = "dd/mm/yyyy"
	}
	--
	TalkConfig
}

Select.timetype
{
	case timeformatype
	{
		when "STANDARD"; timeformatype = "MILITARY"
		when "MILITARY"; timeformatype = "STANDARD"
	}
	--
	TalkConfig

}

Select.upcheck
{
	case upchec
	{
		when "ON"; upchec = "OFF"
		when "OFF"; upchec = "ON"
	}
	--
	TalkConfig
}

Select.apbtn
{
	case appbtn
	{
		when "ON"; appbtn = "OFF"
		when "OFF"; appbtn = "ON"
	}
	--
	"%(lightdark)"
	--
	TalkConfig
	
}

Select.sticbtn
{
	case sticky
	{
		when "ON"
		{
			"\![reset,sticky-window]"
			--
			sticky = "OFF"
		}
		when "OFF"
		{
			"\![set,sticky-window,1,0,3,4,5,6,7,8,9,10]"
			--
			sticky = "ON"
		}
	}
	--
	TalkConfig
}

Select.tool
{
	if tooln == "ON"; tooln = "OFF"
	else; tooln = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
	
}

Select.changedev
{
	"\![open,inputbox,OnDevName,-1]"
}

OnDevName
{
	devname = reference0
	--
	TalkConfig
}

Select.cubtn
{
	if cusbtn == "ON"; cusbtn = "OFF"
	else; cusbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.tdbtn
{
	if todobtn == "ON"; todobtn = "OFF"
	else; todobtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.trbtn
{
	if trabtn == "ON"; trabtn = "OFF"
	else; trabtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.stbtn
{
	if statbtn == "ON";statbtn = "OFF"
	else;statbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.sbtn
{
	if setbtn == "ON"; setbtn = "OFF"
	else; setbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.wbtn
{
	if webtn == "ON"; webtn = "OFF"
	else; webtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.ldbtn
{
	if dlbtn == "ON"; dlbtn = "OFF"
	else; dlbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.cbtn
{
	if calcbtn == "ON"; calcbtn = "OFF"
	else; calcbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.lobtn
{
	if logbtn == "ON"; logbtn = "OFF"
	else; logbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.lebtn
{
	if lesbtn == "ON"; lesbtn = "OFF"
	else; lesbtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.rbtn
{
	if rembtn == "ON"; rembtn = "OFF"
	else; rembtn = "ON"
	--
	"%(lightdark)"
	--
	TalkConfig
}

Select.moonon
{
	moonmenu = "ON"
    --
	TalkConfig
}

Select.moonoff
{
    moonmenu = "OFF"
    --
	TalkConfig
}

Select.weatheron
{
	weathermenu = "ON"
	--
	TalkConfig
}

Select.weatheroff
{
	weathermenu = "OFF"
	--
	TalkConfig
}

Select.TEACHPRONOUN
{
	"\0What pronouns do you want?\w5\n\n[half]\_q/
	\![*]\q[He-His-Him,choicemasc]\n/
	\![*]\q[She-Her-Her,choicefem]\n/	
	\![*]\q[They-Their-Them,choiceneither]\n/
    \![*]\q[Your own,choiceown]\n\n[half]/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

Select.choicemasc
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	"\0The pronouns are now he him and his.\e"
}

Select.choicefem
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	"\0The pronouns are now she her and her.\e"
}

Select.choiceneither
{
	presuffix = "undefine"
	himher = "them"
	heshe = "they"
	hisher = "their"
	--
	truepresuffix = presuffix
	truehimher = himher
	trueheshe = heshe
	truehisher = hisher
	--
	"\0The pronouns are now they them and their.\e"
}

Select.choiceown
{
	"\0Okay then, write them as replacment of the ones I say\x\creplacement of 'he'\![open,inputbox,OnOwnPronone,-1]"
}

OnOwnPronone
{ 
	heshe = reference0
	"\0%(heshe)\w8\w8 replacement of 'him'\![open,inputbox,OnOwnProntwo,-1]"
}

OnOwnProntwo
{
	himher = reference0
	"\0%(himher)\w8\w8 replacement of 'his'\![open,inputbox,OnOwnPronthree,-1]"
}

OnOwnPronthree
{
	hisher = reference0
	"\0%(hisher)\w8\w8 Your pronounces: %(heshe)/%(himher)/%(hisher)\e"
}

Select.TEACHBDAY
{
	dayslot = GetDaySlot 
	"\0What month were you born? \w8Write the number.\![open,inputbox,OnUserBornMonth,-1]\e"
}


OnUserBornMonth
{
	_tempmonth = reference0 //this stores what the user input in as a variable called _tempmonth
	if _tempmonth >= 1 && _tempmonth <= 12 //if the month is a valid month
	{
		bornmonth = _tempmonth
		bornmonthprint = Printmonth
		"\0So %(bornmonthprint)?\n\w8What day was it?\![open,inputbox,OnUserBornDay,-1]\e"
	}
	else 
	{
	"\0There is no month like that,\w5 try again\![open,inputbox,OnUserBornMonth,-1]\e"
	//You can replace this dialogue as well up to the \! tag, as mentioned. You need to leave the tag for the input box so they can put in a correct month.
	}
}

Printmonth
{
	if bornmonth == 1; "January"
	elseif bornmonth == 2; "February"
	elseif bornmonth == 3; "March"
	elseif bornmonth == 4; "April"
	elseif bornmonth == 5; "May"
	elseif bornmonth == 6; "June"
	elseif bornmonth == 7; "July"
	elseif bornmonth == 8; "August"
	elseif bornmonth == 9; "September"
	elseif bornmonth == 10; "October"
	elseif bornmonth == 11; "November"
	else; "December"
}


Printday
{
	if bornday == 1 || bornday == 21 || bornday == 31; "%(bornday)st"
	elseif bornday == 2 || bornday == 22; "%(bornday)nd"
	elseif bornday == 3 || bornday == 23; "%(bornday)rd"
	else; "%(bornday)th"
}	

OnUserBornDay
{
	tempday = reference0 //storing the input in tempday
	
	if bornmonth == 1 || bornmonth == 3 || bornmonth == 5 || bornmonth == 7 || bornmonth == 8 || bornmonth == 10 || bornmonth == 12 //This is checking to see if it's one of the months with 31 days.
	{
		if tempday >= 1 && tempday <= 31 
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else 
		{
			"\0There is no day like that\w5, try again\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}
	elseif bornmonth == 2
	{
		if tempday >= 1 && tempday <= 29
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else
		{
			"\0There is no day like that\w5, try again\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}
	else 
	{
		if tempday >= 1 && tempday <= 30 
		{
			bornday = tempday
			borndayprint = Printday
			userbirthday = "%(bornmonth)month %(bornday)day"
			birthdayprint = "%(bornmonthprint) %(borndayprint)"
			"%(birthchecked)"
		}
		else
		{
			"\0There is no day like that\w5, try again\![open,inputbox,OnUserBornDay,-1]\e"
		}
	}		
}

birthchecked
{
	askzoidac = 0
	zodiaccheck = 0
	truebirth = userbirthday
	--
	if userbirthday == dayslot; "\0Your birthday\w6 is today?\w7Happy Birthday then%(users)!"
	elseif userbirthday == "10month 31day"; "\0Your birthday is on halloween?\w6 does that mean twice as many candy and costume party?"
	else; "\0Your birthday is %(bornmonthprint) %(borndayprint)? I will remember"
}

Select.talkinter
{
	"\0\b2How often should I speak?\w8\0currently it's set to '%(talktime)'./
	//note the new envelope here for %(talktime). You'll see it again in a second. You can replace the dialogue above with whatever you like, just make sure it ends with ./ and not \e.
	\_q\0\n\n[half]/
	\![*]\q[Every 30 seconds,TALKMAX]\n/
	\![*]\q[Every minute,TALKHIGH]\n/
	\![*]\q[Every 3 minutes,TALKNORMAL]\n/
	\![*]\q[Every 5 minutes,TALKPOOR]\n/
	\![*]\q[Every 15 minutes,TALKRARE]\n/
	\![*]\q[Every 30 minutes,TALKOVRARE]\n/
    \![*]\q[Set own,TALKOWN]\n/
	\![*]\q[Don't speak,TALKNONE]\n/
	\![*]\q[Don't change,TalksTill]\n\n[half]/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]"
}

Select.TALKOWN
{
	"%(ch)Which time interval do you want to use?\n\n[half]"
	--
	"\![*]\q[Seconds,OnTalkCustom,seconds]\n/
	\![*]\q[Minutes,OnTalkCustom,minutes]\n/
	\![*]\q[Hours,OnTalkCustom,hours]"
}

OnTalkCustom
{
	talkinttima = reference0
	--
	case talkinttima
	{
		when "seconds"; "%(ch)I should speak every . . . seconds.\![open,sliderinput,OnTalkCustomize,-1,30,30,59]"
		when "minutes"; "%(ch)I should speak every . . . minutes.\![open,sliderinput,OnTalkCustomize,-1,1,1,59]"
		when "hours"; "%(ch)I should speak every . . . hours.\![open,sliderinput,OnTalkCustomize,-1,1,1,24]"
	}
}

OnTalkCustomize
{
	timecustom = reference0
	--
	case talkinttima
	{
		when "seconds"
		{
			talktime = "%(timecustom) seconds" 
			aitalkinterval = timecustom 
			"I will speak every %(timecustom).\e"
		}
		when "minutes"
		{
			if timecustom == 1
			{
				talktime = "minute" 
				aitalkinterval = timecustom * 60
				"I will speak every minute.\e"
			}
			else
			{
				talktime = "%(timecustom) minutes" 
				aitalkinterval = timecustom * 60
				"I will speak every %(talktime).\e"
			}
		}
		when "hours"
		{
			if timecustom == 1
			{
				talktime = "hour" 
				aitalkinterval = timecustom * 3600
				"I will speak every hour.\e"
			}
			else
			{
				talktime = "%(talktime) hours" 
				aitalkinterval = timecustom * 3600
				"I will speak every %(talktime).\e"
			}
		}
	}
}

Select.TalksTill
{
	"\0No change to the talk rate.\e"
}

Select.TALKMAX
{
	talktime = "30 seconds" //this sets up the envelope properly
	aitalkinterval = 45 //this changes the actual rate
	
	"\0We will speak every 30 seconds.\e"
}

Select.TALKHIGH
{
	talktime = "minute"
	aitalkinterval = 90
	
	"\0I will speak every minute.\e"
}

Select.TALKNORMAL
{
	talktime = "3 minutes"
	aitalkinterval = 270
	
	"\0I will speak every three minutes.\e"
}

Select.TALKPOOR
{
	talktime = "5 minutes"
	aitalkinterval = 400
	
	"\0I will speak every five minutes.\e"
}

Select.TALKNONE
{
	talktime = "...actually I won't talk at all"
	aitalkinterval = 0
	
	"\0I will stay quiet\e"
}

Select.TALKRARE
{
	talktime = "15 minutes"
	aitalkinterval = 1200
	
	"\0I will speak every fifteen minutes.\e"
}

Select.TALKOVRARE
{
	talktime = "30 minutes"
	aitalkinterval = 2400
	
	"\0I will speak every thirty minutes.\e"
}

	
Select.TEACHNAME
{
	OnTeachName	
}

//trait system
Select.traits
{
	"\_q\b2"
	--
	//POSITIVE:
    if nice != "ON" && rude != "ON"; "\f[default]Nice: %(acc) \q[%(nice),nicec]\f[default]\n"
	elseif rude == "ON"; "\f[default]\f[strike,1]Nice\f[strike,0]\f[default]\n"		
	else; "\f[default]Nice: %(acc)\q[%(nice),nicec]\f[default]\n"		
	--
	if smart != "ON" && stupid != "ON"; "\f[default]Intelligent: %(acc) \q[%(smart),smac]\f[default]\n"
	elseif stupid == "ON"; "\f[default]\f[strike,1]Intelligent\f[strike,0]\f[default]\n"		
	else; "\f[default]Intelligent: %(acc)\q[%(smart),smac]\f[default]\n"		
	--
	if stupid != "ON" && smart != "ON"; "\f[default]Unintelligent: %(acc) \q[%(stupid),stuc]\f[default]\n"
	elseif smart == "ON"; "\f[default]\f[strike,1]Unintelligent\f[strike,0]\f[default]\n"		
	else; "\f[default]Unintelligent: %(acc)\q[%(stupid),stuc]\f[default]\n"		
	--
	//NEUTRAL traitS:
	/*if funny != "ON"
	{
		"\f[default]Funny: %(acc) \q[%(funny),func]\f[default]\n"
	}
	else
	{
		"\f[default]Funny: %(acc)\q[%(funny),func]\f[default]\n"		
	}
	--
		if djokes != "ON"
		{
			"\f[default]Dark Humor: %(acc) \q[%(djokes),darktop]\f[default]\n"
		}
		else
		{
			"\f[default]Dark Humor: %(acc)\q[%(djokes),darktop]\f[default]\n"		
		}
	--*/
	if romantic != "ON"; "\f[default]Romantic: %(acc) \q[%(romantic),romc]\f[default]\n"
	else; "\f[default]Romantic: %(acc)\q[%(romantic),romc]\f[default]\n"		
	--
	if outgoing != "ON" && loner != "ON"; "\f[default]Outgoing: %(acc) \q[%(outgoing),outc]\f[default]\n"
	elseif loner == "ON"; "\f[default]\f[strike,1]Outgoing\f[strike,0]\f[default]\n"		
	else; "\f[default]Outgoing: %(acc)\q[%(outgoing),outc]\f[default]\n"		
	--
	if loner != "ON" && outgoing != "ON"; "\f[default]Loner: %(acc) \q[%(loner),lonc]\f[default]\n"
	elseif outgoing == "ON"; "\f[default]\f[strike,1]Loner\f[strike,0]\f[default]\n"		
	else; "\f[default]Loner: %(acc)\q[%(loner),lonc]\f[default]\n"		
	--
	if pessimistic != "ON" && optimistic != "ON"; "\f[default]Pessimistic: %(acc) \q[%(pessimistic),pesc]\f[default]\n"
	elseif optimistic == "ON"; "\f[default]\f[strike,1]Pessimistic\f[strike,0]\f[default]\n"		
	else; "\f[default]Pessimistic: %(acc)\q[%(pessimistic),pesc]\f[default]\n"		
	--
	if optimistic != "ON" && pessimistic != "ON"; "\f[default]Optimistic: %(acc) \q[%(optimistic),optc]\f[default]\n"
	elseif pessimistic == "ON"; "\f[default]\f[strike,1]Optimistic\f[strike,0]\f[default]\n"		
	else; "\f[default]Optimistic: %(acc)\q[%(optimistic),optc]\f[default]\n"		
	--
	"\n[half]\![*]\q[trait info,script:\![open,file,ghost/master/Traits.txt\]]\n"
    --
	"\n[half]\![*]\q[Back to the config menu,configmenu]\n"
    --
	"\![*]\q[Nevermind,CANCEL]\e"
}

Select.optc
{
	if optimistic == "ON"; optimistic = "OFF"
	else; optimistic = "ON"
	--
	Select.traits
}

Select.pesc
{
	if pessimistic == "ON"; pessimistic = "OFF"
	else; pessimistic = "ON"
	--
	Select.traits
}

Select.lonc
{
	if loner == "ON"; loner = "OFF"
	else; loner = "ON"
	--
	Select.traits
}

Select.outc
{
	if outgoing == "ON"; outgoing = "OFF"
	else; outgoing = "ON"
	--
	Select.traits
}

Select.stuc
{
	if stupid == "ON"; stupid = "OFF"
	else; stupid = "ON"
	--
	Select.traits
}

Select.romc
{
	if romantic == "ON"; romantic = "OFF"
	else; romantic = "ON"
	--
	Select.traits
}

Select.func
{
	if funny == "ON"; funny = "OFF"
	else; funny = "ON"
	--
	Select.traits
}

Select.smac
{
	if smart == "ON"; smart = "OFF"
	else; smart = "ON"
	--
	Select.traits
}

Select.nicec
{
	if nice == "ON"; nice = "OFF"
	else; nice = "ON"
	--
	Select.traits
}

Select.rudec
{
	if rude == "ON"; rude = "OFF"
	else; rude = "ON"
	--
	Select.traits
}

Select.curc
{
	if curses == "ON"; curses = "OFF"
	else; curses = "ON"
	--
	Select.traits
}

Select.insc
{
	if insults == "ON"; insults = "OFF"
	else; insults = "ON"
	--
	Select.traits
}

Select.triinfo
{
	"\![open,file,ghost/master/Traits.txt]"
}

Select.darktop
{
	if djokes == "ON"; djokes = "OFF"
	else; djokes = "ON"
	--
	Select.jokes
}


OnRecomConfig
{
	"\b4\_qInclude | Exclude tags (anime/manga)\n\n[half]"
	--
	"\f[default]BL: %(acc) \q[%(BL),OnRecC,bl]\f[default]\n"
	--
	"\f[default]GL: %(acc) \q[%(GL),OnRecC,gl]\f[default]\n"
	--
	"\f[default]Ecchi: %(acc) \q[%(ecchi),OnRecC,ecchi]\f[default]\n"		
	--
	"\f[default]Romance: %(acc) \q[%(romancet),OnRecC,romance]\f[default]\n"
	--
	"\f[default]Action: %(acc) \q[%(action),OnRecC,action]\f[default]\n"
	--
	"\f[default]Drama: %(acc) \q[%(drama),OnRecC,drama]\f[default]\n"
	--
	"\f[default]Horror: %(acc) \q[%(horror),OnRecC,horror]\f[default]\n"
	--
	"\n[half]\![*]\q[Back to the config menu,configmenu]\n"
    --
	"\![*]\q[Nevermind,CANCEL]\e"
}

OnRecC
{
	case reference0
	{
		when "horror"
		{
			if horror == "OFF"; horror = "ON"
			else; horror = "OFF"
		}
		when "drama"
		{
			if drama == "OFF"; drama = "ON"
			else; drama = "OFF"
		}
		when "action"
		{
			if action == "OFF"; action = "ON"
			else; action = "OFF"
		}
		when "romance"
		{
			if romancet == "OFF"; romancet = "ON"
			else; romancet = "OFF"
		}
		when "ecchi"
		{
			if ecchi == "OFF"; ecchi = "ON"
			else; ecchi = "OFF"
		}
		when "bl"
		{
			if BL == "OFF"; BL = "ON"
			else; BL = "OFF"
		}
		when "gl"
		{
			if GL == "OFF"; GL = "ON"
			else; GL = "OFF"
		}
	}
	--
	excludedtags = "tagsssss"
	/*
	horror
	drama
	GL
	BL
	ecchi
	romancet
	action
	*/
	--
	if GL == "OFF"; excludedtags += ",GL,Yuri"
	--
	if BL == "OFF"; excludedtags += ",BL,Yaoi"
	--
	if horror == "OFF"; excludedtags += ",Horror"
	--
	if drama == "OFF"; excludedtags += ",Drama"
	--
	if ecchi == "OFF"; excludedtags += ",Ecchi"
	--
	if romancet == "OFF"; excludedtags += ",Romance"
	--
	if action == "OFF"; excludedtags += ",Action"
	--
	OnRecomConfig
}

Select.mdtalk
{
	if MDisable == "ON"; MDisable = "OFF"
	else; MDisable = "ON"
	--
	TalkConfig
}