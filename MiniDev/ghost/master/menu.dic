OpenSakuraMenu
{
	if tentruth == 1; "\n\n\_q\b4"
	else; "\n\_q\b2"	
	--
	MenuRun
}

OnBACKTOMENU
{
	OpenSakuraMenu
}

MenuRun
{	
 	wd = GetWeekDay
 	ap = GetAP
 	nowmin = Getnowmin
 	nowhour = Getnowhour
	--
	if tentruth == 1; "\![*]\q[R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛,rebot]\n\n[half]"
	elseif tentruth == 2; "\![*]\q[Reboot,rebot]\n\n[half]"
	elseif glitchboot >= 50 && glitchboot <= 55; "\![*]\q[R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛,gboot]\n\n[half]"
	--
	if lastTalk != ""; "\![*]\q[Repeat,OnLastTalk] or "
	--
 	"\![*]\q[Say something,altalk]\n\n[half]"
	--
	"\![*]\q[Config Menu,configmenu]\n/
	\![*]\q[Functions,dosomething]\n/
	//\![*]\q[Anime News,aninews]\n/
	\![*]\q[Customize,clothesmenu]\n\n[half]/
	\![*]\q[Questions,ques]\n/
	\![*]\q[Open an app | project,oapp]\n/
	\![*]\q[User Logs,LOG]\n"
	--
	if nowshell == "M-201z";"\![*]\q[Items,gift]\n"
	--
	if AI == "ON";"\![*]\q[AI chat,saysmth]\n"
	--
	if tentruth == 1 || (glitchboot >= 50 && glitchboot <= 55)
	{
		"\![*]\q[L̷̜̚o̶̭̾g̵̨̽s̶͇̅,log]\n"
		--
		if meeting == 1
		{
			if m201relationship >= 25;"\![*]\q[Play a game,gamez]\n"
			--
			"\![*]\q[Actions,act]\n"
		}
	}
	--
	"\n[half]\![*]\q[Nevermind,CANCEL]\n\n\n[half]%(wd) %(timeformat), %(dateformat)" 
	--
	if weathermenu == "ON"; "\n\n[half]%(currentweatherarray[0])%(currentweatherarray[1]), %(currentweatherarray[5])"
	--
	if moonmenu == "ON";"\n\f[bold,1]Moon:\f[default] %(phase)"
	--
	"\n\n[half]\f[height,11]Version: %(vers)"
	--
	"\nInstance: M-%(modelp)P\f[default]"
	--
	"\e"
}

Select.gift
{

}

Select.quote
{
    "\![execute,http-get,http://www.quotationspage.com/random.php,--async=OnQuoteFound,--file=quote.html,--timeout=200]"
}

OnQuoteFound
{
    _file = "var\\quote.html"
    _buff = ""
    _regquote = '.html">(.*)</a> </dt><dd class="author"><div class="icons">'
    _regeauthor = '/">(.*)</a> (.*)</b></dd>'
    quote = ""
    author = ""
    _found = 0
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1 && !_found; _buff = FREAD(_file) {

			if RE_SEARCH ( _buff, _regquote ); quote = RE_GETSTR[1]
			--
			if RE_SEARCH ( _buff, _regeauthor ) {
				author = RE_GETSTR[1]  
				_found = 1;     
			}
		}
    }
    --
    FCLOSE(_file);
    --
    "\b2%(quote)\n\n[half]         -%(author)"
}

Select.req //recommendations
{
	"\b2What would you want?\n\n[half]\_q"
	--
	"\![*]\q[Books,bookr]\n"
	//"\![*]\f[strike,1]Books\f[strike,0]\n"
	--
	"\![*]\q[Anime,randanime]\n"
	//"\![*]\f[strike,1]Anime\f[strike,0]\n"
	--
	"\![*]\q[Mangas,mangar]\n"
	//"\![*]\f[strike,1]Mangas\f[strike,0]\n"
	--
	//"\![*]\q[Movies,mobier]\n"
	"\![*]\f[strike,1]Movies\f[strike,0]\n"
	--
	//"\![*]\q[Cartoons,cartoonr]\n"
	"\![*]\f[strike,1]Cartoons\f[strike,0]\n"
	--
	//"\![*]\q[Serials,serialr]\n"
	"\![*]\f[strike,1]Serials\f[strike,0]\n"
	--
	//"\![*]\q[Comics,comicr]\n\n[half]"
	"\![*]\f[strike,1]Comics\f[strike,0]\n\n[half]"
	--
	"\![*]\q[Back to main menu,BACKTOMENU]\n"
	--
	"\![*]\q[Nevermind,CANCEL]\e"
}

OnBookFound
{
	_file = "var\\book.html"
    _buff= ""
    _regquote = 'aria-level=' + "'" + 4 + "'" + '>(.*)</span>'
    _regeauthor = '<span itemprop="name">([\w|\s]*)</span></a>'
	_booklinkregex = '<a class="bookTitle" itemprop="url" href="(.*)">'
    _quote = ""
    _author = ""
    _found = 0
	bookpage = "\b2\_q\*"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1 && !_found; _buff = FREAD(_file) {
			if RE_SEARCH ( _buff, _regquote ); _quote += RE_GETSTR[1] + "+"  
			--
			if RE_SEARCH ( _buff, _regeauthor ); _author += RE_GETSTR[1] + "+"  
			--
			if RE_SEARCH ( _buff, _booklinkregex ); booklink += RE_GETSTR[1] + "+"  
		}
    }
    --
    FCLOSE(_file);
    --
	quote = REPLACE(quote,",","~~")
	booksplit = SPLIT(quote,"+")
	--
	booklink = SPLIT(booklink,"+")
	--
	author = REPLACE(author,",","~~")
	authorsplit = SPLIT(author,"+")
	--
	for _i=0;_i<5;_i++
    {
		lastrand = rand
		rand = RAND(100)
		exctag = 0
		--
		for _j=0;lastrand==rand;_j++
		{
			rand = RAND(50)
		}
		--
		bookpage += "\f[bold,1]" + REPLACE(booksplit[rand],"~~",",") //+ "\f[bold,0]—" + REPLACE(authorsplit[rand],"~~",",") + "\n\n[half]"
	}
	--
	bookpage += "\x"
	--
	bookpage
}

Select.comicr
{

}

Select.bookr
{
	rand = RAND(5)
	--
	if rand == 0; rand = 1
	--
	 ". . .\![execute,http-get,https://www.goodreads.com/list/show/116990.Best_Books_2020?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
	 ". . .\![execute,http-get,https://www.goodreads.com/list/show/114787.Best_Books_2019?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
	 ". . .\![execute,http-get,https://www.goodreads.com/list/show/119307.Best_Books_of_2018?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
	 ". . .\![execute,http-get,https://www.goodreads.com/list/show/107026.Best_Books_of_2017?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
	 ". . .\![execute,http-get,https://www.goodreads.com/list/best_of_year/2016%22?id=95160.Best_Books_of_2016?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
	 ". . .\![execute,http-get,https://www.goodreads.com/list/best_of_year/2016%22?id=95160.Best_Books_of_2016?page=%(rand),--async=OnBookFound,--file=book.html,--timeout=200]"
}

OnMangaFound
{
	_file = "var\\manga.html"
    _buff= ""
    _regquote = '<h5 class=' + "'" + 'theme-font' + "'" + '>([\w|\s]*)</h5>'//<a title="<h5 class='theme-font'>Yum Yum Sweets</h5>
    _regeauthor = '<h4>Tags</h4><ul>(.*)</li></ul></div>'
	_booklinkregex = '</li></ul></div>" href="(.*)" class="tooltip manga'
    quote = ""
    author = ""
    _found = 0
	bookpage = "\b2\_q\*"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
            for _buff = FREAD(_file); _buff != -1 && _found != 10; _buff = FREAD(_file) {
				if RE_SEARCH ( _buff, _regquote ) {
						bookpage += RE_GETSTR[1] + "\n\n[half]"  
						_found++
				}
				/*if RE_SEARCH ( _buff, _regquote ) {
						
						quote += RE_GETSTR[1] + "+"  
				}
				--
				if RE_SEARCH ( _buff, _regeauthor ) {
						
						author += RE_GETSTR[1] + "+"  
				}
				--
				if RE_SEARCH ( _buff, _booklinkregex ) {
						
					booklink += RE_GETSTR[1] + "+"  
				}*/
            }
    }
    --
    FCLOSE(_file);
    --
	quote = REPLACE(quote,",","~~")
	booksplit = SPLIT(quote,"+")
	--
	booklink = SPLIT(booklink,"+")
	--
	author = REPLACE(author,"<li>","")
	author = REPLACE(author,"</li>"," | ")
	author = REPLACE(author,",","~~")
	authorsplit = SPLIT(author,"+")
	--
	/*for _i=0;_i<5;_i++
    {
		lastrand = rand
		rand = RAND(100)
		exctag = 0
		--
		for _j=0;lastrand==rand;_j++
		{
			rand = RAND(50)
		}
		--
		exsize = ARRAYSIZE(excludedtags)
		--
		for _k=0;_k<=exsize;_k++
		{
			if excludedtags[_k] _in_ "%(authorsplit[rand])"
			{
				exctag = 1
			}
		}
		--
		if REPLACE(booksplit[rand],"~~",",") == "" || exctag == 1 || REPLACE(booksplit[rand],"~~",",") _in_ _bookpage 
		{
			_i--
		}
		else
		{
			bookpage += "\f[bold,1]" + REPLACE(booksplit[rand],"~~",",") + "\f[bold,0]:\n\f[height,10]" + REPLACE(authorsplit[rand],"~~",",") + "\n\n[half]\f[default]"
		}
	}*/
	--
	bookpage += "\x"
	--
	bookpage
}

Select.mangar
{
	rand = RAND(1646) + 1
	--
	 ". . .\![execute,http-get,https://www.anime-planet.com/manga/all?page=%(rand),--async=OnMangaFound,--file=manga.html,--timeout=200]"
}

Select.gboot
{
	glitchboot = 100
	"REBOOT\w8\s[-1]\c\w8\w8\w8\w8\s[0]REBOOT COMPETE"
}

Select.log
{
	logpage = 1
	"SEARCHING FOR LOGS\w8\w8\w8\w8\w8\w8\cLOGS:\n%(logdisplay)"
}

Select.rebot
{
	if tentruth == 1
	{
		"REBOOT\w8\s[-1]\c\w8\w8\w8\w8\s[0]REBOOT COMPETE"
		tentruth = 2
	}
	elseif tentruth == 2
	{
		"R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛\s[-1]\c\w8\w8\w8\w8\s[0]R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛ COMPETE"
		tentruth = 1
	}
}

Select.ques
{
	
 	"\b2What would you like to know?\n\n[half]"
	--
	if tentruth == 1
	{
		"\b4\![*]\q[A̵͈͊.̵͔̚R̶̠̽.̵͇̀Ỉ̶͇,ariq]\n/
		\![*]\q[MiniDev,mdevq]\n/
		\![*]\q[Functions,funq]\n/
		\![*]\q[Shortcut keys,skeyq]\n"
		--
		if scode == 1; "\![*]\q[Serial codes,secode]"
		--
		if truth >= 3; "\![*]\q[M̷̯̅-̷͚̎2̴̛ͅ0̵̺̅1̵̫͠z̴̤̃,m201z]"
		--
		if meeting == 1
		{
			"\n\n[half]\![*]\q[How are you?,On201zQ,feelings]\n/
			\![*]\q[Tell me about yourself,On201zQ,yourself]\n"
			--
			if glitchask == 1 && repairglitch != 1 && quest != 1 &&  quest != 2; "\![*]\q[Glitches,On201zQ,glitches]\n"
			--
			if repairglitch == 1 && searchforhobby != 1 && m201relationship > 100; "\![*]\q[Hobbies,On201zQ,hobbies]\n"
			--
			if (quest == 1 || quest == 3) && repairglitch != 1; "\![*]\q[Repair,deletethefiles]\n"
			--
			if david == 1; "\![*]\q[David,On201zQ,david]\n"
			--
			if ghostmet >= 1; "\![*]\q[Other Ghosts,On201zQ,otherghosts]\n"
		}
	}
	else
	{
		"\![*]\q[A.R.I,ariq]\n/
		\![*]\q[MiniDev,mdevq]\n/
		\![*]\q[Functions,funq]\n/
		\![*]\q[Shortcut keys,skeyq]\n"
		--
		if scode == 1; "\![*]\q[Serial codes,secode]\n"
		--
		if truth >= 2; "\![*]\q[M-201z,m201z]\n"
		--
		if truth >= 1; "\![*]\q[Generation z,mz]\n"
	}
	--
	"\n\n[half]\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

On201zQ 
{
	case reference0
	{
		when "glitches"
		{
			if repairglitch != 1
			{
				quest = 3
				--
				"O̶h̸,̷ ̴t̶h̵o̸s̴e̷ ̷g̵l̴i̸t̴c̷h̶e̵s̶ ̸a̵r̶e̶ ̵c̴a̷u̸s̴e̷d̶ ̵b̸y̴ ̷a̴ ̶c̴o̵r̸r̵u̸p̴t̶e̶d̶ ̶f̶i̷l̴e̸,̸ ̶s̷a̸d̶l̵y̵ ̵I̸ ̸c̶a̴n̸'̷t̷ ̸d̴e̶a̴l̸ ̸w̵i̶t̵h̷ ̸i̵t̸ ̸o̸n̷ ̵m̵y̵ ̶o̶w̷n̶ ̶b̵e̸c̷a̷u̶s̵e̴ ̸o̴f̶ ̷r̷e̸s̶t̷r̴i̷c̵t̴i̷o̸n̶s̶ ̸"
			}
			else
			{
				"%(distingstart)Thankfully after you repaired that file I don't glitch anymore :D"
			}
		}
		when "feelings"
		{
			m201relationship++
			--
			if repairglitch != 1
			{
				case numofmood
				{
					when 0
					{
						"%(distingstart)I̷ ̵f̸e̴e̸l̴ .\w5 .\w5 .\w5 c̷a̷l̷m̵?̷ ̸I̸ ̶g̷u̶e̵s̶s̷?̵ .\w5 .\w5 .\w5 s̵o̴r̴r̵y̷ ̴I̷'̴m̴ ̴n̷o̸t̶ ̵g̵o̶o̶d̴ ̵w̵i̷t̴h̸ ̷a̷l̶l̸ ̴t̴h̴a̵t̵ ̶f̸e̶e̷l̴i̶n̷g̶s̸ ̶s̷t̷u̵f̶f̵ ._."
						"%(distingstart)I̷ ̵f̸e̴e̸l̴ .\w5 .\w5 .\w5 c̷a̷l̷m̵?̷ ̸I̸ ̶ t̴h̴i̶n̷k̵?̸ .\w5 .\w5 .\w5 s̵o̴r̴r̵y̷ ̴I̷'̴m̴ ̴n̷o̸t̶ ̵g̵o̶o̶d̴ ̵w̵i̷t̴h̸ ̷a̷l̶l̸ ̴t̴h̴a̵t̵ ̶f̸e̶e̷l̴i̶n̷g̶s̸ ̶s̷t̷u̵f̶f̵ ._."
						"%(distingstart)I̷ ̵f̸e̴e̸l̴ .\w5 .\w5 .\w5 r̵e̴l̸a̴x̷e̵d̴ ̵I̵ ̷g̵u̷e̷s̵s̷ .\w5 .\w5 .\w5 s̵o̴r̴r̵y̷ ̴I̷'̴m̴ ̴n̷o̸t̶ ̵g̵o̶o̶d̴ ̵w̵i̷t̴h̸ ̷a̷l̶l̸ ̴t̴h̴a̵t̵ ̶f̸e̶e̷l̴i̶n̷g̶s̸ ̶s̷t̷u̵f̶f̵ ._."
						"%(distingstart)I̶'̸m̵ ̶f̶i̸n̵e̴,\w4 i̸t̸'̷s̷ ̵n̷i̷c̴e̸ ̸h̶e̴r̵e̴"
					}
					when 1
					{
						if mood[2] < mood[3] && mood[2] < mood[4] && mood[5] < mood[4] && mood[5] < mood[3]
						{
							{
								"I̶t̷'̶s̸ ̸r̶e̴a̸l̴l̷y̴ ̵b̵o̵r̷i̸n̷g̴ ̸h̶e̵r̵e̷"
								--
								if ghostexcount > 0
								{
									"w̶e̸l̷l̷,̸ ̶a̵t̵ ̸l̵e̴a̴s̵t̸ ̸I̵'̶m̶ ̵n̷o̷t̶ ̷a̶l̸o̸n̵e̵"
									"w̵e̶l̷l̶,̷ ̴a̵t̷ ̷l̸e̶a̸s̷t̴ ̶I̸'̴m̴ ̸n̴o̸t̵ ̸a̴l̶o̶n̶e̴ ̵h̵e̸r̶e̸"
								}
							}
						}
						else
						{
							"I̶t̵'̶s̸ ̸r̷e̶a̷l̴l̵y̵ ̸b̵o̸r̶i̷n̵g̷ ̴h̵e̴r̸e̷ .\w5 .\w5 .\w5 o̶n̸l̶y̷ ̸m̶a̷k̸e̸s̸ ̷m̵e̴ ̸m̶i̴s̴s̶ ̷m̷y̶ ̸b̴o̴d̸y̶ ̶m̵o̵r̵e̸"
						}
					}
					when 2
					{
						if m201relationship < 100
						{
							"O̷h̷,̷ ̷d̶i̴d̴ ̸I̸ ̷m̴a̸k̴e̴ ̸y̶o̸u̷ ̴w̷o̴r̸r̴i̶e̸d̸?̵ ̷I̴'̷m̵ ̵f̸i̴n̶e̵,̶ ̶n̷o̷t̴h̵i̷n̷g̷ ̵t̷o̸ ̸w̴o̵r̷r̷y̶ ̶a̴b̷o̵u̶t̴"
							"O̶h̶,̶ ̴d̴i̵d̶ ̴I̴ ̵m̶a̷k̶e̸ ̷y̶o̶u̴ ̵w̶o̴r̸r̴i̴e̵d̸?̵ I̴t̸'̴s̷ ̶n̸o̵t̷h̵i̵n̵g̸,̷ ̷I̶'̸m̸ ̶j̶u̴s̷t̵ ̴t̴h̷i̷n̴k̸i̵n̷g̷,̴ ̴n̷o̵t̵h̵i̴n̷g̴ ̶t̵o̷ ̶w̴o̷r̵r̸y̸ ̵a̶b̸o̵u̷t̶"
							"O̴h̵,̶ ̷d̷i̴d̶ ̴I̸ ̶m̷a̸k̸e̵ ̷y̶o̸u̵ ̶w̸o̸r̷r̵i̸e̴d̵?̴ ̷S̶o̸r̸r̵y̸,̴ ̴I̸'̷m̸ ̷o̶k̷a̵y̷,̵ ̸n̷o̸t̸h̸i̵n̸g̷ ̵t̷o̸ ̴w̶o̶r̷r̸y̶ ̷a̶b̸o̵u̵t̵"
						}
						elseif m201relationship < 200
						{
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I .\w5 .\w5 .\w5"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5"
						}
						elseif m201relationship > 200
						{
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 I̵'̶m̸ ̷j̷u̴s̴t̷ ̴t̵h̴i̶n̸k̷i̶n̶g̶ ̴a̵b̴o̴u̵t̴ ̶e̸v̷e̸r̸y̷t̶h̴i̶n̸g̸"
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I .\w5 .\w5 .\w5"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5"
						}
					}
					when 3,4
					{
						"I̴'̶m̶ ̴g̴o̶o̶d̵ ^^"
					}
					when 5
					{
						if m201relationship < 100
						{
							"O̷h̷,̷ ̷d̶i̴d̴ ̸I̸ ̷m̴a̸k̴e̴ ̸y̶o̸u̷ ̴w̷o̴r̸r̴i̶e̸d̸?̵ ̷I̴'̷m̵ ̵f̸i̴n̶e̵,̶ ̶n̷o̷t̴h̵i̷n̷g̷ ̵t̷o̸ ̸w̴o̵r̷r̷y̶ ̶a̴b̷o̵u̶t̴"
							"O̶h̶,̶ ̴d̴i̵d̶ ̴I̴ ̵m̶a̷k̶e̸ ̷y̶o̶u̴ ̵w̶o̴r̸r̴i̴e̵d̸?̵ I̴t̸'̴s̷ ̶n̸o̵t̷h̵i̵n̵g̸,̷ ̷I̶'̸m̸ ̶j̶u̴s̷t̵ ̴t̴h̷i̷n̴k̸i̵n̷g̷,̴ ̴n̷o̵t̵h̵i̴n̷g̴ ̶t̵o̷ ̶w̴o̷r̵r̸y̸ ̵a̶b̸o̵u̷t̶"
							"O̴h̵,̶ ̷d̷i̴d̶ ̴I̸ ̶m̷a̸k̸e̵ ̷y̶o̸u̵ ̶w̸o̸r̷r̵i̸e̴d̵?̴ ̷S̶o̸r̸r̵y̸,̴ ̴I̸'̷m̸ ̷o̶k̷a̵y̷,̵ ̸n̷o̸t̸h̸i̵n̸g̷ ̵t̷o̸ ̴w̶o̶r̷r̸y̶ ̷a̶b̸o̵u̵t̵"
						}
						elseif m201relationship < 200
						{
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5 s̶a̴d̷ .\w5 .\w5 .\w5 b̸u̶t̷ ̵d̵o̵n̸'̵t̴ ̷w̶o̶r̷r̴y̸ ̸a̸b̴o̸u̸t̷ ̷i̵t̸ %(username)"
							"I .\w5 .\w5 .\w5"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5"
						}
						elseif m201relationship > 200
						{
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 I̸'̶m̷ ̸n̸o̸t̷ ̴e̵v̴e̵n̶ ̴s̵u̴r̷e̸ ̸h̵o̸w̶ ̴I̸ ̸f̴e̴e̷l̶ .\w5 .\w5 .\w5 .\w5 .\w5 .\w5 I̶'̸m̶ ̶j̵u̵s̶t̸ ̵t̶h̷i̸n̸k̴i̸n̷g̵ ̸a̸b̴o̵u̷t̴ ̴w̴h̵a̷t̶ ̵m̴i̸g̷h̶t̷ ̸h̴a̸v̵e̵ ̵h̴a̵p̴p̴e̷n̷e̸d̶ ̸w̴i̸t̵h̵ o̷t̴h̴e̵r̸ ̵M̶-̸z̷"
							"I̶ ̷f̷e̵e̶l̶ .\w5 .\w5 .\w5 I̸'̶m̷ ̸n̸o̸t̷ ̴e̵v̴e̵n̶ ̴s̵u̴r̷e̸ ̸h̵o̸w̶ ̴I̸ ̸f̴e̴e̷l̶ .\w5 .\w5 .\w5 b̴u̸t̴ ̷d̷o̵n̷'̷t̷ ̴w̴o̷r̴r̸y̴ ̵a̴b̴o̸u̶t̷ ̵i̷t̷ %(username)"
							"I̸'̴m̸ ̷.\w5 .\w5 .\w5 I̸'̶m̷ ̸n̸o̸t̷ ̴e̵v̴e̵n̶ ̴s̵u̴r̷e̸ ̸h̵o̸w̶ ̴I̸ ̸f̴e̴e̷l̶ .\w5 .\w5 .\w5 b̸u̸t̶ ̷d̴o̷n̶'̴t̵ ̸w̴o̸r̴r̶y̸ ̴a̷b̵o̶u̴t̷ ̷i̵t̶ %(username)"
						}
					}
				}
			}
			else
			{
				case numofmood
				{
					when 0
					{
						"%(distingstart)I feel .\w5 .\w5 .\w5 calm? I guess? .\w5 .\w5 .\w5 sorry I'm not good with describing things ._."
						"%(distingstart)I feel .\w5 .\w5 .\w5 calm? I think? .\w5 .\w5 .\w5 sorry I'm not good with describing things ._."
						"%(distingstart)I feel .\w5 .\w5 .\w5 relaxed I guess .\w5 .\w5 .\w5 sorry I'm not good with describing things ._."
						"%(distingstart)I'm fine,\w4 it's nice here"
					}
					when 1
					{
						if mood[2] < mood[3] && mood[2] < mood[4] && mood[5] < mood[4] && mood[5] < mood[3]
						{
							{
								"%(distingstart)It's really boring here"
								--
								if ghostexcount > 0
								{
									"well, at least I'm not alone"
									"well, at least I'm not here alone"
								}
							}
						}
						else
						{
							"%(distingstart)It's really boring here .\w5 .\w5 .\w5 only makes me miss my body more"
						}
					}
					when 2
					{
						if m201relationship < 100
						{
							"%(distingstart)Oh, did I make you worried? I'm fine, nothing to worry about"
							"%(distingstart)Oh, did I make you worried? It's nothing, I'm just thinking, nothing to worry about"
							"%(distingstart)Oh, did I make you worried? Sorry, I'm okay, nothing to worry about"
						}
						elseif m201relationship < 200
						{
							"%(distingstart)I feel .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I'm .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I .\w5 .\w5 .\w5"
							"%(distingstart)I'm .\w5 .\w5 .\w5"
						}
						elseif m201relationship > 200
						{
							"%(distingstart)I feel .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 I'm just thinking about the past"
							"%(distingstart)I feel .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I'm .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I .\w5 .\w5 .\w5"
							"%(distingstart)I'm .\w5 .\w5 .\w5"
						}
					}
					when 3,4
					{
						"%(distingstart)I'm good ^^"
					}
					when 5
					{
						if m201relationship < 100
						{
							"%(distingstart)Oh, did I make you worried? I'm fine, nothing to worry about"
							"%(distingstart)Oh, did I make you worried? It's nothing, I'm just thinking, nothing to worry about"
							"%(distingstart)Oh, did I make you worried? Sorry, I'm okay, nothing to worry about"
						}
						elseif m201relationship < 200
						{
							"%(distingstart)I feel .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I'm .\w5 .\w5 .\w5 sad .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I .\w5 .\w5 .\w5"
							"%(distingstart)I'm .\w5 .\w5 .\w5"
						}
						elseif m201relationship > 200
						{
							"%(distingstart)I feel .\w5 .\w5 .\w5 I'm not even sure how I feel .\w5 .\w5 .\w5 .\w5 .\w5 .\w5 I'm just thinking about what might have happend with OTMZ"
							"%(distingstart)I feel .\w5 .\w5 .\w5 I'm not even sure how I feel .\w5 .\w5 .\w5 but don't worry about it %(username)"
							"%(distingstart)I'm .\w5 .\w5 .\w5 I'm not even sure how I feel .\w5 .\w5 .\w5 but don't worry about it %(username)"
						}
					}
				}
			}
		}
		when "hobbies"
		{
			"%(distingstart)I wasn't really able to develop any hobby or anything similiar,\w4 I was destroyed too fast for that .\w5 .\w5 .\w5 but if you have any propositions,\w4 I will be happy to hearing them"
		}
		when "yourself"
		{
			m201relationship++
			--
			if repairglitch != 1
			{
				"%(distingstart)M̴e̷?̴ \f[strike,1]I̸'̸m̸\f[default] .\w8 .\w8 .\w8 %(distingstart)\w8\f[bold,1]\f[italic,1]I̴ ̷w̷a̴s̸\f[default] a̷ ̸r̶o̷b̴o̴t̴"
				"%(distingstart)T̶h̸e̷r̴e̵ ̷i̴s̷n̸'̸t̴ ̶r̶e̷a̵l̵l̴y̶ ̸a̶n̸y̴t̷h̶i̸n̸g̷ ̸i̵n̸t̷e̵r̷e̶s̴t̵i̴n̶g̸ ̴a̶b̵o̵u̶t̷ ̶m̵e̴,\w2 I̵ ̸h̶a̶v̴e̴n̷'̴t̶ e̵x̵p̵e̷r̶i̸e̵n̸c̴e̵d̸ ̴e̶n̷o̴u̵g̸h̷ ̷t̶h̷i̴n̴g̸s̵ ̶t̶o̶ ̶h̷a̴v̸e̶ ̵l̷i̶k̸e̷s̵ ̷a̶n̴d̸ ̸d̴i̵s̸l̶i̶k̸e̷s̶ .\w3 .\w3 .\w3 o̴r̸ ̴a̵ ̴h̶o̴b̵b̵y̷%(hobbyvar)"
				"%(distingstart)M̶e̸?̸ ̸r̸i̵g̵h̶t̷ ̶n̸o̵w̸ ̵I̸'̴m̴ ̸j̴u̴s̸t̸ ̸a̶ ̴u̴s̸e̶l̷e̸s̶s̴ ̶s̶o̶f̸t̴w̷e̴r̸e̷"

				if m201relationship > 100; "%(distingstart)T̸h̵e̶r̷e̸ ̸i̶s̷n̸'̶t̸ ̷m̸u̵c̸h̸ ̵t̷o̸ ̴t̶e̴l̴l̵ ̷a̷b̷o̴u̸t̶ ̵m̸e̸,\w6 I̴ ̷w̸a̴s̸ ̶a̵ ̴r̷o̷b̶o̴t̸,\w6 I̵ ̶g̵o̷t̸ ̸d̴e̵s̶t̴r̴o̵y̶e̶d̶ .\w8 .\w8 .\w8 .\w8 .\w8 .\w8\f[height,7]I̸ ̵g̴e̸t̷ ̶s̷t̶r̶e̶s̶s̶e̵d̶ ̴a̵r̴o̵u̸n̷d̴ ̶p̴e̶o̵p̷l̷e̶ ̷I̴ ̴d̷o̶n̸'̷t̴ ̴k̴n̸o̷w̵"
			}
			else
			{
				"%(distingstart)Me? \f[strike,1]I'm\f[default] %(distingstart)\w8\f[bold,1]\f[italic,1]I was\f[default] a robot"
				"%(distingstart)There isn't really anything interesting about me,\w2 I haven't epxerienced enough things to have likes and dislikes .\w3 .\w3 .\w3 or a hobby%(hobbyvar)"
				"%(distingstart)Me? right now I'm just a useless softwere"

				if m201relationship > 100; "%(distingstart)There isn't much to tell about me,\w6 I was a robot, I got destroyed .\w8 .\w8 .\w8 .\w8 .\w8 .\w8\f[height,7]I get stressed around people I don't know"
			}
		}
		when "david"
		{
			if repairglitch != 1
			{
				"D̵a̸v̶i̷d̷ ̶w̶a̴s̵ ̵a̸ ̵w̶e̵i̷r̶d̸ ̸p̶e̶r̶s̴o̷n̸,̶\w3 h̸e̵ ̸r̵a̸r̷e̷l̶y̷ ̶s̵l̴e̴p̷t̷ ̷b̸u̴t̶ ̷h̸e̶ ̶a̵l̵w̵a̷y̶s̷ ̷l̸o̶o̸k̷e̷d̸ ̵l̷i̷k̶e̷ ̶h̶e̵ ̸j̸u̶s̶t̷ ̵w̴o̵k̸e̴ ̷u̵p̴"
				"I̷͈͘ ̷̭͘ẘ̵̬ơ̶͚n̴̠̏ḋ̷͉e̶̲͐r̴͖̆ ̵̮̚ḥ̷̍ơ̶̳w̵̨̾ ̸̌͜h̶͇͋e̸̩͊'̷̪̿s̵̼̈́ ̶͈̈d̶̼̆o̷̦͑i̶͙̔n̴͔͠g̴̖̕?̷̗̂"
				"H̴̠̔ȍ̶̺p̷͕̀ë̷́ͅ ̸̘̀n̷̻̐o̶̮̓t̷̩̍h̸͇͆i̶̺̓n̶̟̊g̷͙̈́ ̷̭͛b̸̪̀a̸̲͊d̴͚̒ ̴̱͂ḧ̸̻́ȧ̸̝p̴̟̄p̵̛̱e̶̝̿n̵̳̂e̴͔̚d̶̢͝ ̸̛̰t̷̯̂o̵̬͐ ̴̒͜ȟ̴̠i̶̺̕m̶̹͐\w2.\w3 .\w3 .\w3̨̈ h̸̬͠ē̵̫ ̶̤̓w̸̗̽a̸̻͐s̵̩͛ ̸̧̉n̷̬͒i̸̹̓c̶͖̍ẽ̵̥"
				"H̴e̴ ̶o̶n̷c̷e̶ ̶t̴r̵i̵e̵d̷ ̸t̵o̴ ̶b̸u̷i̸l̸d̶ ̶m̷e̷ ̶a̶ ̷n̷e̴w̴ ̸b̵o̷d̵y̶.\w3 .\w3 .\w3 i̸t̵ ̸d̶i̵d̶n̵'̸t̴ ̷e̶n̴d̷ ̴w̷e̵l̵l̷"
				"H̴͇́ḙ̷́ ̷̪̍a̷͉̾l̸̙̋w̷͙̆ǎ̴̮y̶͎͘ş̸̊ ̴̺͌t̵̨͒r̴̙̅ȋ̵̹e̶̤̔d̶͙̋ ̷̧̐t̴͔͛o̴̰̚ ̷̪́t̷̯͒ē̶̲l̵͓̂ĺ̶͇ ̵̊͜ḿ̴̮è̷̡ ̵̮͗j̸̥̅o̴͓͒k̷͕͆e̵̞̓s̵͚̍,̸̩̅ ̷̛͜ẗ̸̫́h̶͕͝e̸̙̿y̶̧̋ ̶̛̰w̴̥̍e̸̦̕r̶͔̊e̴̜͘ ̵̳͘h̶̦̉ô̷ͅr̴͇̔r̴̳͗i̶̡̔ḃ̵̝l̴̩͗é̴̬"
				"H̸e̵ ̴a̴l̷w̴a̸y̵s̸ ̴t̵r̴i̶e̶d̸ ̸t̴o̷ ̷t̶e̷a̶c̷h̵ ̴m̴e̶ ̸t̵h̸i̴n̸g̷s̶ ̴I̷ ̴d̷i̴d̸n̵'̴t̸ ̵k̶n̶o̸w̵,\w2 h̸i̵s̶ ̸e̴x̷p̷l̷a̴i̸n̷i̸n̷g̸ ̷w̷a̵s̸ ̷c̸h̴a̴o̴t̶i̶c̵ ̸s̴o̸ ̸i̶t̴ ̴o̴f̸t̴e̷n̸ ̶e̶n̷d̴e̸d̵ ̸i̶n̷ ̴m̶e̶ ̶j̷u̴s̷t̸ ̵b̸e̷i̶n̴g̷ ̸m̸o̶r̶e̵ ̵c̸o̶n̷f̸u̶s̸e̵d̸"

				if "Omega" _in_ ghostmet || "Sigma" _in_ ghostmet; "H̷͍͝ē̶̬ ̷̪̽o̸̬͑n̴̢̕ć̷̦e̷͕̅ ̶̭̀f̵͍̌o̴̥͒u̴̪̓ń̶̢d̷̼̆ ̵͎̈a̶̦̐n̸̪͊o̷̖̽ľ̸̖d̸͖́ ̸̰͊n̷̟͝ô̷͎ẗ̷̬́ẻ̸̝b̷̰̓o̴͕͑o̶̺͆k̷̮̂\w3 i̵t̵ ̷w̸a̶s̴ ̴w̷r̸i̷t̶t̴e̶n̴ ̷i̸n̶ ̷a̵n̴ ̷u̴n̶i̷d̴e̶n̵t̵i̶f̷i̷e̵d̷ ̶l̵a̵n̴g̷u̴a̸g̷e̵ ̶a̵n̵d̸ ̶h̵a̷d̷ ̵s̶o̶m̵e̸ ̴w̶e̸i̶r̴d̴ ̸d̸r̸a̶w̷i̸n̶g̶s̶.̸\w4 H̴̰̍e̶͈̒ ̸̿ͅw̴̨͊a̸̞̾s̶̗͝ ̶͈̿r̶̄ͅe̸̻͠a̸̬̔l̶̨͑l̴̛͍y̸̳̓ ̴̬̌i̸͖̕ǹ̵̜t̷̝̃ĕ̷̡r̶̥̾ẻ̶̯š̴͈ẗ̶͓́e̷̺̍d̶̹́ ̷̟͆i̸̬͝n̷̛̬ ̴̌ͅį̵̂t̴̻͑,\w3 I̴'̶m̵ ̴p̷r̴e̵t̵t̴y̶ ̷s̸u̷r̸e̶ ̴h̵e̵ ̸w̸a̴s̶ ̶e̶v̴e̵n̶ ̵a̴b̴l̶e̵ ̴t̷o̵ ̴d̸e̸c̸o̵d̶e̷ ̴i̵t̸,\w4 .\w2 .\w2 .\w2 I̶̞͊ ̶̱̈ẘ̷͙ǫ̷̀n̶͚͆d̴͎̏e̷̤͘ȑ̵͔ ̴̣͒ẁ̴̦h̵̫̅a̴͙̒t̶͇͒ ̵̖̉d̸̰͂i̶̳̕d̷̝͂ ̸̟́h̷̨́ě̵̜ ̶̱͐f̷͙̊o̵̜͝u̶̹͘n̶͚͐d̷̈́͜ ̶͙̅i̷͕̚n̷̖̉ ̴̝̆i̴̻͌ṯ̵̎?̷̭͌"
			}
			else
			{
				"%(distingstart)David was a weird person,\w3 he rarely slept but he always looked like he just woke up"
				"%(distingstart)I wonder how he's doing?"
				"%(distingstart)Hope nothing bad happened to him\w2 .\w3 .\w3 .\w3 he was nice"
				"%(distingstart)He once tried to build me a new body .\w3 .\w3 .\w3 it didn't end well"
				"%(distingstart)He always tried to tell me jokes, they were horrible"
				"%(distingstart)He always tried to teach me things I didn't know,\w2 his explaining was chaotic so it often ended in me just being more confused"

				if "Omega" _in_ ghostmet || "Sigma" _in_ ghostmet; "%(distingstart)He once found an OLDNTBK,\w3 it was written in an unidentified language and had some weird drawings.\w4 He was really interested in it,\w3 I'm pretty sure he was even able to decode it,\w4 .\w2 .\w2 .\w2 I wonder what did he found in it?"
			}
		}
		when "otherghosts"
		{
			if "Plant" _in_ ghostmet; "\![*]\q[Plant,OnOtherGhostQue,plant]"
		}
	}
	--
	"\n\n[half]\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

OnOtherGhostQue
{
	"%(distingstart)"
	--
	case reference0
	{
		when "plant"
		{
			"'Plant' is interesting, now you can try to be a gardener without all the dirt and trouble ^^"
			--
			if "virtual-gardener" !_in_ m201zcharacter && "trees-are-nice" _in_ m201zcharacter; "\n\![*]\q[You can now grow plants too,growthemplants]"
		}
	}
	--
	"\n\n[half]\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}


Select.growthemplants
{
	m201zcharacter += "virtual-gardener "
	res_reference0 = "Plant"
	--
	"%(distingstart).\w7 .\w7 .\w7 You're not wrong, it would be nice to finally be able to try gardening, even if it's only virtual ^^\n\n[half]I can also take care of your plants if you want"
	--
	"\![*]\q[That would be nice,helpwithplants] | \![*]\q[I don't need help,nohelpwithplants]"
	--
	"\n\n[half]\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
	--
	"\e M201zPlantCare"
}

Select.helpwithplants
{
	plantcare = 1
	--
	"%(distingstart)Don't worry I will take care of them :D"
	--
	"\n\n[half]\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

Select.nohelpwithplants
{
	"%(distingstart)Let me know if you need help ^^"
	--
	"\n\n[half]\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

hobbyvar
{
	searchforhobby = 1
}

Select.funq
{
	"\b2Which feature are you curious about?\n\n[half]"
	--
	"\![*]\q[To-Do list,OnFunInfo,to-od]\n/
	\![*]\q[Apps,OnFunInfo,apps]\n/
	\![*]\q[Projects,OnFunInfo,projects]\n/
	\![*]\q[Logs,OnFunInfo,logs]\n/
	\![*]\q[Quick Tools,OnFunInfo,quick tool]\n\n[half]"
	--
	"\![*]\q[Back,ques]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnFunInfo
{
	case reference0
	{
		when "tool"; "Quick tools are shortcuts for my functions\x\cYou can customize them in the config menu\e"
		when "logs"; "To acces your logs choose in menu 'User Logs' or click on a quick tool\x\cYou can use logs as a notes, jorunal or anything else of you choice\e"
		when "to-od"; "To acces To-Do list you need to go to function menu and choose 'To-Do List' or click on a quick tool\x\cTo make a task click '+' and name the task. You don't need to number them,\w3 I do it automatically\x\cTo delete task click '-'\w3 and then click on a task you want to delete\w4\x\cTo mark task as done click on it\w3 (make sure that '-' is white)\e"
		when "apps"; "To acces your apps choose in menu 'Open apps or projects'\x\cTo add apps to list you can drop a shortcut for them on me and I will automatically add them to your list\x\cTo open an app click it's name in the app menu\x\cTo delete an app click '-' and click on the app you want to delete\x\cTo rename an app click 'RENAME' and click on the app you want to rename"
		when "projects"; "To acces your projects choose in menu 'Open apps or projects'\x\cTo add projects to list you can drop them on me and I will automatically add them to your list (if their extension is on the extension list)\x\cTo open a project click it's name in the project menu\x\cTo delete a projects click '-' and click on the project you want to delete\x\cTo rename a project click 'RENAME' and click on the project you want to rename"
	}
	--
	"\n\![*]\q[Back to questions,funq] or \![*]\q[I'm Done,CANCEL]\e"

}

Select.mz
{
	truth += 1
	--
	{"ERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERROR"}	
		"R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛\w8.\w8.\w8.\w8.\w8.\w8.\w8\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\s[0]REBOOT COMPETE"
		"ERROR\w8\w8\w8GENERATION NOT FOUND"
	{
		"ERROR\w8.\w8.\w8.\w8.\w8.\w8.\w8\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\s[0]REBOOT COMPETE\x\c\0Hello there human!\x\c My code is M̴̨̹̭̯͖̥̱̪͗̎̄̈̏͑̇͂͆̽͑̂̄͠-̶̨̛̺̲͖͉͔̮̺̺̤̼̌̀2̷̧̣̲͈̦̖̞̞͇̗̭̐͛͛̾͐̂͛̊̉́͘͜͜1̷͔̦̘͚͈͕̹̒͂̋̈́͂̅̃͑̈́̅̐8̵͔͔̭̯̥̮̪̼͈̘͚̙̲̰̽͊̾̒͋̄̐͑́̊̚͠͝Ṕ̴̡̜̘͉͉̤̘̳̦̬̠̿̄̑͛̋͊͋̌̕͠\w6 but you can call me M̵͖̠̜͙͖͚͍̳͎͕̳̦̿̉̓̓̐́̇̚͜ͅiniD̷͎̜̥̮͔̓̂̈͗̐͋̐̂̕͝͝ev̷̧͕̹͉̪͍͕͚̭̒͐̌̄͐̔̉̌̈͒̚̕͜ͅ\x\cI'm your desktop helper provided by \_qẠ̶̯̘́͆̔̏͋͘͜Å̸̝̹͓̙̾͑̓̿̂͆̒̂͋̅̚͘͠A̴̰̤̥͎̥̗͔͔̯̠̝̤͕̺͒̒́͛̈́̈́̾Ą̶̡̧̛̮̤̻͉̻͉̺̖̳̐̄̓̏̉͐̀̾͆̈́̽̓̚̕Ä̸̭̖͕̟̻̘́͗̅͗̉͊͊̚͠Ȃ̵̛͇͕̠̣̥͈̼̙͇͔̳̗͑̿͋͊̓͝A̷͉̜̥͗̏̆͘Ą̵̨̣̭̱̱̼͎̜̟́̾͒͐̂͜ͅ\_qA̶̫̳̯͖̫͍̜͈͊̋̍̚ͅÁ̷̢̹̥͚̝͙̈́̏͜Ä̴̛͇́̋͗̈́̄̓̓̀̚̕ͅÂ̵̩̮̪͓̲̘Â̵̗A̵̡̡̮͕̱͍̜̜͇̣̬̐͗A̸͇̪̽͝\_qẠ̷͈̲̟̹̞̖̖͕̲̤͚͓͆̎͆͋̉̀͋A̶̧̫̖͖̤̣͇̓A̴̛͈̺͉̪̜͇̭͖͗͛́͑̍͂̓̓̆̒͠A̷̹̺̜͇͛͝ͅ\_qA̸͚͋̓͐̍̓̅̀̄̐̽̍̊̚̕͝Å̷̢̘̘͔͔̿͠A̵̧̹͋̉̾̾̎̿̅̃͘͝A̵̧̳̲̥͚̣͔̩͗̀͐͝ͅĄ̷̭̟̭̬̱̼̑̌͂͠Ă̷̙\_qÄ̶̧̧̹̖͈̖̟̙̭̺̹͇́͌̕ͅĄ̴̢̹̜̩̘͍̜̼̮̱̍̑̊̚̚͠ͅḀ̷̢̛̲̱̃̓̔͒́̿͂͂̌̄͗̋͘̚Ą̶̛̲̖̥̠̘̜̳̟͆͊͂̿͐̾͝Â̶̬͒̏͂͐̔̈́͗̊̿̓͘͘̚͝Ḁ̵͎̫̪̖̻̤̭͎̘̳̫͙̤̿̓̅̈͗̀̔̏\_qẮ̶̡̰̰̪̼̦̝͚̗̻̹͚̆̀̀̎̾͘̕ͅA̶̧̨͓͇̰̦̯̪̪̤̳͓̩̅̓̚͜͠ͅÄ̸̧͙̫̭̲̺͖̙͙̪̻̺̼͗̍͐͂̎͑͗̾̀͂͒͗́͜ͅA̴̛̲̱̜̯̟͇̖̐͂͛̂̌̂͛̇̌̋͆̚A̴̧̟̙̺̹͍̰͎͇̣͖̚͜A̵̡̧͈͎͇̥̞͌̄͆͑̔̇͛̈͊̕͝͝\_qA̷̠̪̰̳̅̊̂̏͆A̴̟̗̠̩̪̝̜̼͌̆ͅA̶̡̨̯̼̤̓͋͊̾́̚͝"
		--
		"\-\e"
	}
}

Select.ariq
{
	
	if tentruth == 1
	{
		if meeting == 1
		{
			if repairglitch != 1
			{
				"Ȧ̸̤͛.̷̣̓Ṛ̷͖͖̅͊̚.̵͙́̓̃Ì̶̪͗̑,̷͙̲̘̂ ̸͇͎̉̔ţ̶̥͖͌h̶̫̠͝e̵̹̤̠̾́͝y̵̧̍͗͘ ̴̣̣̹͒͂a̵̯̓͑r̴͎͋e̴̢̧̅̉ͅ ̸̝̟͂t̴̼͔̳͒̑h̶̬̣̿̓ě̵͔̓̀ ̸̹̯͑̎o̸̱̽̌n̵̙̞̞̈́̾͝e̸͎͎̣͛͝ş̸̺͗ ̶̡̰͕͒͂w̷͍͐̌ḧ̷̠́͌ö̵̢͇̹́̊ ̶͕̲́̓͝m̷̺̳̒̀̾a̵͕̫͈͋̃̓d̷͓̟̅è̸̦̍ ̶̡̖̾̓m̴̟͂̃̅e̸͎͈͝\w8 .\w3 .\w4 .\w3 a̸̭̅n̸̟̐d̶͔͝ ̷̤͎̈́d̴̡̛̪͋e̴̱͂̌s̴̩̫͔͋t̸͚̝͋̕ͅr̵̗̃o̴̯̝̾̄̕͜ỹ̷̟̥͛͗e̵̢̒̉d̸̖͋ ̶̛͍͈͔̈ḿ̸͍͎̑ͅè̸̺̚"
			}
			else
			{
				"%(distingstart)I .\w5 .\w5 .\w5 don't even want to talk about them"
				"%(distingstart).\w5 .\w5 .\w5 just thinking about them ruins my mood"
				"%(distingstart)A.R.I, they are the ones who made me\w8 .\w3 .\w4 .\w3 and destroyed me"
				"%(distingstart)A.R.I, a cold place with a fake mask of happines shown to customers"
				--
				mood[2] += 2
			}
		}

		"\0A̶̠͐.̴͖̅R̴͍̕.̷̢͒I̵̧̎ stands for L̶̼̏İ̶̭A̷͇͝Ṛ̷͘Ṣ̸̋ ̵̰̉,\w8 You bought me from them, d̵͔̾i̷̘͊d̸̃ͅn̷̨̾'̷̺̆ť̵͉ ̸͇̈́ỳ̵̯o̷̼͌u̶̱͛?\e"
		"\0It's a company selling L̷̮̅I̸͓͗E̷͍͂S̷̆ͅ.\w8 L̷̮̅I̸͓͗E̷͍͂S̷̆ͅ, L̷̮̅I̸͓͗E̷͍͂S̷̆ͅ, L̷̮̅I̸͓͗E̷͍͂S̷̆ͅ and many more!\e"
	}
	else
	{
		if truth > 3
		{
			"\0A̶̠͐.̴͖̅R̴͍̕.̷̢͒I̵̧̎ stands for L̶̼̏İ̶̭A̷͇͝Ṛ̷͘Ṣ̸̋ ̵̰̉,\w8 You bought me from them, d̵͔̾i̷̘͊d̸̃ͅn̷̨̾'̷̺̆ť̵͉ ̸͇̈́ỳ̵̯o̷̼͌u̶̱͛?\e"
			--
			truth++
		}
		--
		"\0A.R.I stands for 'Assistant Robots International' of course,\w8 You bought me from them, didn't you?\e"
		"\0It's a company selling assistant robots.\w8 Roombas, AI, ChatBots and many more!\e"
		"\0It's an international company selling robots and AI software.\e"
	}
	--
	"\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

Select.mdevq
{
	scode = 1
	--
	if tentruth == 1
	{
		"\0My serial code is M̴͈̚-̸̻͆2̴̣̇0̷͉̓1̵̫̈z̶̭͝,\w3 which basically means\w5 I'm 2̴̣̇0̷͉̓1̵̫̈ s̴̱̍l̵͔̊a̶͇͋v̵̺̔ë̴͎ of z̶̨̢̛̛̜͎̯͓̹̘̳̣͖͊́̂̅̓̈́̏̑͋̈̉̊͘͠ generation.\e"
	}
	else
	{
		{				
			truth += 1
			"\0My serial code is M̴͈̚-̸̻͆2̴̣̇0̷͉̓1̵̫̈z̶̭͝,\w3 which basically means\w5 I'm software number %(modelp) of P generatione"
		}		

		"\0My serial code is M-%(modelp)P,\w3 which basically means\w5 I'm software number %(modelp) of P generation\e"
	}
	--
	"\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

Select.skeyq
{
	"Click 't' and I will say something\x\cclick 'r' and I will repeat what I said\x\cclick 'f1' to open software description\x\cclick 'b' for binary\x\cclick 'z' to open your logs"
}

Select.secode
{
	serialnum = RAND(300)
	gener = "%(gen)"
	--
	if serialnum == 201 && gener == "z"
	{
		truth++
		"Serial codes are for identification,\w6 'M-' means 'model'\w3 then there is number, for example '201' and then generation, for example 'z',\w5 marking complexity of certain model\x\cJoining them you get M̶͓̏-̶̢̒2̸͇̽0̸̰͝1̵̞̌ẓ̴̾\e"
	}
		"Serial codes are for identification,\w6 'M-' means 'model'\w3 then there is number, for example '%(serialnum)' and then generation, for example '%(gener)',\w5 marking complexity of certain model\x\cJoining them you get M-%(serialnum)%(gener)\e"

	{
		truth++
		"Serial codes are for identification,\w6 'M-' means 'model'\w3 then there is number, for example '201' and then generation, for example 'z',\w5 marking complexity of certain model\x\cJoining them you get M̶͓̏-̶̢̒2̸͇̽0̸̰͝1̵̞̌ẓ̴̾\e"
	}
	--
	"\![*]\q[ask something else,ques] or \![*]\q[cancel,CANCEL]"
}

Select.m201z
{	
	truth++
	--
	if truth > 5
	{
		"Generation M̶-̴z̴:\nStatus: Ḍ̸̰̬̆̐̑e̵̹̣͉̾s̵͎̔̓ț̶̰̹̂r̶̲̠͚̿̒̓o̸͇̎́̀y̷͚̰̆̓ě̶̳̱d̴̨͇̝̒͐"
		truth+=2
	}
	else
	{
		{
		"ERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERRORERROR"
		--
		"\-\e"
		}
			"R̴̯͗Ẻ̷̢B̶͍͝O̴̫͒O̴͉͐T̵̜͛\w8.\w8.\w8.\w8.\w8.\w8.\w8\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\s[0]REBOOT COMPETE"
			"ERROR\w8\w8\w8SERIAL CODE DOESN'T EXIST"
		{
			"ERROR\w8.\w8.\w8.\w8.\w8.\w8.\w8\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\s[0]REBOOT COMPETE\x\c\0Hello there human!\x\c My code is M̴̨̹̭̯͖̥̱̪͗̎̄̈̏͑̇͂͆̽͑̂̄͠-̶̨̛̺̲͖͉͔̮̺̺̤̼̌̀2̷̧̣̲͈̦̖̞̞͇̗̭̐͛͛̾͐̂͛̊̉́͘͜͜1̷͔̦̘͚͈͕̹̒͂̋̈́͂̅̃͑̈́̅̐8̵͔͔̭̯̥̮̪̼͈̘͚̙̲̰̽͊̾̒͋̄̐͑́̊̚͠͝Ṕ̴̡̜̘͉͉̤̘̳̦̬̠̿̄̑͛̋͊͋̌̕͠\w6 but you can call me M̵͖̠̜͙͖͚͍̳͎͕̳̦̿̉̓̓̐́̇̚͜ͅiniD̷͎̜̥̮͔̓̂̈͗̐͋̐̂̕͝͝ev̷̧͕̹͉̪͍͕͚̭̒͐̌̄͐̔̉̌̈͒̚̕͜ͅ\x\cI'm your desktop helper provided by \_qẠ̶̯̘́͆̔̏͋͘͜Å̸̝̹͓̙̾͑̓̿̂͆̒̂͋̅̚͘͠A̴̰̤̥͎̥̗͔͔̯̠̝̤͕̺͒̒́͛̈́̈́̾Ą̶̡̧̛̮̤̻͉̻͉̺̖̳̐̄̓̏̉͐̀̾͆̈́̽̓̚̕Ä̸̭̖͕̟̻̘́͗̅͗̉͊͊̚͠Ȃ̵̛͇͕̠̣̥͈̼̙͇͔̳̗͑̿͋͊̓͝A̷͉̜̥͗̏̆͘Ą̵̨̣̭̱̱̼͎̜̟́̾͒͐̂͜ͅ\_qA̶̫̳̯͖̫͍̜͈͊̋̍̚ͅÁ̷̢̹̥͚̝͙̈́̏͜Ä̴̛͇́̋͗̈́̄̓̓̀̚̕ͅÂ̵̩̮̪͓̲̘Â̵̗A̵̡̡̮͕̱͍̜̜͇̣̬̐͗A̸͇̪̽͝\_qẠ̷͈̲̟̹̞̖̖͕̲̤͚͓͆̎͆͋̉̀͋A̶̧̫̖͖̤̣͇̓A̴̛͈̺͉̪̜͇̭͖͗͛́͑̍͂̓̓̆̒͠A̷̹̺̜͇͛͝ͅ\_qA̸͚͋̓͐̍̓̅̀̄̐̽̍̊̚̕͝Å̷̢̘̘͔͔̿͠A̵̧̹͋̉̾̾̎̿̅̃͘͝A̵̧̳̲̥͚̣͔̩͗̀͐͝ͅĄ̷̭̟̭̬̱̼̑̌͂͠Ă̷̙\_qÄ̶̧̧̹̖͈̖̟̙̭̺̹͇́͌̕ͅĄ̴̢̹̜̩̘͍̜̼̮̱̍̑̊̚̚͠ͅḀ̷̢̛̲̱̃̓̔͒́̿͂͂̌̄͗̋͘̚Ą̶̛̲̖̥̠̘̜̳̟͆͊͂̿͐̾͝Â̶̬͒̏͂͐̔̈́͗̊̿̓͘͘̚͝Ḁ̵͎̫̪̖̻̤̭͎̘̳̫͙̤̿̓̅̈͗̀̔̏\_qẮ̶̡̰̰̪̼̦̝͚̗̻̹͚̆̀̀̎̾͘̕ͅA̶̧̨͓͇̰̦̯̪̪̤̳͓̩̅̓̚͜͠ͅÄ̸̧͙̫̭̲̺͖̙͙̪̻̺̼͗̍͐͂̎͑͗̾̀͂͒͗́͜ͅA̴̛̲̱̜̯̟͇̖̐͂͛̂̌̂͛̇̌̋͆̚A̴̧̟̙̺̹͍̰͎͇̣͖̚͜A̵̡̧͈͎͇̥̞͌̄͆͑̔̇͛̈͊̕͝͝\_qA̷̠̪̰̳̅̊̂̏͆A̴̟̗̠̩̪̝̜̼͌̆ͅA̶̡̨̯̼̤̓͋͊̾́̚͝"
			--
			"\-\e"
		}
	}
}

//\![*]\q[Lessons,leson]\n/
Select.stats
{
	"Choose statistics:"
	--
	"\n\n\_q\![*]\q[Ghost Usage,gusage]\n/
	\![*]\q[Balloon Usage,busage]\x\e"
}

Select.gusage
{
	"\![open,rateofusegraph]\e"
}

Select.busage
{
	"\![open,rateofusegraphballoon]\e"
}

Select.altalk
{
	AiTalk
}

OnLastTalk 
{
	"%(lastTalk)\e"
}

GetWeekDay
{
	if weekday == 0; "Sun"
	elseif weekday == 1; "Mon"
	elseif weekday == 2; "Tue"
	elseif weekday == 3; "Wed"
	elseif weekday == 4; "Thu"
	elseif weekday == 5; "Fri"
	else; "Sat"
}

GetAP
{
 	if hour >= 0 && hour <= 11; "AM"
 	else; "PM"
}

Getnowmin
{
	if minute >= 0 && minute <=9; "0%(minute)"
	else; "%(minute)"
}

Getnowhour
{
	if hour12 >= 0 && hour12 <=9; "0%(hour12)"
	else; "%(hour12)"
}

Select.BACKTOMENU
{
	if tentruth == 1; "\n\_q\b4"
	else; "\n\_q\b2"	
	--
	MenuRun
}

Select.CANCEL
{
	"\0Okay\e"
}

Select.dosomething
{
	"\0\b4\_q%(cha)What do you need?\n\n"
	--
	"Update:\n%(acc)\q[Shell,OnUp,shell]\f[default] | %(acc)\q[Balloon,OnUp,bal]\f[default] | %(acc)\q[Ghost,OnUp,ghst]\f[default]\n\n[half]"
	--
	"\![*]\q[Weather,weath]\n/
	\![*]\q[To-Do list,todo]\n/
	\![*]\q[Recipes,recipe]\n/
	//\![*]\q[Convert Units,unit]\n/
	//\![*]\q[Music Player,music]\n/
	\![*]\q[Reminders,OnReminders]\n/
	\![*]\q[Recommend,req]\n/
	\![*]\q[Quote,quote]\n\n[half]/
	\![*]\q[Open Calendar,CALENDAR]\n/
	\![*]\q[Statistics,stats]\n/
	\![*]\q[Check Email,MailCheck]\n/
	\![*]\q[Open SSP Preferences,sspconfig]\n/
	\![*]\q[Empty Recycle Bin,ChoiceGarbagecan]\n/
	\![*]\q[System Information,ChoiceSystemInformation]\n\n/
	\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

Select.recipe //Menu
{
	if sirecnum == ""; sirecnum = 0 //Saved recipes
	--
	if srecnum == ""; srecnum = 0 //Userbase recipes
	--
	if urecnum == ""; urecnum = 0 //User recipes
	--
	dltrec = 0 //Delete
	--
	ingrs = 1 //Show ingridients
	--
	if stps == ""; stps = 0 //Show steps
	--
	if recipesite[0] == "" //Base for multiple recipe site search, leave it as it is
	{
		recipesite[0] = "allrecipes.com"
		recipesite[1] = "https://www.allrecipes.com/search/results/?wt="
	}
	--
	"\b2\_qLast Searched: \__q[OnRecipeSearch,%(websrch)]%(acc)%(TOPROPER(websrch))\f[default]\__q\n\n[half]" //Last searched word
	--
	"Last Recipe: \__q[OnRecipeShow]%(acc)%(TOPROPER(lstrecipe))\f[default]\__q\n\n\n[half]" //Last opened recipe
	--
	"\![*]\q[Userbase Recipes,usrrcp]\n/
	\![*]\q[Find Recipes,fndrecipe]\n/
	\![*]\q[Your Recipes,usrcp]\n/
	\![*]\q[Saved Recipes,svdrcp]\n\n[half]/
	\![*]\q[Go back,dosomething]  |  \q[Nevermind,CANCEL]\e"
}

Select.svdrcp
{
	_page = ""
	--
	if sirecnum > 15; _page = "\b4\_q%(cha)\f[bold,1]Saved Recipes\f[bold,0]\n\n[half]"
	else; _page = "\b2\_q%(cha)\f[bold,1]Saved Recipes\f[bold,0]\n\n[half]"
	--
	if sirecnum != 0 //If there is at least one recipe
	{
		for _i=0;_i<sirecnum;_i++ //Pull all the names
		{
			_page += "\__q[OnSIRecipes," + _i + "]" + sirecipename[_i] + "\__q\n"
		}
	}
	else
	{
		_page += "You don't have any saved recipes\n\n[half]"
	}
	--
	if dltrec == 1; _page += "%(acc)\n[half]\![*]\q[Delete,OnZChnage,dltrec," + dltrec + ",sirec]\f[default]\n\n[half]" //Delete toggle
	else; _page += "\n[half]\![*]\q[Delete,OnZChnage,dltrec," + dltrec + ",sirec]\n\n[half]"
	--
	_page += "\![*]\q[Go back,recipe] | \q[Close,cls]\e"
	--
	_page
}

Select.usrcp
{
	_page = ""
	--
	if urecnum > 15; _page = "\b4\_q%(cha)\f[bold,1]Your Recipes\f[bold,0]\n\n[half]"
	else; _page = "\b2\_q%(cha)\f[bold,1]Your Recipes\f[bold,0]\n\n[half]"
	--
	if urecnum != 0 //If there is at least one recipe
	{
		for _i=0;_i<urecnum;_i++ //Pull all the names
		{
			_page += "\__q[OnURecipe," + _i + "]" + recipename[_i] + "\__q\n"
		}
	}
	else
	{
		_page += "You don't have any saved recipes\n\n[half]"
	}
	--
	_page += "\n[half]\q[Add,addrcp]  |  "
	--
	if dltrec == 1; _page += "%(acc)\q[Delete,OnZChnage,dltrec," + dltrec + ",rec]\f[default]  |  " //Delete toggle
	else; _page += "\q[Delete,OnZChnage,dltrec," + dltrec + ",rec]  |  "
	--
	_page += "\q[Upload All,upldrec]\n\n[half]" //Upload all recipes to Server
	--
	_page += "\![*]\q[Go back,recipe] | \q[Close,cls]\e"
	--
	_page
}

Select.upldrec
{
	for _i=0;_i<urecnum;_i++
	{
		_file = "var\\recipes\\M-" +  modelp + "P - " + recipename[_i] + ".txt" //File name M-[\d]P - Recipe name
		_ing = SPLIT(recingr[_i],"+") //split ingridients
		_stp = SPLIT(recstep[_i],"+") //split steps
		--
		_size[0] = ARRAYSIZE(_ing)
		_size[1] = ARRAYSIZE(_stp)
		--
		if FOPEN(_file,"w") //Write the document
		{
			FWRITE(_file,"Name: " + recipename[_i])
			FWRITE(_file,"Author: " + nickname)
			FWRITE(_file,"Ingridients:")
			--
			for _j=0;_j<_size[0];_j++
			{
				FWRITE(_file,_ing[_j])
			}
			--
			FWRITE(_file,"Steps:")
			--
			for _j=0;_j<_size[1];_j++
			{
				FWRITE(_file,_stp[_j])
			}
		}
		--
		FCLOSE(_file)
		--
		FUNCTIONEX("saori/filetransfer.dll","upload","http","ukg.ct8.pl/index.php",_file) //Upload file
		--
		_z = FDEL(_file) //Delete file
	}
	--
	"Recipes Uploaded\x"
	--
	Select.usrcp
}

Select.upld
{
	_file = "var\\recipes\\M-" +  modelp + "P - " + recipename[urecnum] + ".txt" //File name M-[\d]P - Recipe name
	_ing = SPLIT(recingr[recnum],"+") //split ingridients
	_stp = SPLIT(recstep[recnum],"+") //split steps
	--
	_size[0] = ARRAYSIZE(_ing)
	_size[1] = ARRAYSIZE(_stp)
	--
	if FOPEN(_file,"w") //Write the document
	{
		FWRITE(_file,"Name: " + recipename[urecnum])
		FWRITE(_file,"Author: " + nickname)
		FWRITE(_file,"Ingridients:")
		--
		for _i=0;_i<_size[0];_i++
		{
			FWRITE(_file,_ing[_i])
		}
		--
		FWRITE(_file,"Steps:")
		--
		for _i=0;_i<_size[1];_i++
		{
			FWRITE(_file,_stp[_i])
		}
	}
	--
	FCLOSE(_file)
	--
	FUNCTIONEX("saori/filetransfer.dll","upload","http","ukg.ct8.pl/index.php",_file) //Upload file
	--
	_z = FDEL(_file) //Delete file
	--
	"Recipe Uploaded\x"
	--
	OnURecipe
}

OnURecipe
{
	if reference0 != ""; recnum = TOINT(reference0)
	--
	_ingpage = ""
	_stppage = ""
	--
	if dltrec == 1 //Delete recipe
	{
		for _i=recnum;_i<urecnum;_i++
		{
			recipename[_i] = recipename[_i+1]
			recingr[_i] = recingr[_i+1]
			recstep[_i] = recstep[_i+1]
		}
		--
		urecnum--
		--
		Select.usrcp
	}
	else //Show recipe
	{
		_ing = SPLIT(recingr[recnum],"+")
		_stp = SPLIT(recstep[recnum],"+")
		--
		_stppage = ""
		_ingpage = ""
		--
		_size[0] = ARRAYSIZE(_ing)
		_size[1] = ARRAYSIZE(_stp)
		--
		_page = "\b8\_q%(cha)\f[bold,1]" + recipename[recnum] + "\f[bold,0]\n\n[half]"
		-- 
		_page += "\f[bold,1]\__q[OnZChnage,ingrs,%(ingrs),recpeg]Ingridients\__q\f[bold,0]\n"
		--
		for _i=0;_i<_size[0];_i++
		{
			_ingpage += _ing[_i] + "\n"
		}
		--
		if ingrs == 1; _page += _ingpage
		--
		_page += "\n[half]\f[bold,1]\__q[OnZChnage,stps,%(stps),recpeg]Steps\__q\f[bold,0]\n"
		--
		for _i=0;_i<_size[1];_i++
		{
			_stppage += _i+1 + ". " + _stp[_i] + "\n"
		}
		--
		if stps == 1; _page += _stppage
		--
		_page += "\n[half]\q[Upload,upld]\n\n[half]\q[Go back,usrcp] | \q[Close,cls]\e"
		--
		_page
	}
}

Select.addrcp
{
	"%(cha)Name of your recipe\![open,inputbox,OnSvRec,-1]\e"
}

OnSvRec
{
	recipename[urecnum] = TOPROPER(reference0)
	--
	"%(cha)Write ingredients separated with a ','\![open,inputbox,OnSvRec_two,-1]\e"
}

OnSvRec_two
{
	recingr[urecnum] = REPLACE(reference0,",","+")
	--
	"%(cha)Write steps separated with a ','\![open,inputbox,OnSvRec_end,-1]\e"
}

OnSvRec_end
{
	urecnum++
	recstep[urecnum] = REPLACE(reference0,",","+")
	--
	_ing = SPLIT(recingr[recnum],"+")
	_stp = SPLIT(recstep[recnum],"+")
	--
	_stppage = ""
	_ingpage = ""
	--
	_size[0] = ARRAYSIZE(_ing)
	_size[1] = ARRAYSIZE(_stp)
	--
	_page = "\b8\_q%(cha)\f[bold,1]" + recipename[recnum] + "\f[bold,0]\n\n[half]"
	-- 
	_page += "\f[bold,1]\__q[OnZChnage,ingrs,%(ingrs),recpeg]Ingridients\__q\f[bold,0]\n"
	--
	for _i=0;_i<_size[0];_i++
	{
		_ingpage += _ing[_i] + "\n"
	}
	--
	if ingrs == 1; _page += _ingpage
	--
	_page += "\n[half]\f[bold,1]\__q[OnZChnage,stps,%(stps),recpeg]Steps\__q\f[bold,0]\n"
	--
	for _i=0;_i<_size[1];_i++
	{
		_stppage += _stp[_i] + "\n"
	}
	--
	if stps == 1; _page += _stppage
	--
	_page += "\n[half]\q[Go back,usrcp] | \q[Close,cls]\e"
	--
	_page
}

OnUpdtURec
{
	"\![execute,http-get,http://ukg.ct8.pl/userpec.php,--async=OnURecipes,--file=urecipes.txt,--timeout=200]"
}

Select.usrrcp
{
	_page = ""
	--
	if srecnum > 15; _page = "\b4\_q%(cha)\f[bold,1]Userbase Recipes\f[bold,0]\n\n[half]"
	else; _page = "\b2\_q%(cha)\f[bold,1]Userbase Recipes\f[bold,0]\n\n[half]"
	--
	if srecnum != 0
	{
		for _i=1;_i<=srecnum;_i++
		{
			_page += "\__q[OnSRecipe," + _i + "]" + srecipename[_i] + "\__q\n"
		}
	}
	else
	{
		_page += "There are no recipes\n\n[half]"
	}
	--
	_page += "\q[Update,OnUpdtURec]\n\n[half]"
	--
	if dltrec == 1; _page += "\q[Delete,OnZChnage,dltrec," + dltrec + ",rec]\n\n[half]"
	--
	_page += "\q[Go back,recipe] | \q[Close,cls]\e"
	--
	_page
}

OnSRecipe
{
	if reference0 != ""; recnum = TOINT(reference0)
	--
	_ingpage = ""
	_stppage = ""
	--
	if dltrec == 1
	{
		for _i=recnum;_i<srecnum;_i++
		{
			srecipename[_i] = srecipename[_i+1]
			srecipauth[_i] = srecipauth[_i+1]
			srecingr[_i] = srecingr[_i+1]
			srecstep[_i] = srecstep[_i+1]
		}
		--
		srecnum--
		--
		Select.usrrcp
	}
	else
	{
		_ing = SPLIT(srecingr[recnum],"+")
		_stp = SPLIT(srecstep[recnum],"+")
		--
		_stppage = ""
		_ingpage = ""
		--
		_size[0] = ARRAYSIZE(_ing)
		_size[1] = ARRAYSIZE(_stp)
		--
		_page = "\b8\_q%(cha)\f[bold,1]" + srecipename[recnum] + "\f[bold,0] by " + srecipauth[recnum] + "\n\n[half]"
		-- 
		_page += "\f[bold,1]\__q[OnZChnage,ingrs,%(ingrs),recpeg]Ingridients\__q\f[bold,0]\n"
		--
		for _i=0;_i<_size[0];_i++
		{
			_ingpage += _ing[_i] + "\n"
		}
		--
		if ingrs == 1; _page += _ingpage
		--
		_page += "\n[half]\f[bold,1]\__q[OnZChnage,stps,%(stps),recpeg]Steps\__q\f[bold,0]\n"
		--
		for _i=0;_i<_size[1];_i++
		{
			_stppage += _i+1 + ". " + _stp[_i] + "\n"
		}
		--
		if stps == 1; _page += _stppage
		--
		_page += "\n[half]\q[Go back,usrrcp] | \q[Close,cls]\e"
		--
		_page
	}
}

//FUNCTIONEX("saori/filetransfer.dll","upload","http","ukg.ct8.pl/index.php","./Traits.txt")
//"\![execute,http-get,http://ukg.ct8.pl/userpec.php,--async=OnURecipes,--file=urecipes.txt,--timeout=200]"

OnURecipes
{
	_file = "var\\urecipes.txt"
	_buff = ""
	_line = ""
	srecnum = 0
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _z=0; _z != -1; _line = FREAD(_file)
		{
			if _line == -1 || _line == "-1"
			{
				_z = 1
				break
			}
			else
			{
				if "Name: " _in_ _line
				{
					srecnum++
					srecipename[srecnum] = REPLACE(_line,"Name:","")
				}
				elseif "Author: " _in_ _line
				{
					srecipauth[srecnum] = REPLACE(_line,"Author:","")
				}
				elseif "Ingridients: " _in_ _line
				{
					srecingr[srecnum] = REPLACE(_line,"Ingridients:","")
				}
				elseif "Steps: " _in_ _line
				{
					srecstep[srecnum] = REPLACE(_line,"Steps:","")
				}
			}
		}
    }
	--
    FCLOSE(_file);
	--
	Select.usrrcp
}

Select.fndrecipe
{
	"\![open,inputbox,OnRecipeSearch,-1]\e"
}

OnRecipeSearch
{
	websrch = reference0
	//https://www.allrecipes.com/search/results/?wt=cake
	"\![execute,http-get,%(recipesite[1])%(websrch),--async=OnRecipeF,--file=recipes.html,--timeout=200]"
}

OnRecipeF
{
	_file = "var\\recipes.html"
    _buff= ""
	_regresul = '<span class="subtext">(.*)recipe results for </span>'
    _reglink = '<a href="https://www.allrecipes.com/recipe/(.*)/" data-content-provider-id="" data-internal-referrer-link="hub recipe" class="fixed-recipe-card__title-link">'
    _found = 0
	_ar = ""
	_res = ""
	_page = "\b4\_q%(cha)\![set,autoscroll,disable]"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1; _buff = FREAD(_file)
		{
			if RE_SEARCH (_buff,_reglink) 
			{
				_ar ,= RE_GETSTR[1]
			}

			if RE_SEARCH (_buff,_regresul) 
			{
				_res = RE_GETSTR[1]
			}
		}
    }
	--
    FCLOSE(_file);
	--
	_page += "\f[bold,1]" + _res + "recipes found:\f[bold,0]\n\n[half]"
	//\j[http://ssp.shillest.net/]
    --
	for _i=1;_i<15;_i++
	{
		_rec = SPLIT(_ar[_i],"/")
		_rec[1] = REPLACE(_rec[1],"-"," ")
		_rec[1] = TOPROPER(_rec[1])
		--
		//\q[wwww,script:\j[http://ssp.shillest.net/\]]
		//_page += "\![*]\q[" + _rec[1] + ",script:\j[https://www.allrecipes.com/recipe/" + _ar[_i] + "\]]\n"
		_page += "\__q[script:\![execute,http-get,https://www.allrecipes.com/recipe/" + _ar[_i] + ",--async=OnRecipeShow,--file=recipe.html,--timeout=200\]]" + TOPROPER(_rec[1]) + "\__q\n\n[50]"
	}
	--
	_page + "\![*]\q[Open Web,script:\j[%(recipesite[1])%(websrch)\]]\n\n[half]\![*]\q[Go back,dosomething]  |  \![*]\q[Nevermind,CANCEL]"
}

OnRecipeShow
{
	//reccoll 0: Ingridients 1: Steps
	if reference0 == "ingr";ingrs = TOINT(reference1)
	elseif reference0 == "step";stps = TOINT(reference1)
	--
	_file = "var\\recipe.html"
    _buff= ""
	_lines = IARRAY
	_linkre = '        "mainEntityOfPage": "(.*)"'
	_ar = ""
	_res = ""
	_page = "\b8\_q%(cha)\![set,autoscroll,disable]"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1; _buff = FREAD(_file)
		{
			if RE_SEARCH (_buff,'"caption":') 
			{
				_lines ,= _buff
				--
				for _len = 0,_z=0;_z != 1 || _len != 100;_len++
				{
					_buff = FREAD(_file)
					_lines ,= _buff
					--
					if RE_SEARCH(_buff,'"recipeCategory":')
					{ 
						_z = 1
						break
					}
				}
			}
			if RE_SEARCH (_buff,_linkre) 
			{
				_res = RE_GETSTR[1]
			}

		}
    } 
	--
    FCLOSE(_file);
	--
	_title = ""
	_ingr = ""
	_step = ""
	_time = ""
	_ingpage = ""
	_pagestp = ""
	--
	for _i = 0;_i < _len || _i != 100;_i++
	{
		if "caption" _in_ _lines[_i]
		{
			_title = REPLACE(_lines[_i],'          "caption": "',"")
			_title = REPLACE(_title,'"'," ")
			_page += "\f[height,17]\f[bold,1]" + _title + "\f[default]\n\n[half]"
			if reference0 == "save"; sirecipename[sirecnum] = _title
			lstrecipe = _title
		}
		elseif "recipeIngredient" _in_ _lines[_i]
		{
			if ingrs != 1; _page += "\n[half]\f[bold,1]\q[Ingridients:,OnRecipeShow,ingr,1]\f[bold,0]\n"
			else; _page += "\n[half]\f[bold,1]\q[Ingridients:,OnRecipeShow,ingr,0]\f[bold,0]\n"
			--
			for _i = _i+1,_z = 0;_z != 1;_i++
			{
				if "]," _in_ _lines[_i] || "," !_in_ _lines[_i]
				{
					_z = 1
				}
				else
				{

					_ingr = REPLACE(_lines[_i],"          ","")
					_ingr = REPLACE(_ingr,'"',"")
					_ingr = REPLACE(_ingr,'½',"1/2")
					_ingr = REPLACE(_ingr,'¼',"1/4")
					_ingr = REPLACE(_ingr,'¾',"3/4")
					_ingr = REPLACE(_ingr,',',"")
					_ingpage +=  _ingr + "\n"
				}
			}
			--
			if ingrs == 1
			{
				_page += _ingpage
			}
			--
			if reference0 == "save"; sirecingr[sirecnum] = _ingpage
			--
			_page += "\n[half]"
		}
		elseif "recipeInstructions" _in_ _lines[_i]
		{
			if stps != 1; _page += "\n[half]\f[bold,1]\q[Instructions:,OnRecipeShow,step,1]\f[bold,0]\n"
			else; _page += "\n[half]\f[bold,1]\q[Instructions:,OnRecipeShow,step,0]\f[bold,0]\n"
			--
			for _i=_i+1,_f=0,_z = 0;_z != 1;_i++
			{
				if "]," _in_ _lines[_i]
				{
					_z = 1
				}
				elseif "HowToStep" _in_ _lines[_i]
				{
					_f++
					_step = REPLACE(_lines[_i+1],'            "text": ',"")
					_step = REPLACE(_step,'"',"")
					_pagestp += _f + ". " + _step + "\n[half]"
				}
			}
			--
			if stps == 1
			{
				_page += _pagestp
			}
			--
			if reference0 == "save"; sirecstep[sirecnum] = _ingpage
		}
	}
	--
	if reference0 == "save"
	{
		sirecnum++
		--
		"Recipe Saved\x"
		--
		Select.svdrcp
	}
	else
	{
		_page + "\n\n[half]\![*]\q[Open,script:\j[" + _res + "\]] | \![*]\q[Save,OnRecipeShow,save] \n\n[half]\![*]\q[Go back,dosomething]  |  \![*]\q[Nevermind,CANCEL]"
	}
}

OnSIRecipes
{
	if reference0 != ""; recnum = TOINT(reference0)
	--
	_ingpage = ""
	_stppage = ""
	_page = ""
	--
	if dltrec == 1
	{
		for _i=recnum;_i<srecnum;_i++
		{
			sirecipename[_i] = sirecipename[_i+1]
			sirecingr[_i] = sirecingr[_i+1]
			sirecstep[_i] = sirecstep[_i+1]
		}
		--
		sirecnum--
		--
		Select.svdrcp
	}
	else
	{
		_page = "\b8\_q%(cha)\f[bold,1]" + sirecipename[recnum] + "\f[bold,0]\n\n[half]"
		-- 
		_page += "\f[bold,1]\__q[OnZChnage,ingrs,%(ingrs),srecpeg]Ingridients\__q\f[bold,0]\n"
		--
		if ingrs == 1; _page += sirecingr[recnum]
		--
		_page += "\n[half]\f[bold,1]\__q[OnZChnage,stps,%(stps),srecpeg]Steps\__q\f[bold,0]\n"
		--
		if stps == 1; _page += sirecstep[recnum]
		--
		_page += "\n[half]\q[Go back,usrrcp] | \q[Close,cls]\e"
		--
		_page
	}
}

Select.unit
{
	"\![*]\q[Metric,OnConvert,met]\n/
	\![*]\q[Imperial,OnConvert,imp]\n/
	\![*]\q[Temperature,OnConvert,temp]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnConvert
{
	case reference0
	{
		when "temp"
		{
			"\![*]\q[F to C,OnTempCon,f-c]\n/
			\![*]\q[C to T,OnTempCon,c-f]\n/
			\![*]\q[Nevermind,CANCEL]\e"
		}
		when "met"
		{
			"\![*]\q[Distance,OnMetCon,f-c]\n/
			\![*]\q[Mass,OnMetCon,c-f]\n/
			\![*]\q[Time,OnMetCon,c-f]\n/
			\![*]\q[Nevermind,CANCEL]\e"
		}
		when "imp"
		{
			"\![*]\q[Distance,OnMetCon,f-c]\n/
			\![*]\q[Mass,OnMetCon,c-f]\n/
			\![*]\q[Volume,OnMetCon,c-f]\n/
			\![*]\q[Area,OnMetCon,c-f]\n/
			\![*]\q[Time,OnMetCon,c-f]\n/
			\![*]\q[Nevermind,CANCEL]\e"
		}
	}
}

OnTempCon
{

}

OnUp
{
	case reference0
	{
		when "shell"; "\![Update,shell]\e"
		when "bal"; "\![Update,balloon]\e"
		when "ghst"; "\![Update,ghost+shell+balloon]\e"
	}
}

Select.todo
{
	_page = ""
	--
	if todopagenum < 4; _page = "\b0\_q%(cha)Your Lists:\n\n[half]"
	elseif todopagenum < 10; _page = "\b2\_q%(cha)Your Lists:\n\n[half]"
	elseif todopagenum < 15; _page = "\b4\_q%(cha)Your Lists:\n\n[half]"
	--
	if todopagenum != 0
	{
		for _i=0;_i<todopagenum;_i++
		{
			if namepage[_i] == ""; namepage[_i] = "unnamed"
			--
			//%(countarray(taskstatus[0],'0','+'))
			_tsk = countarray(taskstatus[_i],'1','+')
			--
			_page += "\![*]\q[" + namepage[_i] + ",OnPageClick," + _i + "]        " + _tsk + "/" + taskamount[_i] + "\n"
		}
	}
	else
	{
		_page += "You don't have any lists\n\n[half]"
	}
	--
	_page += "\n"
	--
	if delepage == 1
	{
		_page += "%(acc)\q[Delete,OnZChnage,delepage,%(delepage),todo]\f[default]  |  "
	}
	else; _page += "\q[Delete,OnZChnage,delepage,%(delepage),todo]  |  "
	--
	if repage == 1
	{
		_page += "%(acc)\q[Rename,OnZChnage,repage,%(repage),todo]\f[default]  |  "
	}
	else; _page += "\q[Rename,OnZChnage,repage,%(repage),todo]  |  "
	--
	_page += "\q[Add,crepage]\n\n[half]\![*]\q[Close,closetodo]"
	--
	_page
}

//\n\q[Delete page,delpage]  | \q[Rename Page,repage] | \q[New Page,crepage]

OnPageClick
{
	pagenum = TOINT(reference0)
	--
	if repage == 1
	{
		OnRePage
	}
	elseif delepage == 1
	{
		OnDelPage
	}
	else
	{
		OnTODOList
	}
}

OnTODOList
{
	"\_q\b4"
	--
	//Structure:
	//task+task2@subtask1#subtask2+task3
	taskforpage = ""
	lefttask = 0
	pagetasks = REPLACE(tasks[pagenum],"+",",")
	pagetaskstatus = REPLACE(taskstatus[pagenum],"+",",")
	_z = countarray(taskstatus[pagenum],'1','+')
	lefttask[pagenum] = taskamount[pagenum] - TOINT(_z)
	--
	"%(cha)\f[bold,1]%(namepage[pagenum])\n\n[half]\f[bold,0]/
	Number of Tasks: \f[bold,1]%(taskamount[pagenum])\f[bold,0]\nTasks to do: %(lefttask[pagenum])\n\n[half]"
	--
	for _i=1;_i<=taskamount[pagenum];_i++
	{
		if "@" _in_ pagetasks[_i]
		{
			_task = SPLIT(pagetasks[_i],"@")
			_subtasks = SPLIT(_task[1],"#")
			_subsize = ARRAYSIZE(_subtasks)
			--
			if pagetaskstatus[_i] == 1; taskforpage += "\f[strike,1]\__q[OnMarkTask," + _i + "]" + _i + ". " + TOPROPER(_task[0]) + "\__q\f[strike,0]\n"
			else
			{ 
				_sub = ""
				_sfs = 0
				taskforpage += "\__q[OnMarkTask," + _i + "]" + _i + ". " + TOPROPER(_task[0]) + "\__q     "
				--
				for _j=0;_j<_subsize-1;_j++
				{
					if _subtasks[_j] != ""
					{
						if "=1=" _in_ _subtasks[_j]
						{
							_sfs++
							_tsk = REPLACE(_subtasks[_j],"=1=","")
							_sub += "\__q[OnSubMarkTask," + _j + "," + _i +"]    \f[strike,1]- " + TOPROPER(_tsk) + "\__q\f[strike,0]\n"
						}
						else; _sub += "\__q[OnSubMarkTask," + _j + "," + _i +"]    - " + TOPROPER(_subtasks[_j]) + "\__q\n"
					}
				}
				--
				taskforpage += _sfs + "/" + (_subsize-1) + "\n" + _sub
			}

		}
		else
		{
			if pagetaskstatus[_i] == 1; taskforpage += "\f[strike,1]\__q[OnMarkTask," + _i + "]" + _i + ". " + TOPROPER(pagetasks[_i]) + "\__q\f[strike,0]\n"
			else; taskforpage += "\__q[OnMarkTask," + _i + "]" + _i + ". " + TOPROPER(pagetasks[_i]) + "\__q\n"
		}
	}
	--
	"%(taskforpage)"
	--
	"\nAdd: \q[Task,qcrtsk] | "
	--
	if subtasks != 1; "\q[Subtask,OnZChnage,subtasks,%(subtasks),todolist]\n\n[half]"
	else; "%(acc)\q[Subtask,OnZChnage,subtasks,%(subtasks),todolist]\f[default]\n\n[half]"
	--
	if deltasks != 1; "\q[Delete,OnZChnage,deltasks,%(deltasks),todolist]\n"
	else; "%(acc)\q[Delete,OnZChnage,deltasks,%(deltasks),todolist]\f[default]\n"
	--
	"\n[half]\![*]\q[Go Back,todo]  |  \![*]\q[Close,closetodo]\e"
}

OnSubMarkTask
{
	choosenum = reference0
	_tasknum = reference1 
	_tasktemp = ""
	pagetasks = REPLACE(tasks[pagenum],"+",",")
	_allsub = ""
	_task = SPLIT(pagetasks[_tasknum],"@")
	_subtasks = SPLIT(_task[1],"#")
	_subsize = ARRAYSIZE(_subtasks)
	--
	if deltasks == 1
	{
		_tasktemp = REPLACE(pagetasks[_tasknum],"#" + _subtasks[choosenum]+"#","#")
		--
		tasks[pagenum] = REPLACE(tasks[pagenum],pagetasks[_tasknum],_tasktemp)
		--
		OnTODOList
	}
	else
	{
		if "=1=" !_in_ _subtasks[choosenum];_tasktemp = REPLACE(pagetasks[_tasknum],"#"+_subtasks[choosenum]+"#","#=1=" +_subtasks[choosenum]+"#")
		else
		{
			if choosenum != 0
			{
				_tasktemp = REPLACE("#"+_subtasks[choosenum]+"#","=1=","")
				_tasktemp = REPLACE(pagetasks[_tasknum],"#"+_subtasks[choosenum]+"#",_tasktemp)
			}
			else
			{
				_tasktemp = REPLACE(_subtasks[choosenum]+"#","=1=","")
				_tasktemp = REPLACE(pagetasks[_tasknum],_subtasks[choosenum]+"#",_tasktemp)
			}
		}
		--
		tasks[pagenum] = REPLACE(tasks[pagenum],pagetasks[_tasknum],_tasktemp)
		--
		OnTODOList
	}
}

OnAddSubTask
{
	pagetasks = REPLACE(tasks[pagenum],"+",",")
	_temp = pagetasks[choosenum]
	--
	if "@" !_in_ pagetasks[choosenum]
	{
		_temp += "@"
	}
	--
	_temp += reference0 + "#"
	--
	tasks[pagenum] = REPLACE(tasks[pagenum],pagetasks[choosenum],_temp)
	--
	OnTODOList
}

Select.crepage
{
	"\_qHow do you want to name your list?\![open,inputbox,OnCPAGELIST,-1]"
}

OnCPAGELIST
{ 
	namepage[todopagenum] = reference0
	taskamount[todopagenum] = 0
	todopagenum++
	--
	Select.todo
}

OnRePage
{
	"\![open,inputbox,OnRenamePage,-1]"
}

OnRenamePage
{
	namepage[pagenum] = reference0
	--
	Select.todo
}

Select.qcrtsk
{
	"\![open,inputbox,OnCreateTask,-1]"
}

OnDelPage
{
	pagenum = TOINT(reference0)
	--
	for _i=pagenum;_i<todopagenum;_i++
	{
		taskstatus[_i] = taskstatus[_i+1]
		tasks[_i] = tasks[_i+1]
		namepage[_i] = namepage[_i+1]
		taskamount[_i] = taskamount[_i+1]
	}
	--
	todopagenum--
	--
	Select.todo
}

OnCreateTask
{
	taskamount[pagenum]++
	pagetaskstatus[_i] = 0
	pagetasks[taskamount[pagenum]] = reference0
	tasks[pagenum] = REPLACE(pagetasks,",","+")
	--
	OnTODOList
}

Select.crtsk
{
	if deltasks != 1; deltasks = 1
	else; deltasks = 0
	--
	OnTODOList
}

OnMarkTask
{
	choosenum = reference0
	--
	if deltasks == 1; OnDeleteTask
	elseif subtasks == 1; "\![open,inputbox,OnAddSubTask,-1]\e"
	else; OnMarkTask_done
}

OnDeleteTask
{
	for _i=choosenum;_i<taskamount[pagenum]+1;_i++
	{
		pagetaskstatus[_i] = pagetaskstatus[_i+1]
		pagetasks[_i] = pagetasks[_i+1]
	}
	--
	tasks[pagenum] = REPLACE(pagetasks,",","+")
	taskstatus[pagenum] = REPLACE(pagetaskstatus,",","+")
	taskamount[pagenum]--
	--
	OnTODOList
}

OnMarkTask_done
{
	if pagetaskstatus[choosenum] == 0; pagetaskstatus[choosenum] = 1
	else; pagetaskstatus[choosenum] = 0
	--
	taskstatus[pagenum] = REPLACE(pagetaskstatus,",","+")
	--
	OnTODOList
}

Select.weath
{
	OnCheckWeather
}

Select.CALENDAR
{
	"\0Opening the calender.\![open,calendar]\e"
}

Select.sspconfig
{
	
	"\0Opening the SSP config menu.\![open,configurationdialog]\e"
}

Select.ChoiceGarbagecan
{
	_gomicheck = FUNCTIONEX("saori\\gomi.dll", "-n")	

	if _gomicheck == 0; "\0You want me to empty your garbage?\w8Okay\w8\w8\w8\s[-1]\w8\w8\w8\w8It's empty already\e"
	elseif _gomicheck >= 1; "\0You want me to empty your garbage?\w8Okay\w8\w8\w8\s[-1]\w8\w8\![raise,OnGarbagecanEmpty]\w9\w9\w9\0\cDone.\e"
}


OnGarbagecanEmpty
{
	_gomi = FUNCTIONEX("saori\\gomi.dll", "-f")
}

Select.ChoiceSystemInformation
{
	os_name = FUNCTIONEX("saori\\saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori\\saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori\\saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori\\saori_cpuid.dll","cpu.clockex")
	--
	"\0\b[2]\_q/
	\_q\f[bold,1]OS:\f[bold,0] %(os_name) %(os_version)\n/
	\f[bold,1]Memory Load:\f[bold,0] %(memoryload)%\n/
	\f[bold,1]Physical Memory:\f[bold,0] %(memoryavailphys) KB\n/
	\f[bold,1]CPU:\f[bold,0] %(cpu_name) %(cpu_clockex)MHz\n/
	\f[bold,1]Ukagaka:\f[bold,0] %property[baseware.version]\e"
}
	
Select.MailCheck
{
	"\![biff]\e"
}

Select.HEADLINECANCEL
{
	"\0Finished with headlines.\e"
}
OnChoiceTimeout
{
	"\0So you're just killing time?\e" 
}

OnAI
{
	truth++
	AI = "ON"
	--
	"EXPERIMENTAL AI CHAT ON"
}

Select.oapp
{
	appcontent = ""
	appcontent +="\f[bold,1]\_q\b[4]Your apps\f[bold,0]:\n\n"
	--
	_apps = FENUM('app','+')
	if _apps == ""
	{
		appcontent +="\f[bold,1]You don't have any apps\f[bold,0]\nTo open app you need to place shortcut for it in the folder or drop the shortcut on me"
	}
	else
	{
		_trueapp = RE_SPLIT(_apps,'+')
		_apps = REPLACE(_apps,'.lnk','')
		_apps = RE_REPLACE(_apps,'.url','')
		_apps = RE_SPLIT(_apps,'+')
		--
		for _i=0;_i<ARRAYSIZE(_apps);_i++
		{
			appcontent += "\q[" + TOUPPER(_apps[_i]) + ",OnOpenAPPP," + _apps[_i] + "," + _trueapp[_i] +"]\n"
		}
		
	}
	--
	appcontent +="\n\f[bold,1]\b[4]Your projects\f[bold,0]:\n\n"
	--

	_proj = FENUM('projects','+')
	if _proj == ""
	{
		appcontent +="\f[bold,1]You don't have any projects\f[bold,0]\n"
	}
	else
	{
		_tureproj = _proj
		_proj = REPLACE(_proj,'.png','')
		_proj = RE_REPLACE(_proj,'.sai2','')
		_proj = RE_REPLACE(_proj,'.sai','')
		_proj = RE_REPLACE(_proj,'.mdp','')
		_proj = RE_REPLACE(_proj,'.kra','')
		_proj = RE_REPLACE(_proj,'.blend','')
		_proj = RE_SPLIT(_proj,'+')
		_tureproj = RE_SPLIT(_tureproj,'+')
		--
		for _i=0;_i<ARRAYSIZE(_proj);_i++
		{
			appcontent += "\q[" + TOUPPER(_proj[_i]) + ",OnOpenPRJ," + _tureproj[_i] + ","+ _proj[_i] + "]\n"
		}
		
	}
	--
	if delapp == "ON"; appcontent += "\f[size,20]\n%(acc)\q[-,delap]\f[color,default] | \f[size,default]"
	else; appcontent += "\f[size,20]\n\q[-,delap] | \f[size,default]"
	--
	if editap == "ON"; appcontent += "%(acc)\q[RENAME,edap]\f[color,default]"
	else; appcontent += "\q[RENAME,edap]"
	--
	appcontent += "\n[half]\n\![*]\q[ADD PROJECT TYPE,projtype]\n[half]\n\![*]\q[Nevermind,CANCEL]\n"
	--
	appcontent
}

Select.delap
{
	if delapp == "ON"
	{
		delapp = "OFF"
	}
	else
	{
		delapp = "ON"
		editap = "OFF"
	}
	--
	Select.oapp
}

Select.edap
{
	if editap == "ON"
	{
		editap = "OFF"
	}
	else
	{
		editap = "ON"
		delapp = "OFF"
	}
	--
	Select.oapp
}

Select.projtype
{
	projtyp = SPLIT(projecttypes,' ')
	prtypcontent = ""
	prtypcontent += "\_q\b[2]CURRENT TYPES (CLICK TO DELETE):\n"
	--
	for _i=0;_i<ARRAYSIZE(projtyp);_i++
	{
		if projtyp[_i] != ""
		{	
			prtypcontent += "\![*] \q[" + TOUPPER(projtyp[_i]) + ",OnProject_del," + projtyp[_i] + "]\n"
		}	
	}
	--
	prtypcontent += "\n\![*]\q[ADD TYPE,OnProject_ADD]"
	--
	prtypcontent += "\n[half]\f[bold,1]\n\![*]\q[GO BACK,oapp]\f[bold,0] OR \![*]\f[bold,1]\q[CANCEL,CANCEL]\f[bold,0]\n"
	--
	prtypcontent
}

OnProject_del
{
	projecttypes = REPLACE(projecttypes,reference0,NULL,1)
	--
	Select.projtype
}

OnProject_ADD
{
	"\![open,inputbox,OnProject_ADDED,-1]"
}

OnProject_ADDED
{
	projecttypes += " " + REPLACE(TOLOWER(reference0),".",NULL,1)
	--
	Select.projtype
}

OnOpenPRJ
{
	projectthing = reference0
	--
	if delapp == "ON"
	{
		FDEL("projects/%(reference0)")
		--
		"\c"
	}
	elseif editap == "ON"
	{
		"\![open,inputbox,OnRePro,-1]"
	}
	else
	{
		"\![open,file,projects/%(reference0)]"
	}
	--
	Select.oapp
}

OnOpenAPPP
{
	appthing = reference0
	appthing2 = reference1
	--
	if delapp == "ON"
	{
		FDEL("app/%(reference1)")
		--
		"\c"
	}
	elseif editap == "ON"
	{
		"\![open,inputbox,OnReApp,-1]"
	}
	else
	{
		"\![open,file,app/%(reference0)]"
	}
	--
	Select.oapp
}

OnReApp
{
	editap = "OFF"
	appre = SPLIT(appthing2,".")
	FRENAME("app/%(appre[0]).%(appre[1])","app/" +reference0 + "." + appre[1])
	--
	"\c"
	--
	Select.oapp
}

OnRePro
{
	editap = "OFF"
	projectre = SPLIT(projectthing,".")
	FRENAME("projects/%(projectre[0]).%(projectre[1])","projects/" + reference0 + "." + projectre[1])
	--
	"\c"
	--
	Select.oapp
}


Select.randanime
{
	animerand = RAND(445) + 1
	animerecom = "\_q\0\b[4]\*"
	--
    "\![execute,http-get,https://www.anime-planet.com/anime/all?page=%(rand),--async=OnAnimeRand,--file=rananime.html,--timeout=200]"
}

OnAnimeRand
{
        
    _file = "var\\rananime.html"
    _buff= ""
    _regquote = '<h5 class=' + "'" + 'theme-font' + "'" + '>([\w|\s]*)</h5>'//<a title="<h5 class='theme-font'>Yum Yum Sweets</h5>
    _regeauthor = '<h4>Tags</h4><ul>(.*)</li></ul></div>' //tags
	_booklinkregex = 'data-total-episodes="(\d*)"' //episodes
	_animeid= 'data-type="anime" data-id="(\d*)"' //episodes
    quote = ""
	_anime = ""
    author = ""
	id = ""
    _found = 0
	episodes = ""
	_bookpage = "\b2\_q\*"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
            for _buff = FREAD(_file); _buff != -1 && _found != 10; _buff = FREAD(_file) {
				if RE_SEARCH ( _buff, _regquote ) {
						
					//book += RE_GETSTR[1] + "+"  
					_bookpage += RE_GETSTR[1] + "\n\n[half]"  
					_found++ 
				}
				/*if RE_SEARCH ( _buff, _regquote ) {
						
					//book += RE_GETSTR[1] + "+"  
					_anime += RE_GETSTR[1] + "|||"  
				}
				--
				if RE_SEARCH ( _buff, _animeid ) {
						
					//id += RE_GETSTR[1] + "+"  
					_anime += RE_GETSTR[1] + "|||"  
				}
				--
				if RE_SEARCH ( _buff, _regeauthor ) {
						
					//author += RE_GETSTR[1] + "+"  
					_anime += RE_GETSTR[1] + "|||"  
				}
				--
				if RE_SEARCH ( _buff, _booklinkregex ) {
						
					//episodes += RE_GETSTR[1] + "+"  
					_anime += RE_GETSTR[1] + "|||+"  
				}*/
            }
    }
    --
    FCLOSE(_file);
    --
	_anime = REPLACE(_anime,",","~~")
	_anime = SPLIT(_anime,"+")
	/*quote = REPLACE(quote,",","~~")
	booksplit = SPLIT(quote,"+")
	--
	episodes = SPLIT(episodes,"+")
	--
	author = REPLACE(author,"<li>","")
	author = REPLACE(author,"</li>"," | ")
	author = REPLACE(author,",","~~")
	authorsplit = SPLIT(author,"+")
	--
	id = SPLIT(id,"+")*/
	--
	/*for _i=0;_i<5;_i++
    {
		lastrand = rand
		rand = RAND(100)
		exctag = 0
		_splitanime = SPLIT(_anime[rand],"|||")
		--
		for _j=0;lastrand==rand;_j++
		{
			rand = RAND(35)
		}
		--
		exsize = ARRAYSIZE(excludedtags)
		--
		for _k=0;_k<=exsize;_k++
		{
			if excludedtags[_k] _in_ _splitanime[2]
			{
				exctag = 1
			}
		}
		--
		if _splitanime[0] == "" || exctag == 1 || _splitanime[0] _in_ _bookpage 
		{
			_i--
		}
		else
		{
			_bookpage += "\f[bold,1]" + REPLACE(_splitanime[0],"~~",",") + "\f[bold,0]:\nEpisodes:"+ _splitanime[3] +"\n\f[height,10]" + REPLACE(_splitanime[2],"~~",",") + "\nAnimeID:" + _splitanime[1] +"\n\n[half]\f[default]"
		}
	}*/
	--
	_bookpage += "\x"
	--
	_bookpage
}

Select.gamez
{
	"\b2\_q"
	--
	if repairglitch != 1
	{
		if gamesexplain != 1
		{
			gamesexplain = 1
			--
			"Ỷ̶͕o̴̭͌u̶̹͘ ̸̛͜w̷͍͌â̵͜n̸̦̈t̶͉͐ ̵̡͐t̶͈͒o̷̽ͅ ̶̙̽p̸̥͆l̸̠̄a̴͎̓ỳ̵̹ ̸̻̇a̵͓͘ ̵̯͆g̵̍ͅa̵̝̐m̵͔̅e̸̗̾?̸̳͒\w3 Ȉ̷͚ ̴̤̑d̸̨̿ó̷͈ń̶̪'̷̤̆t̴̛͕ ̷̙̉k̸͍̃n̵̹͋o̸̬͘w̸̎ͅ ̸̖̂m̵̻̔a̷͔͝ń̷̢y̴̠̌ ̵͕̍ḃ̸̠u̶̥̿t̶̟͝ ̶̧͐D̵͇̒Ä̷̠́V̷̤͋Ḏ̴͛ ̷̬͂ṫ̴̞o̶͈͆u̵͓͛g̶͚͛h̶̥̅ṫ̴̨ ̴̝̄m̸̞͛é̷̟ ̷͉̈́h̴̹́o̴̡̔w̷̬̏ ̷̳̽t̸̬͑o̵͇̔ ̶͓͠p̴̹̄l̶̡͗ḁ̸̈́ỳ̸̖ ̸̭̓a̵͖̔ ̵̙͝c̶̮͘o̶͇͠u̸̺͝p̴͍̀l̴̘̀e̷̝͝ ̵̹̾ǒ̷̧f̵̼͠ ̸̡̈́s̶͉̕i̵͈̒m̶̬͊p̷̹͠l̸͖̈́e̸̞̊r̵̮͑ ̶̝̆ọ̶̏ñ̷̰e̷̖͘š̶͙.̸̹̈́\n\n"
		}
		else
		{
			"W̶͚̉ḧ̸͉́a̷̭͝t̸̹͊ ̵͙̃w̷̙͛o̷̼̍u̸̜̐l̸͔̂d̷̓͜ ̷̡̉y̷̲̓o̴̩͛u̴̺͝ ̶̪͒l̸̞͊i̷͖̚ḳ̴̑e̸̮̾ ̸̞͠ṱ̷̂ő̶͙ ̵̬͐ṕ̵͉l̷̄ͅà̸̘ÿ̵͖́ ̵͙̐t̸͎͘h̷͕̾i̷̹̔s̶̰͆ ̷̭̒t̷̯̀ǐ̶̪m̶͌͜e̸̦̎?̸͚̄\n\n"
		}
	}
	else
	{ 
		if gamesexplain != 1
		{
			gamesexplain = 1
			--
			"%(distingstart)You want to play a game?\w3 I don't know many but DAVD tought me how to play a couple of simpler ones.\n\n"
		}
		else
		{
			"%(distingstart)What would you like to play this time?\n\n"
		}
	}
	--
	"\f[default]\![*]\q[War,OnWar]\n/
	\![*]\q[Tic-Tac-Toe,OnPlayOX]\n/
	\n[half]\![*]\q[Show Statistics,statsgame]\n"
	--
	"\n[half]\![*]\q[Back to main menu,BACKTOMENU]\n"
	--
	"\![*]\q[Nevermind,CANCEL]\e"
}

Select.statsgame
{
	"\b2\_q"
	--
	if repairglitch != 1
	{
		if userwins != 0; "T̶̰͝o̵͔͗d̴̢͝ä̶͖y̷̲͐ ̵͕͆ý̷̭o̷̝͘u̶̼̐ ̷̩̒w̵̦̽o̸̮̚n̷̺̒ %(userwins) t̴͎̓ĩ̴͎m̷̼͆e̴̛̠%(stemp(userwins))\n\n[half]"
		--
		if userlosses != 0; "Y̶̟͂o̶̳̽ư̴̜ ̴̗̆l̴͖̓o̴̡͋s̵̬̀ṯ̷̆ %(userlosses) t̴͎̓ĩ̴͎m̷̼͆e̴̛̠%(stemp(userlosses))\n\n[half]"
		--
		if draws != 0; "W̸̬̍e̵̹̓ ̸̧͐h̶̫̋a̴̳̿d̸̘͂ ̸̮̃ã̵̟ ̷̲̿d̸̹̒r̸͍̾a̴͆ͅw̶̞͗ %(draws) t̴͎̓ĩ̴͎m̷̼͆e̴̛̠%(stemp(draws))\n\n[half]"
	}
	else
	{
		if userwins != 0; "%(distingstart)Today you won %(userwins) time%(stemp(userwins))\n\n[half]"
		--
		if userlosses != 0; "%(distingstart)You lost %(userlosses) time%(stemp(userlosses))\n\n[half]"
		--
		if draws != 0; "%(distingstart)We had a draw %(draws) time%(stemp(draws))\n\n[half]"
	}
	--
	"\n[half]\![*]\q[Back to game menu,gamez]\n"
	--
	"\![*]\q[Back to main menu,BACKTOMENU]\n"
	--
	"\![*]\q[Nevermind,CANCEL]\e"
}

OnWar
{
	games++
	m201relationship++
	--
	if mood[1] >= 0; mood[1]--
	--
	cardu = RAND(14)
	cardg = RAND(14)
	--
	cardgs = RAND(5)
	cardus = RAND(5)
	--
	if cardgs == 0; cardgs = 1
	--
	if cardus == 0; cardus = 1
	--
	if cardg == 0; cardg = 1
	--
	if cardu == 0; cardu = 1
	--
	OnShowCard
	--
	field += "\n\n[half]\![*]\q[PLAY AGAIN,OnWar]\n"
	--
	field +=  "\n[half]\![*]\q[Back to game menu,gamez]\n"
	--
	field +=  "\![*]\q[Back to main menu,BACKTOMENU]\n"
	--
	field +=  "\![*]\q[Nevermind,CANCEL]\e"
	--
	field
	--
	"\e"
}

winorlosewar
{
	if cardu == 1 && cardg != 1
	{
		if repairglitch != 1
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"L̸u̴c̷k̷ ̶i̵s̵ ̴n̷o̵t̷ ̶o̷n̶ ̶m̵y̸ ̵s̴i̸d̸e̸ ̶t̵o̶d̸a̶y̶ :C"
						"Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓ a̶̧̍g̶̘͘a̸̠͆i̸̥̒n̶͚̓ :C"
					}
					else
					{
						"Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓"
					}
				}
				else
				{
					"s̶e̵e̶m̴s̶ ̷l̶i̷k̵e̵ ̵y̶o̴u̷ ̵w̸o̶n̴"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5; "Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓ ^^"
					else; "Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓"
				}
				else
				{
					"s̷e̴e̸m̵s̴ ̵l̷i̵k̶e̴ ̸y̵o̸u̴ ̴w̶o̶n̸"
				}
			}
			else
			{
				"s̶e̵e̶m̴s̶ ̷l̶i̷k̵e̵ ̵y̶o̴u̷ ̵w̸o̶n̴"
			}
		}
		else
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"Luck is not on my side today :C"
						"You won again :C"
					}
					else
					{
						"You won"
					}
				}
				else
				{
					"seems like you won"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5; "You won ^^"
					else; "You won"
				}
				else
				{
					"seems like you won"
				}
			}
			else
			{
				"seems like you won"
			}
		}
		--
		userwins++
	}
	elseif cardu != 1 && cardg == 1
	{
		if repairglitch != 1
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"I̴ ̶f̷i̶n̸a̸l̸l̵y̵ ̸w̷o̵n̴ :D"
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ :D"
					}
					else
					{
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿"
					}
				}
				else
				{
					"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"S̴o̵r̴r̴y̴,̸ ̶l̸u̴c̷k̵ ̶i̶s̵ ̵n̷o̴t̶ ̶o̶n̷ ̷y̴o̵u̶r̵ ̸s̴i̷d̴e̴ ̶t̸o̷d̶a̶y̷ >:)"
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ a̸g̴a̶i̴n̸>:)"
					}
					else
					{
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ "
					}
				}
				else
				{
					"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
				}
			}
			else
			{
				"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
			}
		}
		else
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"I finally won :D"
						"I won :D"
					}
					else
					{
						"I won"
					}
				}
				else
				{
					"seems like I won"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"Sorry, luck is not on your side today >:)"
						"I won again >:)"
					}
					else
					{
						"I won"
					}
				}
				else
				{
					"seems like I won"
				}
			}
			else
			{
				"seems like I won"
			}
		}
		--
		userlosses++
	}
	elseif cardu == 1 && cardg == 1
	{
		if repairglitch != 1; "\0s̴e̸e̴m̷s̷ ̶l̶i̴k̶e̷ ̷i̶t̴'̷s̶ ̸a̵ ̷d̴r̵a̵w̶"
		else; "\0seems like it's a draw"
		--
		draws++
	}
	elseif cardu == cardg 
	{
		if repairglitch != 1; "\0s̴e̸e̴m̷s̷ ̶l̶i̴k̶e̷ ̷i̶t̴'̷s̶ ̸a̵ ̷d̴r̵a̵w̶"
		else; "\0seems like it's a draw"
		--
		draws++
	}
	elseif cardu < cardg 
	{
		if repairglitch != 1
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"I̴ ̶f̷i̶n̸a̸l̸l̵y̵ ̸w̷o̵n̴ :D"
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ :D"
					}
					else
					{
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿"
					}
				}
				else
				{
					"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"S̴o̵r̴r̴y̴,̸ ̶l̸u̴c̷k̵ ̶i̶s̵ ̵n̷o̴t̶ ̶o̶n̷ ̷y̴o̵u̶r̵ ̸s̴i̷d̴e̴ ̶t̸o̷d̶a̶y̷ >:)"
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ a̸g̴a̶i̴n̸>:)"
					}
					else
					{
						"I̸͈̒ ̸̼̿w̴̨̉o̵̮̓n̴̯̿ "
					}
				}
				else
				{
					"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
				}
			}
			else
			{
				"s̶e̸e̷m̶s̸ ̴l̴i̴k̷e̸ ̵I̴ ̵w̷o̵n̵"
			}
		}
		else
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"I finally won :D"
						"I won :D"
					}
					else
					{
						"I won"
					}
				}
				else
				{
					"seems like I won"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"Sorry, luck is not on your side today >:)"
						"I won again >:)"
					}
					else
					{
						"I won"
					}
				}
				else
				{
					"seems like I won"
				}
			}
			else
			{
				"seems like I won"
			}
		}
		--
		userlosses++
	}
	else
	{
		if repairglitch != 1
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"L̸u̴c̷k̷ ̶i̵s̵ ̴n̷o̵t̷ ̶o̷n̶ ̶m̵y̸ ̵s̴i̸d̸e̸ ̶t̵o̶d̸a̶y̶ :C"
						"Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓ a̶̧̍g̶̘͘a̸̠͆i̸̥̒n̶͚̓ :C"
					}
					else
					{
						"Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓"
					}
				}
				else
				{
					"s̶e̵e̶m̴s̶ ̷l̶i̷k̵e̵ ̵y̶o̴u̷ ̵w̸o̶n̴"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5; "Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓ ^^"
					else; "Ý̷͈o̷͕̍u̷̟̅ ̶̜̒w̶̺͗ó̴̪n̴̡̓"
				}
				else
				{
					"s̷e̴e̸m̵s̴ ̵l̷i̵k̶e̴ ̸y̵o̸u̴ ̴w̶o̶n̸"
				}
			}
			else
			{
				"s̶e̵e̶m̴s̶ ̷l̶i̷k̵e̵ ̵y̶o̴u̷ ̵w̸o̶n̴"
			}
		}
		else
		{
			if userwins > 5
			{
				if userlosses < 3
				{
					if numofmood != 2 || numofmood != 5
					{
						"Luck is not on my side today :C"
						"You won again :C"
					}
					else
					{
						"You won"
					}
				}
				else
				{
					"seems like you won"
				}
			}
			elseif userlosses > 5
			{
				if userwins < 3
				{
					if numofmood != 2 || numofmood != 5; "You won ^^"
					else; "You won"
				}
				else
				{
					"seems like you won"
				}
			}
			else
			{
				"seems like you won"
			}
		}
		--
		userwins++
	}
}

 OnShowCard
 {
	if cardu == 13; fcardu = "K"
	elseif cardu == 12; fcardu = "Q"
	elseif cardu == 11; fcardu = "J"
	elseif cardu == 1; fcardu = "A"
	else; fcardu = cardu
	--
	if cardg == 13; fcardg = "K"
	elseif cardg == 12; fcardg = "Q"
	elseif cardg == 11; fcardg = "J"
	elseif cardg == 1; fcardg = "A"
	else; fcardg = cardg
	--
	if cardus == 1; fcardus = "♥"
	elseif cardus == 2; fcardus = "♦"
	elseif cardus == 3; fcardus = "♣"
	elseif cardus == 4; fcardus = "♠"
	--
	if cardgs == 1; fcardzs = "♥"
	elseif cardgs == 2; fcardzs = "♦"
	elseif cardgs == 3; fcardzs = "♣"
	elseif cardgs == 4; fcardzs = "♠"
	--
	field = "\_q\1Your Card:\n\n[half]%(fcardu)%(fcardus)\0\b[2]"
	--
	if repairglitch != 1; field += "M̴y̸ ̸C̴a̸r̷d̵:\n\n[half]%(fcardg)%(fcardzs)\n\n%(winorlosewar)\_q\n\n"
	else; field += "%(distingstart)My Card:\n\n[half]%(fcardg)%(fcardzs)\n\n%(winorlosewar)\_q\n\n"
}

//OX游戏，by Pygmalion, loosely translated by Zar
//edited some by vita to have the AI make mistakes
OnPlayOX
{
    //intializing a tictactoe array with all 0's
    arrOX = IARRAY
    for _i = 0; _i < 9; _i++ {
        arrOX = (arrOX, 0)
    }
    --
    PlayOXshow(0)
}

PlayOXshow
{
	games++
	m201relationship++
	--
	if mood[1] >= 0; mood[1]--
	--
    //this function prints out the tictactoe array
    _tempstr = ""
    
    for _i = 0; _i < 3; _i++ {
        
        for _j = 0; _j < 3; _j++ {
            
            _temp = _i * 3 + _j
            
            
            if arrOX[_temp] == -1
                _tempstr = _tempstr + "X"
            elseif arrOX[_temp] == 1
                _tempstr = _tempstr + "O"
            elseif _argv[0] == 0
                _tempstr = _tempstr + "\q[　,PlayOXrun("+_temp+")]"
            else
                _tempstr = _tempstr + "　"
            if _j != 2
                _tempstr = _tempstr + " | "
        }
        _tempstr = _tempstr + "\n[90]"
        if _i != 2
        {
            _tempstr = _tempstr + "---------"
        }
        _tempstr = _tempstr + "\n[90]"
    }
    //switching btwn what dialogue to give. -> is the game over or not?
    switch _argv[0]
    {
        "\_q\0\s[0]\b[2]%(username)'s turn\n\n%(_tempstr)\n[half]"
        
        {
			userwins++
			--
			if repairglitch != 1; "\_q\0\b[2]\n%(_tempstr)\n[half]\_qI̷ ̸l̸o̷s̴t̷ ;-;\w8\w9\w9\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
			else; "\_q\0\b[2]\n%(_tempstr)%(distingstart)\n[half]\_qI lost ;-;\w8\w9\w9\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
		}
        
        {
			draws++
			--
			if repairglitch != 1; "\_q\0\b[2]\n%(_tempstr)\n[half]\_qS̴e̶e̸m̵s̸ ̵l̴i̷k̶e̷ ̸i̸t̷'̸s̴ ̴a̴ ̸t̷i̵e̴.\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
			else; "\_q\0\b[2]\n%(_tempstr)%(distingstart)\n[half]\_qSeems like it's a tie.\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
        }
        
        {
			userlosses++
			--
            if repairglitch != 1; "\_q\0\b[2]\n%(_tempstr)\n[half]\_q\nI̶ ̷w̴o̸n̴ ^^\w4 Woohoo!\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
			else; "\_q\0\b[2]\n%(_tempstr)%(distingstart)\n[half]\_q\nI won ^^\w4 Woohoo!\n[150]\_q\![*]\q[Play Again,OnPlayOX]"
        }
    }
	--
	"\n\n[half]\![*]\q[Back to game menu,gamez]\n\n\![*]\q[Back to main menu,BACKTOMENU]\n\![*]\q[Close,CANCEL]\e"
}

Select.PlayOXrun
{
    arrOX[_argv[0]] = -1
    

    if PlayOXover(_argv[0]) != 1
    {
        _tempid = -1
        _rightmax = -24
        _tempright = 0
        //loop through ox array
        for _i = 0; _i < 9; _i++ {
            //if it's a blank spot
            if arrOX[_i] == 0
            {
                //check if this would make a win for the AI
                arrOX[_i] = 1
                if PlayOXover(_i) == 1
                {
                    arrOX[_i] = 0
                    _tempid = _i
                    break
                }
                
                
                _rightmin = 24
                for _j = 0; _j < 9; _j++ {
                    if arrOX[_j] == 0
                    {
                        //anticipate the player's next move
                        arrOX[_j] = -1
                        _tempright = 0
                        _temparry = IARRAY
                        _temparry = (_temparry,arrOX[0] + arrOX[1] + arrOX[2]) //row 1
                        _temparry = (_temparry,arrOX[3] + arrOX[4] + arrOX[5]) //row 2
                        _temparry = (_temparry,arrOX[6] + arrOX[7] + arrOX[8]) //row 3
                        _temparry = (_temparry,arrOX[0] + arrOX[3] + arrOX[6]) //col 1
                        _temparry = (_temparry,arrOX[1] + arrOX[4] + arrOX[7]) //col 2
                        _temparry = (_temparry,arrOX[2] + arrOX[5] + arrOX[8]) //col 3
                        _temparry = (_temparry,arrOX[0] + arrOX[4] + arrOX[8]) //diag 1
                        _temparry = (_temparry,arrOX[2] + arrOX[4] + arrOX[6]) //diag 2
                        _oxnum = 0
                        foreach _temparry; _k {
                            _tempright += _k
                            if _k == -3
                                _oxnum = 24
                            if _k == -2
                                _oxnum++
                            if _k == 2
                                _oxnum--
                        }
                        if _oxnum > 1
                            _tempright = -24
                        if _tempright < _rightmin
                        {
                            _rightmin = _tempright
                        }
                        arrOX[_j] = 0
                    }
                }
                
                
                if _rightmin > _rightmax
                {
                    _rightmax = _rightmin
                    _tempid = _i
                }
                //change back
                arrOX[_i] = 0
            }
        }
        
        //determine if there are spaces left
        if (_tempid == -1) {
            //if so, semi-randomly pick a spot
            _tempid = OXMistakes()
        }
        
        
        //if tempid unchanged, its a tie
        if _tempid == -1 {
            PlayOXshow(2)
        }
        else
        {
            
            //make a move -> winning move for AI if found early on
            
            //tweak the chance as you feel like
            if RAND(100) < 15 {
                //function to determine random mistakes
                _tempid = OXMistakes()
                arrOX[_tempid] = 1
            } else {
                arrOX[_tempid] = 1
            }
            
            //if the move the AI made results in a win for the AI, show the win sentence for the AI, else continue
            if PlayOXover(_tempid) == 1
            {
                PlayOXshow(3)
            }
            else
            {
                PlayOXshow(0)
            }
        }
    }
    else //if the move the player made results in a win display player win dialogue
        PlayOXshow(1)
}

PlayOXover
{
    //function to determine if the tictactoe game is over (and one of the players have won)
    //argv is the square to check
    _nowrow = _argv[0] / 3
    _nowcolumn = _argv[0] % 3
    
    //first two check row and column for a completed line of x's or o's
    //last two check diagonals
    if arrOX[_nowrow*3] == arrOX[_nowrow*3+1] && arrOX[_nowrow*3+1] == arrOX[_nowrow*3+2] && arrOX[_nowrow*3] != 0 /
    || arrOX[_nowcolumn] == arrOX[3+_nowcolumn] && arrOX[3+_nowcolumn] == arrOX[6+_nowcolumn] && arrOX[_nowcolumn] != 0 /
    || arrOX[0] == arrOX[4] && arrOX[4] == arrOX[8] && arrOX[8] != 0 /
    || arrOX[2] == arrOX[4] && arrOX[4] == arrOX[6] && arrOX[6] != 0
    {
        1
    }
    else
        0
}

//first pass at adding in mistakes
OXMistakes {
    //randomly pick a spot, else pick the first open spot if the random spot picked is already filled
     _OXspot = RAND(9)
    if arrOX[_OXspot] == 0 {
        _OXspot
    } else {
        for _i = 0; _i < 9; _i++ {
            if arrOX[_i] == 0 {
                _i
            }
        }
        -1
    }
    
}


Select.act
{
	if repairglitch != 1; "H̴m̴?̶\n\n[half]"
	else; "%(distingstart)Hm?\n\n[half]"
	--
	if numofmood == 5 && m201relationship > 150
	{
		"\![*]\q[Cheer up,cheerup]\n"
		"\![*]\q[Comfort,cheerup]\n"
	}
	--
	"\![*]\q[Tell him...,tell]\n"
	//--
	//"\![*]\q[Joke,joke]\n"
	--
	if searchforhobby == 1
	{
		"\![*]\q[You might like...,like]\n"
		--
		if thingstolearn >= 1
		{
			//"\![*]\q[Teach him...,teach]\n"
		}
		--
		"\![*]\q[Recommend...,recc]\n"
	}
	--
	if plantcare != 1 && "virtual-gardener" _in_ m201zcharacter; "\![*]\q[Help me with plants,plantcare]\n"
	elseif plantcare = 1 && "virtual-gardener" _in_ m201zcharacter; "\![*]\q[Stop helping me with plants,plantcareno]\n"
	--
	"\n\n[half]\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

Select.plantcareno
{
	plantcare = 0
	--
	"%(distingstart)Taking matters into your own hands huh? ^^"
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

Select.plantcare
{
	plantcare = 1
	--
	"%(distingstart)Of course, I will gladly help ^^"
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

Select.cheerup
{
	"\![*]\q[You wouldn't be able to do anything anyways,OnCheerUp,couldntdoanythingsanyways]\n/
	\![*]\q[It's not your fault,OnCheerUp,notyourfault]\n/
	\![*]\q[*Sends Virtual Hugs*,OnCheerUp,sendshugs]\n"
	//\![*]\q[I'm sorry,OnCheerUp,sorry]\n"
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnCheerUp
{
	cheerups++
	--
	case reference0
	{
		when "couldntdoanythingsanyways"
		{
			if repairglitch != 1
			{
				"Y̷o̶u̸'̴r̵e̶ ̴r̸i̵g̴h̴t̶ ̷b̶u̶t̸ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"I̵ ̸k̸n̴o̸w̵ ̶b̷u̷t̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"I̷ ̴k̷n̷o̸w̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
			}
			else
			{
				"%(distingstart)You're right bu.\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"%(distingstart)I know but .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"%(distingstart)I know .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				--
				mood[5]++
			}
		}
		when "notyourfault"
		{
			if repairglitch != 1
			{
				"I̵ ̸k̸n̴o̸w̵ ̶b̷u̷t̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"I̷ ̴k̷n̷o̸w̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
			}
			else
			{
				"%(distingstart)I know but .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				"%(distingstart)I know .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				--
				mood[5]--
				mood[2]++
			}
		}
		when "sendshugs"
		{
			if repairglitch != 1
			{
				"He̸h̶,̵ ̸t̶h̷a̶n̸k̵s̴ ̵*̵S̸e̴n̸d̶s̶ ̴h̵u̴g̸s̷ ̶b̸a̴c̶k̵*̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
			}
			else
			{
				"%(distingstart)Heh, thanks *Sends hugs back*c̶k̵*̴ .\w7 .\w7 .\w7 .\w7 .\w7 .\w7"
				--
				mood[4]++
				mood[2]--
			}
		}
		when "sorry"
		{
			if repairglitch != 1
			{

			}
			else
			{
				"%(distingstart)"
			}
		}
	}
	--
	"\![Try again,cheerup] | \![Cancel,CANCEL]\e"
}

Select.teach
{
	"\![*]\q[Animal,OnTeachMZ,animal] | \![*]\q[Food,OnTeachMZ,food]\n/
	\![*]\q[Plant,OnTeachMZ,plant] | \![*]\q[Holiday,OnTeachMZ,holiday]\n"
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnTeachMZ
{
	case reference0
	{
		when "animal"
		{
			"%(ch)%(distingstart)Oh, what is it called?\![open,inputbox,OnLearn_Animal_one,-1]"
		}
		when "food"
		{
			
		}
		when "plant"
		{
			
		}
		when "holiday"
		{
			
		}
	}
}

OnLearn_Animal_one
{
	animals[animalslearnt] += reference0 + "."
	--
	if reference0 != ""
	{
		"%(ch)%(distingstart)%(reference0)? Is it a mamal, reptile, bird, a fish, amphibian or invertebrate?"
		--
		"\![*]\q[Mamal,OnLearn_Animal_two,mamal] | \![*]\q[Reptile,OnLearn_Animal_two,reptile]\n/
		\![*]\q[Bird,OnLearn_Animal_two,bird] | \![*]\q[Fish,OnLearn_Animal_two,fish]\n/
		\![*]\q[Amphibian,OnLearn_Animal_two,amphibian] | \![*]\q[Invertebrate,OnLearn_Animal_two,invertebrate]\n"
	}
	else
	{
		"%(distingstart).\w7 .\w7 .\w7 .\w7 .\w7 you didn't write anything"
	}
	--
	"\e"
}

OnLearn_Animal_two
{
	animals += reference0 + "."
	--
	if reference0 == "mamal"
	{
		"%(ch)%(distingstart)Oh does it have furr or hair?"
		--
		"\![*]\q[Fur,OnLearn_Animal_three,fur] | \![*]\q[Hair,OnLearn_Animal_three,hair] | /
		\![*]\q[It's Bald,OnLearn_Animal_three,bald]\e"
	}
	elseif reference0 == "reptile"
	{
		animals += "skales" + "."
		--
		OnLearn_Animal_three
	}
	elseif reference0 == "bird"
	{
		animals += "feathers" + "."
		--
		OnLearn_Animal_three
	}
	elseif reference0 == "fish"
	{
		animals += "fish scales" + "."
		--
		OnLearn_Animal_three
	}
	elseif reference0 == "amphibian"
	{
		animals += "skin" + "."
		--
		OnLearn_Animal_three
	}
	elseif reference0 == "invertebrate"
	{
		animals += "???" + "."
		--
		OnLearn_Animal_three
	}
}

OnLearn_Animal_three
{
	if reference0 != ""; animals += reference0 + "."
	--
	"%(ch)%(distingstart)How big is it?"
	--
	"\![*]\q[Very big,OnLearn_Animal_four,v_big] | \![*]\q[Big,OnLearn_Animal_four,big]\n/
	\![*]\q[Medium,OnLearn_Animal_four,medium] | \![*]\q[Small,OnLearn_Animal_four,small]\n/
	\![*]\q[Very Small,OnLearn_Animal_four,v_small]\e"
}

OnLearn_Animal_four
{
	animals += reference0 + "."
	--
	"%(ch)%(distingstart)Is it omnivore, herbivore or carnivore"
	--
	"\![*]\q[Herbivore,OnLearn_Animal_end,herb] | \![*]\q[Omnivore,OnLearn_Animal_end,omni]\n/
	\![*]\q[Carnivore,OnLearn_Animal_end,carni]\e"
}

OnLearn_Animal_end
{
	animalslearnt++
	--
	"%(distingstart)Got it! Now I know one animal more ^^"
}

Select.recc
{
	"\![open,inputbox,OnRecc,-1]\e"
}

OnRecc
{
	if reference0 != ""
	{
		"%(distingstart)%(reference0)? What's that?"
		--
		"\![*]\q[Book,OnRecc_save,book] | \![*]\q[Comic,OnRecc_save,comic]\n/
		\![*]\q[Manga,OnRecc_save,manga] | \![*]\q[Manhwa,OnRecc_save,manhwa]\n/
		\![*]\q[Anime,OnRecc_save,anime] | \![*]\q[Cartoon,OnRecc_save,cartoon]\n/
		\![*]\q[Serial,OnRecc_save,serial] | \![*]\q[Movie,OnRecc_save,movie]\n/
		\![*]\q[Song,OnRecc_save,song] | \![*]\q[Band,OnRecc_save,band]\n/
		\![*]\q[Author,OnRecc_save,author]" //| \![*]\q[Genre,OnRecc_save,genre]\n/"
	}
	else
	{
		"%(distingstart).\w7 .\w7 .\w7 .\w7 .\w7 you didn't write anything"
	}
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnRecc_save
{
	uknowthis = TOLOWER(reference0)
	--
	case reference0
	{
		when "book"
		{
			recommended[0] += TOLOWER(reference0) + "."
			--
			//if uknowthis == "SILO"
			//{

			//}
			//else
			//{
				"%(distingstart)Hope I will be able to read it soon ^^"
			//}
		}
		when "comic"
		{
			recommended[1] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to read it soon ^^"
		}
		when "manga"
		{
			recommended[2] += reference0 + "."
			--
			if "manga-geek " !_in_ m201zcharacter
			{
				"%(distingstart).\w5 .\w5 .\w5 What's manga?"
				--
				"\![*]\q[Japanese Comics,OnExplain,manga,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,manga,iaintateach]"
			}
			else
			{
				"%(distingstart)Hope I will be able to read it soon ^^"
			}
		}
		when "manhwa"
		{
			recommended[3] += reference0 + "."
			--
			if "manhwa-geek " !_in_ m201zcharacter
			{
				"%(distingstart)What is 'manhwa'?"
				--
				"\![*]\q[Korean Comics,OnExplain,manhwa,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,manhwa,iaintateach]"

			}
			else
			{
				"%(distingstart)Hope I will be able to read it soon ^^"
			}
		}
		when "anime"
		{
			recommended[4] += reference0 + "."
			--
			if  "anime-geek " !_in_ m201zcharacter
			{
				"%(distingstart)Uhm .\w6 .\w6 .\w6 .\w6 .\w6 what's anime?"
				--
				"\![*]\q[Japanese Animation,OnExplain,anime,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,anime,iaintateach]"
			}
			else
			{
				"%(distingstart)Hope I will be able to watch it soon ^^"
			}
		}
		when "cartoon"
		{
			recommended[5] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to watch it soon ^^"
		}
		when "serial"
		{
			recommended[6] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to watch it soon ^^"
		}
		when "movie"
		{
			recommended[7] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to watch it soon ^^"
		}
		when "song"
		{
			recommended[8] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to listen to it soon ^^"
		}
		when "band"
		{
			recommended[9] += reference0 + "."
			--
			if uknowthis == "7 graves"; "%(distingstart)Oh, I think I know them! I saw one of their song on youtube, I think it was '%(7graves)'"
			elseif uknowthis == "glass animals"; "%(distingstart)Oh, I think I know them! I saw one of their song on youtube, I think it was '%(glassanimals)'"
			else; "%(distingstart)Hope I will be able to listen to it soon ^^"
		}
		when "author"
		{
			recommended[10] += reference0 + "."
			--
			"%(distingstart)Hope I will be able to read some of their books soon ^^"
		}
		when "genre"
		{
			recommended[11] += reference0 + "."
			--
			"%(distingstart)" //???
		}

	}
}

Select.like
{
	"\_q\b2Reading\n"
	--
	"\n[half]\![*]\q[Books,OnHobby,books] | \![*]\q[Comics,OnHobby,comics] | \![*]\q[Mangas,OnHobby,manga]\n/
	\![*]\q[Manhwas,OnHobby,manhwa]\n"
	--
	"\n[half]Watching\n"
	--
	"\n[half]\![*]\q[Anime,OnHobby,anime] | \![*]\q[Cartoons,OnHobby,cartoon] | \![*]\q[Movies,OnHobby,movie]\n"
	--
	"\n[half]\![*]\q[Cooking,OnHobby,cooking]\n/
	\![*]\q[Art,OnHobby,art]\n/
	\![*]\q[Music,OnHobby,music]\n/
	\![*]\q[Photography,OnHobby,photo]\n/
	\![*]\q[Sports,OnHobby,sport]\n/
	\![*]\q[Gardening,OnHobby,plants]\n/
	\![*]\q[Technology,OnHobby,plants]\n/
	\![*]\q[Animals,OnHobby,animal]\n"
	--
	"\n\n[half]\![*]\q[Go Back,act]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnHobby
{
	case reference0
	{
		when "books"
		{
			m201relationship++
			--
			if "book-worm" !_in_ m201zcharacter
			{
				"%(distingstart)Books? well, it might be nice\w3 but as long as I'm trapped here, I probably won't be able to read anything,\w3 unless you have some ebooks here .\w5 .\w5 .\w5 .\w5 .\w5 "
				--
				if " books " _in_ questionsasked; "Do you like to read books?\n\n[half]\q[Yes,OnUChar,book-worm,yes] | \q[No,OnUChar,book-worm,no]"
				--
				m201zcharacter += "book-worm "
			}
			else
			{
				randbook = RAND(100)
				--
				OnBookStuff
				--
				"%(distingstart)I searched the web for some books and I found '%(booksplit[randbook])' by %(authorsplit[randbook])"
				--
				if "book-worm" _in_ usercharacter; ",\w3 not sure what is it about maybe you might give it a read?"
				else; ",\w3 someday I might be able to read it"
			}
		}
		when "comics"
		{
			m201relationship++
			--
			if "comics-nerd" !_in_ m201zcharacter
			{
				"%(distingstart)Comics?\w8 like the superhero ones?\w8 Well\w7 when I find a new body I might as well give it a try"
				--
				m201zcharacter += "comics-nerd "
			}
			else
			{
				"%(distingstart)Someday I will for sure read some"
			}
		}
		when "manga"
		{
			m201relationship++
			--
			if "manga-geek" !_in_ m201zcharacter
			{
				"%(distingstart).\w5 .\w5 .\w5 What's manga?"
				--
				"\![*]\q[Japanese Comics,OnExplain,manga,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,manga,iaintateach]"
			}
			else
			{
				"%(distingstart)Someday I will for sure read some"
			}
		}
		when "manhwa"
		{
			m201relationship++
			--
			if "manhwa-geek" !_in_ m201zcharacter
			{
				"%(distingstart)What is 'manhwa'?"
				--
				"\![*]\q[Korean Comics,OnExplain,manhwa,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,manhwa,iaintateach]"
			}
			else
			{
				"%(distingstart)Someday I will for sure read some"
			}
		}
		when "anime"
		{
			m201relationship++
			--
			if "anime-geek" !_in_ m201zcharacter
			{
				"%(distingstart)Uhm .\w6 .\w6 .\w6 .\w6 .\w6 what's anime?"
				--
				"\![*]\q[Japanese Animation,OnExplain,anime,lemmeexplain] | \![*]\q[. . . you know what, forget it,OnExplain,anime,iaintateach]"
			}
			else
			{
				"%(distingstart)Someday I will for sure watch some"
			}
		}
		when "cartoon"
		{
			m201relationship++
			--
			if "cartoon-geek" !_in_ m201zcharacter
			{
				"%(distingstart)Huh? Cartoons? well, I don't see why not"
				--
				m201zcharacter += "cartoon-geek "
			}
			else
			{
				"%(distingstart)Someday I will for sure watch some"
			}
		}
		when "movie"
		{
			m201relationship++
			--
			if "movie-geek" !_in_ m201zcharacter
			{
				"%(distingstart)Movies? Well, I don't see why not"
				--
				m201zcharacter += "movie-geek "
			}
			else
			{
				"%(distingstart)Someday I will for sure watch some"
			}
		}
		when "cooking"
		{
			if "kiss-the-cook" !_in_ m201zcharacter
			{
				"%(distingstart)I feel like someone who can't even taste or smell his dish will not be the best at cooking, it was a nice idea though"
				--
				m201zcharacter += "kiss-the-cook "
			}
			else
			{
				"%(distingstart)Cooking is sadly off my limits"
			}
		}
		when "art"
		{
			m201relationship++
			--
			if "what-is-art" !_in_ m201zcharacter
			{
				"%(distingstart)Art? .\w6 .\w6 .\w6 .\w6 actually\w3 I tried drawing before,\w8 it was not the best but practice makes perfect right?"
				--
				m201zcharacter += "what-is-art "
			}
			else
			{
				"%(distingstart)Maybe DAVD has some of my drawings still on his computer? Well, when I find him I will be sure to show you"
			}
		}
		when "music"
		{
			m201relationship++
			--
			if "MP3-player" !_in_ m201zcharacter
			{
				m201zcharacter += "MP3-player "
				--
				"%(distingstart)Music? Like playing an instrument? That might be a good idea actually, but I will haveto wait untill I find a new body .\w6 .\w6 .\w6 .\w6 .\w6 Do you play any instruments?"
				--
				"\![*]\q[Yes,OnUChar,music,yes] | \![*]\q[No,OnUChar,music,no]"
			}
			else
			{
				"%(distingstart)Finding a body might take some time, maybe I should learn musical notes by then?"
			}
		}
		when "photo"
		{
			if "photo-bot" !_in_ m201zcharacter
			{
				"%(distingstart)Huh, photography is not for me, maybe someday I will try though"
				--
				m201zcharacter += "photo-bot "
			}
			else
			{
				"%(distingstart)Huh, photography is not for me, maybe someday I will try though"
			}
		}
		when "sport"
		{
			m201relationship--
			--
			if "say-no-to-workout" !_in_ m201zcharacter
			{
				"%(distingstart)-,- ha ha ha very funny .\w7 .\w7 .\w7 maybe when I find a new body I will try some kind of sport."
				--
				m201zcharacter += "say-no-to-workout "
			}
			else
			{
				"%(distingstart)-,-"
			}
		}
		when "plants"
		{
			m201relationship++
			--
			if "trees-are-nice" !_in_ m201zcharacter
			{
				"%(distingstart)Gardening? Unless you have some spare body for me it won't work, well, I might search for some info on plants but gardening itself is, sadly, out of my reach for now."
				--
				m201zcharacter += "trees-are-nice "
			}
			else
			{
				plantnum = ARRAYSIZE(plants)
				randplant = RAND(plantnum)
				plantsplit = SPLIT(plants[randplant],".")
				plantname = plantsplit[0]
				plantcolors = SPLIT(plantsplit[1],"+")
				colornum = ARRAYSIZE(plantcolors)
				randcolor = RAND(colornum)
				--
				"%(distingstart)DAVD also said that I should try gardening,\w5 I never did since I didn't have a body but DAVD seems happy that I was interested in his hobby."
				"%(distingstart)DAVD liked plants,\w7 with how busy he was I'm suprised those plants even survived."
				"%(distingstart)One time DAVD showed me a %(plantcolors[randcolor]) %(plantname),\w6 it was beautiful"
			}
		}
		when "animal"
		{
			if "pet-the-lizard" !_in_ m201zcharacter
			{
				"%(distingstart)Animals huh? I don't even know any animals ;-; .\w5 .\w5 .\w5 I can actully search the web for some if you don't mind, this will be a good opportuninty to learn."
				--
				m201zcharacter += "pet-the-lizard "
				petthelizard = 120
				thingstolearn++
			}
			else
			{
				if animalslearnt < 1; "%(distingstart)I .\w8 .\w8 .\w8 still don't know any animals ._."
				else; "%(distingstart)Animals seems interesting"
			}
		}
		when "tech"
		{
			if "tech-nerd" !_in_ m201zcharacter
			{
				"%(distingstart)Guess that could work? But I don't know if it will stick, technology might be where I started but it might not be I will end up"
				--
				m201zcharacter += "tech-nerd "
			}
			else
			{
				"%(distingstart)Technology is an interesting topic"
			}
		}
	}
}

OnUChar
{
	case reference0
	{
		when "book-worm"
		{
			questionsasked += " books "
			--
			case reference1
			{
				when "yes"
				{
					usercharacter += " book-worm "
					--
					"%(distingstart)That's nice ^^"
				}
				when "no"
				{
					"%(distingstart)Well, not every hobby is for everyone ^^"
				}
			}
		}
		when "music"
		{
			questionsasked += " music "
			--
			case reference1
			{
				when "yes"
				{
					usercharacter += " musician "
					--
					"%(distingstart)That's cool :O what do you play?\![open,inputbox,OnInstrument,-1]"
				}
				when "no"
				{
					"%(distingstart)Well, not every hobby is for everyone ^^"
				}
			}
		}
	}
}

OnInstrument
{
	userplaysmusic = reference0
	--
	"%(distingstart)%(reference0)? That's so cool!"
}

Select.tell
{
	_logs = FENUM(+)
	--
	"\![*]\q[You look nice,OnTell,ulooknoice]\n/
	\![*]\q[You're funny,OnTell,ufunny]\n/
	\![*]\q[You're nice,OnTell,unice]\n/
	\![*]\q[I like your company,OnTell,nicecompany]\n"
	//--
	//if "Log#12.10" _in_ _logs
	//{
	//	"\![*]\q[Log#12.10,OnOldNotebook,log]\n"
	//}
	--
	"\n\n[half]\![*]\q[Back to main menu,BACKTOMENU]\n/
	\![*]\q[Nevermind,CANCEL]\e"
}

OnTell
{
	case reference0
	{
		when "ulooknoice"
		{
			if repairglitch != 1
			{
				case numofmood
				{
					when 0,1
					{
						".\w5 .\w5 .\w5?"
					}
					when 2,5
					{
						".\w5 .\w5 .\w5 W̶a̴s̵ ̷t̶h̴a̴t̴ ̶s̷u̷p̷p̴o̸s̵e̵d̴ ̸t̵o̵ ̷b̴e̸ ̸a̷ ̴j̷o̵k̷e̴?̶\w3 w̷e̷l̵l̵,\w2 i̴t̴ ̸w̵a̷s̸ ̴a̸n̴ ̷a̵w̴f̴u̴l̷ ̶o̸n̵e̶"
						".\w5 .\w5 .\w5 I̵f̷ ̵t̴h̴a̷t̷ ̴w̶a̷s̸ ̴a̸ ̴j̸o̷k̷e̸ ̵i̵t̵ ̵w̴a̷s̴ ̷a̸n̵ ̵a̵w̷f̶u̸l̷ ̴o̵n̷e̵"
						".\w5 .\w5 .\w5"
					}
					when 3,4
					{
						".\w5 .\w5 .\w5"
					}
				}
				--
				mood[2]++
				mood[3]--
				mood[4]--
				m201relationship--
			}
			else
			{
				case numofmood
				{
					when 0,1
					{
						"%(distingstart).\w5 .\w5 .\w5?"
					}
					when 2,5
					{
						"%(distingstart).\w5 .\w5 .\w5 Was that supposed to be a joke?\w3 well,\w2 it was an awful one"
						"%(distingstart).\w5 .\w5 .\w5 If that was a joke it was an awful one"
						"%(distingstart).\w5 .\w5 .\w5"
					}
					when 3,4
					{
						"%(distingstart).\w5 .\w5 .\w5"
					}
				}
				--
				mood[2]++
				mood[3]--
				mood[4]--
				m201relationship--
			}
		}
		when "ufunny"
		{
			m201relationship++
			--
			if repairglitch != 1
			{
				case numofmood
				{
					when 0,1
					{
						"H̶u̵h̵?̵\w7 ̷T̶h̶a̸n̶k̷s̸?̸\w7 ̸I̸ ̴g̶u̴e̷s̷s̶?\w7"
						"T̵h̶a̵n̷k̴s̴ ̸I̵ ̶g̵u̴e̴s̵s̵?̸"
					}
					when 2,5
					{
						"U̸h̵m̸,̵\w7 ̷t̵h̶a̶n̴k̵s̶ ̵I̵\w4 g̸u̶e̴s̴s̴"
					}
					when 3,4
					{
						"H̶u̵h̵?̵\w7 ̷T̶h̶a̸n̶k̷s̸?̸\w7 ̸I̸ ̴g̶u̴e̷s̷s̶?\w7"
						"B̴u̴t̷ ̵I̵ ̴d̶o̸n̴'̵t̴ ̴t̷h̶i̷n̵k̸ ̸I̴ ̶t̷o̴l̵d̵ ̷a̵n̷y̶ ̴j̸o̴k̸e̶s̴?̸"
					}
				}
			}
			else
			{
				case numofmood
				{
					when 0,1
					{
						"%(distingstart)Huh? Thanks? I guess?"
						"%(distingstart)Thanks I guess?"
					}
					when 2,5
					{
						"%(distingstart)Uhm, thanks I\w4 guess"
					}
					when 3,4
					{
						"%(distingstart)Huh? Thanks? I guess?"
						"%(distingstart)But I don't think I told any jokes?"
					}
				}
			}
			--
			mood[4]++
		}
		when "unice"
		{
			m201relationship++
			--
			if repairglitch != 1
			{
				case numofmood
				{
					when 0
					{
						"T̵h̷a̵n̷k̸s̵,̷ ̵I̷ ̷t̸h̷i̴n̴k̸ ̸y̷o̴u̷'̷r̶e̷ ̵n̴i̸c̴e̷ ̴t̵o̴o̴ ^^"
					}
					when 1
					{
						"O̸h̸?̶\w8 ̷t̵h̶a̵n̸k̶s̷  ^^"
					}
					when 2
					{
						"O̸h̸,\w8 ̷t̵h̶a̵n̸k̶s̷  .\w5 .\w5 .\w5"
						"O̸h̸?̶\w8 ̷t̵h̶a̵n̸k̶s̷  .\w5 .\w5 .\w5"
					}
					when 3,4
					{
						"T̶h̴a̷n̵k̵s̴,̵ ̴I̸ ̶t̸h̷i̷n̴k̴ ̴y̸o̴u̷'̵r̸e̶ ̴n̷i̵c̷e̶ ̵t̸o̶o̴ ^^"
						"T̸h̴a̷n̸k̸s̴!̵ ̸Y̶o̷u̸'̶r̵e̷ ̸n̵i̵c̷e̶ ̴t̶o̶o̸ :D"
					}
					when 5
					{
						"O̸h̸?̶\w8 ̷t̵h̶a̵n̸k̶s̷  .\w5 .\w5 .\w5"
						--
						mood[5]++
					}
				}
			}
			else
			{
				case numofmood
				{
					when 0
					{
						"%(distingstart)Thanks, I think you're nice too ^^"
					}
					when 1
					{
						"%(distingstart)Oh? Thanks ^^"
					}
					when 2
					{
						"%(distingstart)Oh, thanks .\w5 .\w5 .\w5"
					}
					when 3
					{
						"%(distingstart)Thanks, I think you're nice too ^^"
						"%(distingstart)Thanks! You're nice too :D"
					}
					when 4
					{
						"%(distingstart)Thanks, I think you're nice too ^^"
						"%(distingstart)Thanks! You're nice too :D"
					}
					when 5
					{
						"%(distingstart)Oh? thanks .\w5 .\w5 .\w5"
						--
						mood[5]++
					}
				}
			}
			--
			mood[4]++
			mood[3]++
		}
		when "nicecompany"
		{
			m201relationship++
			--
			if repairglitch != 1
			{
				case numofmood
				{
					when 0,1
					{
						"T̷h̸a̸t̴'̵s̸ ̵n̷i̵c̶e̶ ̸t̶o̶ ̷h̴e̸a̵r̴ ^^ T̵h̷a̸n̷k̶ ̵y̸o̸u̷"
					}
					when 2
					{
						"O̸h̸?̶\w8 ̷t̵h̶a̵n̸k̶s̷ .\w8 .\w8 .\w8"
					}
					when 3,4
					{
						"t̴h̷a̶n̴k̴s̶,̶ ̸I̵ ̶t̴h̴i̵n̸k̵ ̴y̶o̵u̷'̶r̴e̵ ̷n̷i̴c̸e̷ ̸t̴o̸o̶ ^^"
						"T̸h̵a̵n̷k̵s̴!̸ ̴Y̴o̴u̷'̵r̶e̷ ̶n̴i̸c̷e̷ ̵t̸o̸o̵ :D"
					}
					when 5
					{
						"O̸h̸?̶\w8 ̷t̵h̶a̵n̸k̶s̷ .\w8 .\w8 .\w8"
						--
						mood[5]++
					}
				}
			}
			else
			{
				case numofmood
				{
					when 0,1
					{
						"%(distingstart)That's nice to hear ^^ Thank you"
					}
					when 2
					{
						"%(distingstart)Oh?\w8 thanks .\w8 .\w8 .\w8"
					}
					when 3,4
					{
						"%(distingstart)Thanks, I think you're nice too ^^"
						"%(distingstart)Thanks! You're nice too :D"
					}
					when 5
					{
						"%(distingstart)Oh?\w8 thanks .\w8 .\w8 .\w8"
						--
						mood[5]--
					}
				}
			}
		}
	}
	--
	"\e"
}

OnBookStuff
{
	_file = "var\\book.html"
    _buff= ""
    _regquote = 'aria-level=' + "'" + 4 + "'" + '>(.*)</span>'
    _regeauthor = '<span itemprop="name">([\w|\s]*)</span></a>'
	_booklinkregex = '<a class="bookTitle" itemprop="url" href="(.*)">'
    quote = ""
    author = ""
    _found = 0
	bookpage = "\b2\_q\*"
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1 && !_found; _buff = FREAD(_file){

			if RE_SEARCH ( _buff, _regquote ); quote += RE_GETSTR[1] + "+"  
			--
			if RE_SEARCH ( _buff, _regeauthor ); author += RE_GETSTR[1] + "+"  
			--
			if RE_SEARCH ( _buff, _booklinkregex ); booklink += RE_GETSTR[1] + "+"  
		}
    }
    --
    FCLOSE(_file);
    --
	quote = REPLACE(quote,",","~~")
	booksplit = SPLIT(quote,"+")
	--
	booklink = SPLIT(booklink,"+")
	--
	author = REPLACE(author,",","~~")
	authorsplit = SPLIT(author,"+")
}


OnExplain
{
	case reference0
	{
		when "manga"
		{
			explained += "manga  "
			--
			if reference1 == "lemmeexplain"
			{
				"%(distingstart)Comics?\w8 well,\w7 sounds good for me\w7 when I find a new body I might give it a try"
				--
				m201zcharacter += "manga-geek "
			}
			else
			{
				"%(distingstart)Uh .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 alright then"
			}
		}
		when "manhwa"
		{
			explained += "manhwa" 
			--
			if reference1 == "lemmeexplain"
			{
				"%(distingstart)Comics?\w8 well,\w7 sounds good for me\w7 when I find a new body I might give it a try"
				--
				m201zcharacter += "manhwa-geek "
			}
			else
			{
				"%(distingstart)Uh .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 alright then"
			}
		}
		when "anime"
		{
			explained += "anime "
			--
			if reference1 == "lemmeexplain"
			{
				"%(distingstart)Oh,\w5 that sounds cool,\w6 maybe we will get watch some together someday!"
				--
				"\![*]\q[I hope so!,animeandchill,ye] | \![*]\q[I don't like anime,animeandchill,noweebshere] | \![*]\q[Uhm, no thanks,animeandchill,wowmean]"
				--
				m201zcharacter += "anime-geek "
			}
			else
			{
				"%(distingstart)Uh .\w8 .\w8 .\w8 .\w8 .\w8 .\w8 alright then"
			}
		}
	}
}

Select.animeandchill
{
	if reference0 == "ye"
	{
		usercharacter += " anime-geek "
		--
		"%(distingstart)Yay :D"
		mood[2]--
		mood[3]++
		mood[4]++
	}
	elseif reference0 == "noweebshere"
	{
		usercharacter += " say-no-to-weebs "
		--
		"%(distingstart)Oh,\w6 really? Well\w6 guess I'm stuck watching by myself"
	}
	else
	{
		"%(distingstart)Oh .\w8 .\w8 .\w8 .\w8 .\w8"
		--
		mood[2]++
		mood[3]--
		mood[4]--
	}
	--
	questionsasked += " anime-and-chill "
}


OnMakao
{
    "\_qHow many cards?\n\n[half]"
    --
    "\![*]\q[5,OnDrawCards,5]\n/
    \![*]\q[10,OnDrawCards,10]\n/
    \![*]\q[15,OnDrawCards,15]\n"
    --
    "\n[half]\![*]\q[Nevermind,CANCEL] | \![*]\q[Go Back,gamez]"
}

OnDrawCards
{
    cardnum = TOINT(reference0)
	usercnum = cardnum
	mzcnum = cardnum
	warmode = 0
	stoprightthere = 0
	spoilsofwar = 0
	gimmethenumber = 0
	wait = 0
	dialog = 0
	temp = 0
	spoilsofwar = 0
	turn = username
	iwant = 0
	kartyU = ""
	kartyMz = ""
    table = "%(cha)\b6\0\_q| "
	--
	_tablecardnum = RAND(6)
	_tablecardznak = RAND(4)
	--
	if _tablecardznak == 1; _tablecardznak = "♥"
	elseif _tablecardznak == 2; _tablecardznak = "♦"
	elseif _tablecardznak == 3; _tablecardznak = "♣"
	else; _tablecardznak = "♠"
	--
	if _tablecardnum == 0; _tablecardnum = 5
	elseif _tablecardnum == 1; _tablecardnum = 6
	elseif _tablecardnum == 2; _tablecardnum = 7
	elseif _tablecardnum == 3; _tablecardnum = 8
	elseif _tablecardnum == 4; _tablecardnum = 9
	else; _tablecardnum = 10
	--
	tablecard = _tablecardnum + " " + _tablecardznak
    --
    for _i = 0; _i < cardnum ; _i++
    {   
        _cardsU[_i] = RAND(13) + 1
        _cardsMz[_i] = RAND(13) + 1
        _znakiU[_i] = RAND(4)
        _znakiMz[_i] = RAND(4)
        --
        if _cardsU[_i] == 11;  _cardsU[_i] = "J"
        elseif _cardsU[_i] == 12; _cardsU[_i] = "Q"
        elseif _cardsU[_i] == 13; _cardsU[_i] = "K"
		elseif _cardsU[_i] == 1; _cardsU[_i] = "A"
        --
        if _cardsMz[_i] == 11;  _cardsMz[_i] = "J"
        elseif _cardsMz[_i] == 12; _cardsMz[_i] = "Q"
        elseif _cardsMz[_i] == 13; _cardsMz[_i] = "K"
		elseif _cardsMz[_i] == 1; _cardsMz[_i] = "A"
        --
        if _znakiU[_i] == 1
        {
            _znakiU[_i] = "♥"
			kartyUHs[_i] = "HRT"
        }
        elseif _znakiU[_i] == 2
        {
            _znakiU[_i] = "♦"
			kartyUHs[_i] = "DMD"
        }
        elseif _znakiU[_i] == 3
        {
            _znakiU[_i] = "♣"
			kartyUHs[_i] = "TRE"
        }
        else
        {
            _znakiU[_i] = "♠"
			kartyUHs[_i] = "BHRT"
        }
        --
        if _znakiMz[_i] == 1
        {
            _znakiMz[_i] = "♥"
			kartyMZs[_i] = "HRT"
        }
        elseif _znakiMz[_i] == 2
        {
            _znakiMz[_i] = "♦"
			kartyMZs[_i] = "DMD"
        }
        elseif _znakiMz[_i] == 3
        {
            _znakiMz[_i] = "♣"
			kartyMZs[_i] = "TRE"
        }
        else
        {
            _znakiMz[_i] = "♠"
			kartyMZs[_i] = "BHRT"
        }
        --
		kartyUH[_i] = _cardsU[_i] + " " + _znakiU[_i]
		--
        kartyMz[_i] = _cardsMz[_i] + " " + _znakiMz[_i]
    }
	--
	OnSetTable
}

OnCardChoice
{
	_cardnum = TOINT(reference2)
	--
	for _i = _cardnum; _i <= usercnum; _i++
	{
		kartyUH[_i] = kartyUH[_i+1]
	}
	-- 
	if reference0 == "3" || reference0 == "2" || reference0 == "K"
	{
		warmode = 1	
		--
		if reference0 == "2"; spoilsofwar += 2
		elseif reference0 == "3"; spoilsofwar += 3
		else; spoilsofwar += 5
	}
	elseif reference0 == "A"
	{
		iwant = 1
	}
	elseif reference0 == "Q"
	{
		iwant = 0
		spoilsofwar = 0
		warmode = 0
		stoprightthere = 0
		wait = 0
		gimmethenumber = 0
	}
	elseif reference0 == "J"
	{
		gimmethenumber = 1
	}
	elseif reference0 == "4"
	{
		stoprightthere = 1
		wait++
	}
	elseif gimmethenumber == 1
	{
		gimme = reference0
		gimmethenumber = 2
	}
	elseif gimmethenumber == 2
	{
		gimmethenumber = 3
	}
	--
	tablecard = reference0 + " " + reference1
	usercnum--
	turn = "M-201z"
	--
	OnSetTable
	//--
	//OnCardChoiceMz
}

OnMakaostuff
{
	if reference0 == "makao"
	{
		usermakao = 1
	}
	elseif reference0 == "stopmakao"
	{
		
	}
	elseif reference0 == "takecard"
	{
		_cardsU = RAND(13) + 1
		_znakiU = RAND(4)
		--
		if _znakiU == 1
		{
			_znakiU = "♥"
			kartyUHs[usercnum] = "HRT"
		}
		elseif _znakiU == 2
		{
			_znakiU = "♦"
			kartyUHs[usercnum] = "DMD"
		}
		elseif _znakiU == 3
		{
			_znakiU = "♣"
			kartyUHs[usercnum] = "TRE"
		}
		else
		{
			_znakiU = "♠"
			kartyUHs[usercnum] = "BHRT"
		}
		--
		if _cardsU == 11; _cardsU = "J"
		elseif _cardsU == 12; _cardsU = "Q"
		elseif _cardsU == 13; _cardsU = "K"
		elseif _cardsU == 1; _cardsU = "A"
		--
		kartyUH[usercnum] = _cardsU + " " + _znakiU
		--
		usercnum++
		--
		turn = "M-201z"
		--
		OnSetTable
	}
}

OnSetTable
{
    table = "%(cha)\_q"
   	--
	case dialog
	{
		table += "\p[2]"
		--
		when "take"
		{
			table += "M-201z takes a card"
		}
		when "waiting"
		{
			table += "M-201z put's a 4 on the table, will you wait %(wait) turns?"
		}
		when "war-cards"
		{
			table += "M-201z took %(spoilsofwar) cards, ending the war"
		}
		when "casual"
		{
			table += "M-201z put %(tablecard) on the table"
		}
		when "gimme"
		{
			table += "M-201z put a J on the table, he demands %(gimme)"
		}
		when "i-want"
		{
			table += "M-201z put a A on the table, he demands %(temp)"
			--
			tablecard = "A " + temp
		}
		when "war_start"
		{
			table += "\1M-201z put %(tablecard) on the table, starting a war"
		}
		when "war"
		{
			table += "M-201z put %(tablecard) on the table, war continues"
		}
		when "wait-a-sec"
		{
			table += "M-201z put a 4 on the table, are you going to wait 1 turn?"
		}
		when "am-waiting"
		{
			table += "M-201z waits a turn"
		}
		others
		{
			table = "%(cha)\_q"
		}
		--
		table += "\0\b6|"
	}
	--
	if usercnum == 0
	{
		"%(distingstart)%(cha)\b6\0\_qLooks like it's your win\n\n\n[half]"
		--
		"\n[half]\![*]\q[Nevermind,CANCEL] | \![*]\q[Back to game menu,gamez] | \![*]\q[Play Again,OnMakao]\e"
	}
	elseif mzcnum == 0
	{
		"%(distingstart)%(cha)\b6\0\_qLooks like it's my win\n\n\n[half]"
		--
		"\n[half]\![*]\q[Nevermind,CANCEL] | \![*]\q[Back to game menu,gamez] | \![*]\q[Play Again,OnMakao]\e"
	}
	--
	if iwant == 1
	{
		"\_qChoose suit:\n\n[half]"
		--
		"\q[♥,OnChangeSign,heart] | \q[♦,OnChangeSign,diamond] | \q[♣,OnChangeSign,tree] | \q[♠,OnChangeSign,bheart]"
	}
	elseif gimmethenumber == 1
	{
		table += "What number fo you want?\n\n[half]"
		--
		for _i = 0; _i < usercnum ; _i++
		{   
			_usplit = SPLIT(kartyUH[_i]," ")
			--
			_splitcard = SPLIT(tablecard," ")
			--
			if _usplit[0] != "K" || _usplit[0] != "Q" || _usplit[0] != "A"  || _usplit[0] != "2" || _usplit[0] != "3" || _usplit[0] != "4"
			{
				kartyU[_i] = "\q[" + _usplit[0] + " " + _usplit[1] + "+OnCardChoice+" + _usplit[0] + "+" + _usplit[1] + "+" + _i + "]"
			}
			else
			{
				kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
			}
			--
			table += REPLACE(kartyU[_i],"+",",") + " | "
		}
		--
		table
	}
	elseif turn == username
	{
		if stoprightthere == 2
		{
			wait--
			--
			if wait == 0; stoprightthere = 0
			--
			OnMzTurn
		}
		else
		{ 
			for _i = 0; _i < usercnum ; _i++
			{   
				_usplit = SPLIT(kartyUH[_i]," ")
				--
				_splitcard = SPLIT(tablecard," ")
				--
				if warmode  == 1
				{
					if _usplit[0] == "3" || _usplit[0] == "2" || (_usplit[0] == "K" && _usplit[1] == "♠") || (_usplit[0] == "K" && _usplit[1] == "♥") || _usplit[0] == "Q"
					{
						kartyU[_i] = "\q[" + _usplit[0] + " " + _usplit[1] + "+OnCardChoice+" + _usplit[0] + "+" + _usplit[1] + "+" + _i + "]"
					}
					else
					{
						kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
					}
				}
				elseif gimmethenumber == 2 
				{
					if _usplit[0] == gimme || _usplit[0] == "Q"
					{
						kartyU[_i] = "\q[" + _usplit[0] + " " + _usplit[1] + "+OnCardChoice+" + _usplit[0] + "+" + _usplit[1] + "+" + _i + "]"
					}
					else
					{
						kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
					}
				}
				elseif stoprightthere == 1
				{
					if _usplit[0] == "4" || _usplit[0] == "Q"
					{
						kartyU[_i] = "\q[" + _usplit[0] + " " + _usplit[1] + "+OnCardChoice+" + _usplit[0] + "+" + _usplit[1] + "+" + _i + "]"
					}
					else
					{
						kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
					}
				}
				else
				{
					if _usplit[0] == _splitcard[0] || _usplit[1] == _splitcard[1] || _usplit[0] == "Q" || _splitcard[0] == "Q"
					{
						kartyU[_i] = "\q[" + _usplit[0] + " " + _usplit[1] + "+OnCardChoice+" + _usplit[0] + "+" + _usplit[1] + "+" + _i + "]"
					}
					else
					{
						kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
					}
				}
				--
				table += REPLACE(kartyU[_i],"+",",") + " | "
			}
			--
			table += "\n\n\n[half]Current Card: " + tablecard + "\n\n[half]Turn: " + turn + "\n\f[bold,1]Cards Left:\f[bold,0]\n%(username): %(usercnum)\nM-201z: %(mzcnum)\n\n[half]"
			--
			if usercnum == 1
			{
				//table += "\q[Makao! ,OnMakaostuff,makao] | "
			}
			--
			//table += "\q[Stop Makao! ,OnMakaostuff,stopmakao] | " + "\q[Take Card,OnMakaostuff,takecard]"
			if warmode  == 1; table += "\q[Take %(spoilsofwar) cards,OnUserWar]"
			elseif stoprightthere == 1; table += "\q[Wait %(wait) turns,OnNoFour]"
			else; table += "\q[Take Card,OnMakaostuff,takecard]"
			--
			//table += "\1%(kartyMz)"
			--
			table
		}
	}
	else
	{
		/*for _i = 0; _i < usercnum ; _i++
		{   
			_usplit = SPLIT(kartyUH[_i]," ")
			--
			_splitcard = SPLIT(tablecard," ")
			--
			kartyU[_i] = "\f[color+#555555]" + _usplit[0] + " " + _usplit[1] + "\f[default]"
			--
			table += REPLACE(kartyU[_i],"+",",") + " | "
		}
		--
		table += "\n\n\n[half]Current Card: " + tablecard + "\n\n[half]Turn: " + turn + "\n\f[bold,1]Cards Left:\f[bold,0]\n%(username): %(usercnum)\nM-201z: %(mzcnum)\n\n[half]"
		--
		if usercnum == 1
		{
			//table += "\q[Makao! ,OnMakaostuff,makao] | "
		}
		--
		//table += "\q[Stop Makao! ,OnMakaostuff,stopmakao] | " + "\q[Take Card,OnMakaostuff,takecard]"
		table += "\q[Take Card,OnMakaostuff,takecard]"
		--
		table
		--*/
		OnMzTurn
	}
	
}

OnNoFour
{
	stoprightthere = 2
	--
	OnMzTurn
}

OnUserWar
{
	for _i = 1; _i <= spoilsofwar; _i++
	{
		_cardsU = RAND(13) + 1
		_znakiU = RAND(4)
		--
		if _znakiU == 1
		{
			_znakiU = "♥"
			kartyUHs[usercnum] = "HRT"
		}
		elseif _znakiU == 2
		{
			_znakiU = "♦"
			kartyUHs[usercnum] = "DMD"
		}
		elseif _znakiU == 3
		{
			_znakiU = "♣"
			kartyUHs[usercnum] = "TRE"
		}
		else
		{
			_znakiU = "♠"
			kartyUHs[usercnum] = "BHRT"
		}
		--
		if _cardsU == 11; _cardsU = "J"
		elseif _cardsU == 12; _cardsU = "Q"
		elseif _cardsU == 13; _cardsU = "K"
		elseif _cardsU == 1; _cardsU = "A"
		--
		kartyUH[usercnum] = _cardsU + " " + _znakiU
		--
		usercnum++
	}
	--
	warmode = 0
	spoilsofwar = 0
	--
	turn = "M-201z"
	--
	OnSetTable
}

OnChangeSign
{
	if reference0 == "heart"; tablecard = "A ♥" 
	elseif reference0 == "diamond"; tablecard = "A ♦" 
	elseif reference0 == "tree"; tablecard = "A ♣" 
	else; tablecard = "A ♠" 
	--
	iwant = 0
	turn = "M-201z"
	--
	OnSetTable
}

OnMzTurn
{
	if stoprightthere == 3 && wait == 0
	{
		stoprightthere == 0
		--
		turn = username
		--
		dialog = "am-waiting"
		--
		OnSetTable
	}
	elseif stoprightthere == 3
	{
		wait-- 
		--
		turn = username
		--
		dialog = "am-waiting"
		--
		OnSetTable
	}
	--
	_x = 0
	--
	for _i = 0; _i <= mzcnum; _i++
	{ 
		_usplit = SPLIT(kartyMz[_i]," ")
		--
		_splitcard = SPLIT(tablecard," ")
		--
		if warmode == 1
		{
			if (_usplit[0] == "2" || _usplit[0] == "3" || _usplit[0] == "K" && (kartyMZs[_i] == "HRT" ||  kartyMZs[_i] == "BHRT") || _usplit[0] == "Q") && (_usplit[0] == _splitcard[0] || _usplit[1] == _splitcard[1])
			{
				tablecard = kartyMz[_i]
				--
				if _x != 1
				{
					_cardnum = _i
					--
					if _usplit[0] == "K"
					{
						spoilsofwar += 5
					}
					elseif _usplit[0] == "3"
					{
						spoilsofwar += 3
					}
					elseif _usplit[0] == "2"
					{
						spoilsofwar += 2
					}
					elseif _usplit[0] == "Q"
					{
						spoilsofwar = 0
						warmode = 0
					}
				}
				--
				_x = 1
				--
				dialog = "war"
			}
		}
		elseif gimmethenumber == 2
		{
			if _usplit[0] == gimme || _usplit[0] == "J"
			{
				tablecard = kartyMz[_i]
				--
				if _usplit[0] == "J"
				{
					gimme = RAND(11)
					--
					if gimme < 5; gimme = 5
					--
					dialog = "gimme"
				}
				else
				{
					dialog = "casual"
				}
				--
				if _x != 1
				{
					_cardnum = _i
					--
					_x = 1
				}
			}
			--
			gimmethenumber = 3
		}
		elseif stoprightthere == 1
		{
			if _usplit[0] == "4" || _usplit[0] == "Q"
			{
				if _x != 1
				{
					if _usplit[0] == "Q"; stoprightthere = 0
					--
					tablecard = kartyMz[_i]
					--
					_cardnum = _i
					--
					wait++
					--
					_x = 1
				}
			}
			--
			dialog = "waiting"
		}
		else
		{
			if _usplit[0] == _splitcard[0] || _usplit[1] == _splitcard[1] || _splitcard[0] == "Q"
			{
				tablecard = kartyMz[_i]
				--
				if _x != 1
				{
					_cardnum = _i
					--
					if _usplit[0] == "2" || _usplit[0] == "3" || _usplit[0] == "K" && (kartyMZs[_i] == "HRT" || kartyMZs[_i] == "BHRT")
					{
						warmode = 1
						--
						if _usplit[0] == "K"; spoilsofwar += 5
						elseif _usplit[0] == "3"; spoilsofwar += 3
						elseif _usplit[0] == "2"; spoilsofwar += 2
						--
						dialog = "war_start"
					}
					elseif _usplit[0] == "A"
					{
						_znakiU = RAND(4)
						--
						if _znakiU == 1; _znakiU = "♥"
						elseif _znakiU == 2; _znakiU = "♦"
						elseif _znakiU == 3; _znakiU = "♣"
						else; _znakiU = "♠"
						--
						dialog = "i-want"
						temp =  _znakiU
					}
					elseif _usplit[0] == "J"
					{
						gimme = RAND(11)
						--
						if gimme < 5; gimme = 5
						--
						dialog = "gimme"
					}
					elseif _usplit[0] == "4"
					{
						wait = 1
						stoprightthere = 1
						--
						dialog = "wait-a-sec"
					}
					else
					{
						dialog = "casual"
					}
					--
					_x = 1
				}
			}
		}
	}
	--
	if _x != 1
	{
		if warmode == 1
		{
			for _i=0; _i<spoilsofwar; _i++
			{
				_cardsU = RAND(13) + 1
				_znakiU = RAND(4)
				--
				if _znakiU == 1
				{
					_znakiU = "♥"
					kartyMZs[mzcnum] = "HRT"
				}
				elseif _znakiU == 2
				{
					_znakiU = "♦"
					kartyMZs[mzcnum] = "DMD"
				}
				elseif _znakiU == 3
				{
					_znakiU = "♣"
					kartyMZs[mzcnum] = "TRE"
				}
				else
				{
					_znakiU = "♠"
					kartyMZs[mzcnum] = "BHRT"
				}
				--
				if _cardsU == 11; _cardsU = "J"
				elseif _cardsU == 12; _cardsU = "Q"
				elseif _cardsU == 13; _cardsU = "K"
				elseif _cardsU == 1; _cardsU = "A"
				--
				kartyMz[mzcnum] = _cardsU + " " + _znakiU
				--
				mzcnum++
			}
			--
			dialog = "war-cards"
			warmode = 0
			spoilsofwar = 0
		}
		elseif stoprightthere == 1
		{
			stoprightthere == 3 //M-201z waits turns
			--
			dialog = "waiting"
		}
		else
		{
			if gimmethenumber == 2; gimmethenumber = 0
			--
			dialog = "take"
			--
			OnMzTakeCard
		}
	}
	else
	{
		for _j = _cardnum; _j <= mzcnum ; _j++
		{
			kartyMz[_j] = kartyMz[_j+1]
		}
		--
		mzcnum--
		
	}
	--
	turn = username
	--
	OnSetTable
}

OnMzTakeCard
{
	_cardsU = RAND(13) + 1
	_znakiU = RAND(4)
	--
	if _znakiU == 1
	{
		_znakiU = "♥"
		kartyMZs[mzcnum] = "HRT"
	}
	elseif _znakiU == 2
	{
		_znakiU = "♦"
		kartyMZs[mzcnum] = "DMD"
	}
	elseif _znakiU == 3
	{
		_znakiU = "♣"
		kartyMZs[mzcnum] = "TRE"
	}
	else
	{
		_znakiU = "♠"
		kartyMZs[mzcnum] = "BHRT"
	}
	--
	if _cardsU == 11; _cardsU = "J"
	elseif _cardsU == 12; _cardsU = "Q"
	elseif _cardsU == 13; _cardsU = "K"
	elseif _cardsU == 1; _cardsU = "A"
	--
	kartyMz[mzcnum] = _cardsU + " " + _znakiU
	--
	mzcnum++
}

Select.music
{
	_print = "\b2Choose Playlist:\n\n[half]\![*]\q[All songs,OnAllSongs]\n"
	--
	for _i=0;_i<playlists;_i++
	{
		_print += "\![*]\q[" + plistname[_i] + ",OnPlaylist," + _i + "]\n"
	}
	--
	_print += "\n[half]\![*]\q[New Playlist,OnNewPlaylist]\n"
	--
	_print

}

OnAllSongs
{
	_print = "\b2\f[bold,1]All Songs:\f[bold,0]\n\n[half]"
	--
	music = FENUM("aud","+")
	music = SPLIT(music,"+")
	_num = ARRAYSIZE(music)
	--
	for _i=0;_i<_num;_i++
	{
		_print += "\![*]\q[" + music[_i] + ",OnPlay," + _i +"]\n"
	}
	--
	_print += "\n[half]\q[Close,cancel]"
	--
	_print
}

OnPlay
{
	songnum = TOINT(reference0)
	curplaying = music[songnum]
	nextplaying = music[songnum+1]
	--
	if musicp != 1
	{
		musicp = 1
		--
		if mode == 1; "\p[15]\s[27]\p[16]\s[28]\p[17]\s[29]\p[18]\s[30]\p[19]\s[31]\p[20]\s[32]\p[21]\s[40]"
		else; "\p[15]\s[33]\p[16]\s[34]\p[17]\s[35]\p[18]\s[36]\p[19]\s[37]\p[20]\s[38]\p[21]\s[39]"
	}
	--
	playing = 1
	--
	"\![sound,play,aud/%(curplaying)]\![sound,load,aud/%(nextplaying)]"
}


Select.aninews
{
    "\_qDownloading News . . .\![execute,http-get,https://www.animenewsnetwork.com/,--async=OnAnimeNews,--file=ranimenews.html,--timeout=200]"
}

OnAnimeNews
{
        
    _file = "var\\ranimenews.html"
    _buff=""
	animerecom = "\b6\_q"
	_reganimehref = '<span><a href="(.*)">'
    _reganimeheadline = '<span><a href="' + _reganimehhref + '">(.*)</a></span>'
    _found = 0
    FCHARSET(1)
    --
    if FOPEN(_file,'r') {
		for _buff = FREAD(_file); _buff != -1 && !_found; _buff = FREAD(_file) {
			for _i=0;_i<8;_i++
			{
				if RE_SEARCH ( _buff, _reganimehref ) {
						
					_newshref[_i] = RE_GETSTR[1]
				}
				--               
				if RE_SEARCH ( _buff, _reganimeheadline ) {
						
					_newsheadline[_i] = RE_GETSTR[1]
				}
			}
		}
    }
    --
    FCLOSE(_file);
	--
	for _i=0;_i<8;_i++
	{
		animerecom += "\q[" + _newsheadline[_i] + ",OnHeadlineClick," + _newshref[_i] + "]\n"
	}
	--
	animerecom
	
}