OnFileDrop2
{
	_filepath = SPLITPATH(reference0)
	_filename = _filepath[2]
	_fileext = TOLOWER(_filepath[3])
	case _fileext
	{
		when ".jpg", ".jpeg", ".bmp"
		{
			"%(_filename)%(_fileext) is an image file.\e"
		}
		when ".mid", ".wav", ".mp3", ".wma", ".au" 
		{
			"%(_filename)%(_fileext) is a music file.\e"
		}
		others
		{
			"\0\s[0]This is %(_filename)%(_fileext).\e"
		}
	}
}

OnInstallBegin
{
	"\0\s[0]Installing . . .\w8This zip or nar contains an install.txt file.\e"
}

OnInstallComplete
 {
	"\0"
 	--
	if reference0 == "shell" 
 	{	
		if reference1 == "Hypothetical Shell that doesn't actually exist" 
		{
		"\s[0]We have installed Hypothetical Shell.\w8Truncated for space.\e"

		}
		elseif reference1 == "Another totally real shell wow"
		{
		"\s[0]We have installed another totally real shell.\e"

		}
		else 
		{
		"\s[0]I have installed a new shell.\w8It's called  %(reference1).\e"
		}
 	}
	elseif reference0 == "ghost"
 	{
		"\s[0]I have installed a new Ghost.\w8It's called %(reference1).\e"
 	}
	elseif reference0 == "balloon"
 	{
		"\s[0]I have installed a new balloon.\w8It's called %(reference1).\e"
 	}
	elseif reference0 == "plugin"
 	{
		"\s[0]I have installed a plug-in.\w8It's called %(reference1).\e"
 	}
}

OnInstallFailure
{
	"\0\s[0]The installation has failed.\n\n[half]\w5"
	--
	if reference0 == "unsupported"
	{
	"This file is unsupported.\e"
	}	
	elseif reference0 == "extraction"
	{
	"The file could not be extracted properly.\e"
	}
}

OnInstallRefuse
{
	"\0\s[0]We can't install this. \w4It may be for %(reference0) instead.\e"
}

OnVanishSelecting
{
	"\0\s[0]Uninstaling the blob? Cruel\e"
}

OnVanishSelected
{
	"\0\s[0]Truly a sad day for the blob community.\w8Bye.\w9\w9\e"
}

OnVanishCancel
{
	"\0\s[0]The only correct choice\e"
}

TalkVanishButtonHold
{
	"\0You're on thin ice\e"
}

OnVanished
{
	"\0\s[0]%(reference0) wasn't a blob, so it was discarded\w8\0\s[0]Harsh.\e"
}

OnBIFFBegin
{
	"\0\s[0]This is the starting dialogue for checking email.\e"
	
	"This is another starting dialogue for checking email.\e"
}

OnBIFFComplete
 {
	if reference0 == 0
 	{
 		"\0\s[0]There is no new mail.\e"
	}
	elseif reference0 == 1
 	{
 		"\0\s[0]There is one new email.\e"
	}
	elseif reference0 > 1 && reference0 < 11
	{
		"\0\s[0]There are %(reference0) emails.\e"
	}
	elseif reference0 > 100
	{
		"\0\s[0]There are %(reference0) emails unread.\w8Woah.\e"
	}
 	else
	{
		"\0\s[0]There are %(reference0) emails.\e"
 	}
}

OnBIFFFailure
 {
	if reference0 == "timeout"
 	{
 		"\0\s[0]The connection has timed out.\e"
	}
 	elseif reference0 == "kick"
	{
		"\0\s[0]We can't access the account.\e"
 	}
	elseif reference0 == "defect" 
 	{
 		"\0\s[0]The email account was not set up properly.\w8It can be reset at the POP menu.\![open,configurationdialog]\e"
	}
 	else
	{
		"\0\s[0]We can't connect to the account.\w8The error returned is '%(reference[0])'.\e"
		
 	}
}

OnUpdateBegin
{
	"\0\s[0]Looking for changes in blob\w8\e"
}
 
OnUpdateReady
 {
	"There are %(reference[0]) new changes for blob.\w8\e"
	
}

OnUpdateComplete
{
	if reference0 == "none"
 	{
 		"There are no changes for blob.\e"
	}
 	else
	{
		"Blob change successful!\e"
 	}
}

OnUpdateFailure
{
	if reference0 == "timeout"
 	{
 		"The update connection has timed out.\e"
	}
 	elseif reference0 == "md5 miss"
	{
		"The MD5 hash of the files don't match.\e"
 	}
	else
 	{
 		"The update could not be completed.\w8\0\s[0]The error is '%(reference0)'.\e"
	}
}

OnUpdate.OnDownloadBegin
{
    "\_q"
    --
	"Blup"
	"Blip"
	"Blop"
    --
    "\_q"
}

OnUpdate.OnMD5CompareBegin
{
	"Checking the MD5 value.\e"
}

OnUpdate.OnMD5CompareComplete
{
	"\0\s[0]MD5 check good.\e"
}

OnUpdate.OnMD5CompareFailure
{
	"\0\s[0]The MD5 values don't match.\w8\e"
}

OnHeadlinesenseBegin
{
	"\0\s[0]You've selected %(reference0).\e"
}

OnHeadlinesense.OnFind
{
 	if reference2 == "First" || reference2 == "First and Last"
	{
		"\0\b2\s[0]%(reference0):"
 	}
	elseif reference2 == "Next"
 	{
 		"\0\b2\s[0]%(reference0):"
	}
 	elseif reference2 == "Last"
	{
		"\0\b2\s[0]%(reference0):"
 	}
	--
	"\n\n%reference3\n"
 	--
 	if reference2 == "First" || reference2 == "Next"
	{
		"\![*]\q[Next,] - \![*]\q[Stop,Headline_Cancel]\e"
 	}
	else
 	{
		
 		"\![*]\q[Stop,Headline_Cancel]\e"
 	}
	
}

Select.Headline_Cancel
{
	"\0\s[0]Headline viewing complete.\e"
}
 
OnHeadlinesenseComplete
{
	"\0\s[0]No update. %(reference0).\e"
}

OnHeadlinesenseFailure
{
	"\0\s[0]The feed can't updated.\w8Why not?\w8\0\s[0]\n\n[half]"
 	--
	if reference0 == "can't download" 
 	{
		"It can't be downloaded."
 	}
	elseif reference0 == "can't analyze"
 	{
		"It can't be analyzed."
 	}
	else
 	{
		"I don't know."
 	}
	--
 	"\e" 
}

OnUpdatedataCreating
{
	"Creating the updates2.dau file.\e"
}

OnUpdatedataCreated
{
	"\0\s[0]Successfully created updates2.dau.\e"
}

OnNarCreating
{
	"\0\s[0]Creating the .nar file.\e"
}

OnNarCreated
{
	"\0\s[0]Successfully created '%(reference0)'.\e"
}

OnSNTPBegin
{
	"\0\s[0]Blob is checking time.\w9 Connecting to %(reference0).\e"
}

OnSNTPCompare
{
 	"Retrieved Time: %reference1[1]/%reference1[2]/%reference1[0] %reference1[3]:%reference1[4]:%reference1[5]\w2\n/
	Your Time: %reference2[1]/%reference2[2]/%reference2[0] %reference2[3]:%reference2[4]:%reference2[5]\w2\n/
 	\n"
	--
 	if reference3 == 0
	{
 		"\0\s[0]Your clock is accurate.\e"
	}
 	else
	{
 		"\0\s[0]Your clock doesn't match.\w6\nShould Blob fix it?\n\n[half]/
		\![*]\q[Fix it,OnSNTPEXECUTE]\n/
 		\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
	}
}

OnSNTPEXECUTE
{
	"\0\s[0]The clock has been fixed, you have conformed to the rules of the world.\6\e"
}

OnSNTPCANCEL
{
	"\0\s[0]Time is what you want it to be.\e"
}

OnSNTPFailure
{
	"\0\s[0]The clock disagreed with the change\e"
}

OnDisplayChange
{
	displaybpp    = reference0
 	displaywidth  = reference1
	displayheight = reference2
}

OnScreenSaverStart
{
	"\0\s[0]The screensaver is starting.\w7Wiggle your mouse!\e"
	//Replace with what you want.
}

OnScreenSaverEnd
{
	"\0\s[0]The screensaver is gone.\e"
	//Replace with what you want.
}

OnApplicationBoot
{
	"\0\s[0]%(reference0) just started.\e"
}

OnApplicationClose
{
	"\0\s[0]%(reference0) has closed.\e"
}

OnApplicationFileOpen
{
	"\0\s[0]Opening %(reference1).\e"
}

OnBatteryLow
{
	"The laptop's battery is low. \w8\0\s[0]There is %(reference0) power left.\e"
	//reference0 here is the amount of battery power. Replace as you like.
}

OnBatteryCritical
{
	"\0\s[0]The laptop's battery is critically low.\e"
}

OnSysResourceLow
{
	"\0\s[0]The system resources are low.\e"
}

OnShellScaling
{
	if reference0 >= 150 //this number is the percentage that you're scaling the ghost up to. In this case, it's 150%.
	{
		"\0\s[0]Big Blob\e"
	}
	elseif reference0 == 100 //this is 100%
	{
		"Blob\e"
	}
	elseif reference0 == 50 //this is 50%. You can add any percentage that's listed under shell scaling if you want using more elseifs.
	{
		"\0\s[0]Smol blob\e"
	}
}
