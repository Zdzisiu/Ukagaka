 OpenSakuraMenu
{
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]"
	else; "Meow"	
	--
	MenuRun
} 

MenuRun
 {	
 	wd = GetWeekDay
 	ap = GetAP
 	nowmin = Getnowmin
 	nowhour = Getnowhour
	--
	"\n\n\_q\b2" 
	--
	if lastTalk != ""; "\![*]\q[Last Meow,OnLastTalk]\n"
	--
 	"\![*]\q[Meow,altalk]\n\n[half]"
	--
	"\![*]\q[Config Menu,configmenu]\n/
	\![*]\q[Silent Mode: %(silence),silencecat]\n/
	\![*]\q[Relax Mode: %(purrmode),timetopurr]\n/
	\![*]\q[Functions,dosomething]\n\n[half]/ 
 	\![*]\q[Nevermind,CANCEL]\n\n\n[half]%(wd) %(nowhour):%(nowmin) %(ap), %(month)/%(day)/%(year)\e"
} 

Select.silencecat
{
	if silence == "OFF" 
	{
		silence = "ON"
		talktimetrue = talktime
		talkint = aitalkinterval
		--
		talktime = "SILENCE"
		aitalkinterval = 0
	}
	else
	{
		silence = "OFF"
		talktime = talktimetrue
		aitalkinterval = talkint
	} 
} 

Select.timetopurr
{
	if purrmode == "OFF" 
	{
		purrmode = "ON" 
		talktimetrue = talktime
		talkint = aitalkinterval
		--
		talktime = "SILENCE"
		aitalkinterval = 0
		--
		"\![sound,loop,s/long purr.wav]"
	}
	else
	{
		purrmode = "OFF"
		talktime = talktimetrue
		aitalkinterval = talkint
		--
		"\![sound,stop]"
	} 
}

Select.altalk
{
	AiTalk
}


OnLastTalk 
{
	"%(lastTalk)\e"
}


GetWeekDay
{
	if weekday == 0; "Sun"
	elseif weekday == 1; "Mon"
	elseif weekday == 2; "Tue"
	elseif weekday == 3; "Wed"
	elseif weekday == 4; "Thu"
	elseif weekday == 5; "Fri"
	else; "Sat"
}

GetAP
{
 	if hour >= 0 && hour <= 11; "AM"
 	else; "PM"
}

Getnowmin
{
	if minute >= 0 && minute <=9; "0%(minute)"
	else; "%(minute)"
}

Getnowhour
{
	if hour12 >= 0 && hour12 <=9; "0%(hour12)"
	else; "%(hour12)"
}

Select.BACKTOMENU
{
	MenuRun
}


Select.configmenu
{
	TalkConfig
} 

TalkConfig
{
	"\0\b[2]\_q" 
	--
	"\f[bold,1]Cats name:\f[bold,0] %(catname) \f[sup,1](\q[Change it?,catnamechange])\f[sup,0]\n"
	--
	"\f[bold,1]Meow Rate:\f[bold,0] - %(talktime) \f[sup,1](\q[Change it,talkinter])\f[sup,0]\n\n"
	--
	"\![*]Volume: %(volume) \q[Set Volume,setvol]\n\n"
	--
		{
		"\![*]Enable Uninstall? (NOW : %(deleteshitai))\n\q[ON,deleteon] \q[OFF,deleteoff]\n\n[half]\n"
		}
	--
	"\![*]\q[Back to the menu,BACKTOMENU]\e"
} 

Select.catnamechange
{
	"\![open,inputbox,OnCatName,-1]"
}

Select.setvol
{
	"\![open,sliderinput,OnSundVol,-1,%(volume),0,100]"
}

OnSundVol
{
	volume = reference0
	--
	if purrmode == "ON"; "\![sound,option,s/long purr.wav,--volume=%(volume)]"
	--
	TalkConfig
}

OnCatName
{
	catname = reference0
	--
	TalkConfig
}

Select.deleteon
{
	deleteshitai = "ON"
	TalkConfig
}

Select.deleteoff
{
	deleteshitai = "OFF"
	TalkConfig
} 

Select.talkinter
{
	"\0\s[0]\b2How often does the cat meows? Right now: %(talktime)\n\n[half]/
	\![*]\q[Every 30 seconds,TALKMAX]\n/
	\![*]\q[Every minute,TALKHIGH]\n/
	\![*]\q[Every 3 minutes,TALKNORMAL]\n/
	\![*]\q[Every 5 minutes,TALKPOOR]\n/
	\![*]\q[Don't meow,TALKNONE]\n\n[half]/
	\![*]\q[Don't change,TalksTill]\e"
}

Select.TalksTill
{
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
	--
	TalkConfig
}

Select.TALKMAX
{
	talktime = "30 seconds" 
	aitalkinterval = 45 
	
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}

Select.TALKHIGH
{
	talktime = "minute"
	aitalkinterval = 90
	--
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}

Select.TALKNORMAL
{
	talktime = "3 minutes"
	aitalkinterval = 270
	--
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}

Select.TALKPOOR
{
	talktime = "5 minutes"
	aitalkinterval = 400
	--
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}

Select.TALKNONE
{
	talktime = "SILENCE"
	aitalkinterval = 0 
	--
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}


Select.TEACHNAME
{
	OnTeachName	
}

Select.CANCEL
{ 
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
}

Select.dosomething
{ 
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]"
	else; "Meow"
	--
	"\![*]\q[Open Calendar,CALENDAR]\n/
	\![*]\q[Check Email,MailCheck]\n/
	\![*]\q[Open SSP Preferences,sspconfig]\n/
	\![*]\q[Empty Recycle Bin,ChoiceGarbagecan]\n/
	\![*]\q[System Information,ChoiceSystemInformation]\n\n/
	\![*]\q[Back to main menu,BACKTOMENU]\e"
}


Select.CALENDAR
{
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\![open,calendar]\e" 	
	else; "\0\s[0]Meow\![open,calendar]\e" 
}


Select.sspconfig
{
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\![open,configurationdialog]\e" 
	else; "\0\s[0]Meow\![open,configurationdialog]\e" 	
}


Select.ChoiceGarbagecan
{
	_gomicheck = FUNCTIONEX("gomi.dll", "-n")	
	
	if _gomicheck == 0 
	{
		if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]It was empty.\e"
		else; "Meow, It was empty."
	}
	elseif _gomicheck >= 1 
	{
		if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\![raise,OnGarbagecanEmpty]\cDone.\e" 
		else; "\0\s[0]Meow\![raise,OnGarbagecanEmpty]\cDone.\e" 
	}
} 

OnGarbagecanEmpty
{
	_gomi = FUNCTIONEX("gomi.dll", "-f")
}


Select.ChoiceSystemInformation
{
	os_name = FUNCTIONEX("saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori_cpuid.dll","cpu.clockex")
	"/
	\0\s[0]\b[2]/
	\_q\f[bold,1]OS:\f[bold,0] %(os_name) %(os_version)\n/
	\f[bold,1]Memory Load:\f[bold,0] %(memoryload)%\n/
	\f[bold,1]Physical Memory:\f[bold,0] %(memoryavailphys) KB\n/
	\f[bold,1]CPU:\f[bold,0] %(cpu_name) %(cpu_clockex)MHz\n/
	\f[bold,1]Ukagaka:\f[bold,0] %property[baseware.version]/
	\e"
} 

Select.MailCheck
{
	"\![biff]\e"
} 

Select.HEADLINECANCEL
{
	"\0\s[0]Finished with headlines.\e"
} 

OnChoiceTimeout
{
	if silence != "ON"; "\0\s[0]\![sound,play,s/%(meows),--volume=%(volume)]\e"
	else; "Meow"
} 